%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Para_S1.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Anirikh Chakrabarti
%%CreationDate: 5/5/11
%%BoundingBox: 0 0 719 272
%%HiResBoundingBox: 0 0 718.0649 271.7471
%%CropBox: 0 0 718.0649 271.7471
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 8048 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C457D7DFD05FFA8FFA8A8A8FFA8A8A8A9A8A8A8FFA8A8A8FFA8A8A8FF%A8A8A8FFA8A9A8AFA8A8A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8A8A8AFA8A8%A8FFA8FFFFA97DFFFFA97DA87DFFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FF%AFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8527DFD04FFA8A8A8FFA9FFA8FFA9FFA8FFFFFFA8FF%A9FFA8FFA8FFA8FFA9FFA8FFFFFFA8FD09FFA8FFA8FFA9FFA8FFA9FFA8FF%FFFFA8CAA8FF5327A8FFA87D5253FD04A87DA87DA884A8A8A884FD07A884%FD04A8FFA8A8A8FFFD0EA884A8A8A884A87DA884A8A87DFFFFFFA8FF7DA9%FD1AFF52FD047DA87D7D7D7E7D7D7DA8A7FD0DFFA8FFFFA87DFD07FFA8FF%52277DFD13FF7DA87DA87DFD19FFA8FFFFA85252277DFD19FFA85227A852%52527D275253FD0552FD0CFFCAA1A8FD09FFA8A8FF27F87DFD12FF7D27F8%27F82752535252527D527DFD045227A8FD0BFFA8FFFFFFA8A87DAFFD04FF%A8FFA8FFFFA8A8FFA8FFA8FFA8A8A8FFFFA8A8FFFFFF7DFFA8A8FFFFA8FF%A8A9FFFFA8FD0FFFA1FD0BFFA8FF27277DFD12FFA8527D525252A87DFD06%A87D7DFD04A8FD0BFFA8FD06FFA8FD04FF7D2752277D5227F82752522752%7D2752A852272759FD05277D5252522727525227A1C3FD0CFFCACAA8FD09%FFA8A8FF27F87EFD12FFFD06A87D52527D7D7D5252537D59A8527D527D7D%5228522752527DFFA8FD06FFA8A8FFFFFFFD05A8FFA8A8A8AFA8A8A8FFA8%A8A9FFFD08A87DFFA8A8A87E7DAFA8FD0FFFCAA8FD0AFFA8FF27277DFD12%FFCA7DA87DA87DA87DA8A8FFFD05A8FFA8FFA8A87EA97DFD06A8FF844B52%A87DA87DA8FD31FFC9FFFFFFA8527DFFFFFF277DFD04FFA8A8FF27F8A8FD%12FF7C6F686F68755252277D7D7D5252527D527D52525952527D52FD06FF%A85252FF527D27A8A8FD2DFFCACFFD04FFC3BC207DFFFFAF7DA8FD05FFA8%FF27277DFD12FFCA76A19AA17CFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF%FFA8FD06FFA82752A8FFA8A8A8FD2DFFCAFFFFFFCACACAFF9A4B7DFFFFFF%F87DFD04FFA8A8FF27F8A8FD31FFA87D52FD32FFCAFD04FFC3C9CA2727FD%04FF527DFD05FFA8FF27277DFD31FFA85252A8FFFFFFA8FD2CFFC9CAFFFF%CABCC9CABC207DA8FFFFFF7EFD05FFA8A8FF27F87DFD31FFA87D27FFA8FF%A8FD2BFFC9CFC9C3CACFBBC3C3C36F9AFD05FF7DA8FFA8FFA8FFA8FF2727%7DFD31FFA87D27A8527D2784FD29FFCAFFC9CFCAC29AC3C275209AC3C3A8%FFFFFF27A8A8525252A8A8FF28F87EFD31FFA87D27FF7DA87DA8A8FD27FF%CACFFFFD04CAC9A04B277DCACACAA8FFFFA8277DFFA8A8A8FFA8FF27277D%FD31FF7E524BA8FFFFFFA8FD21FFC9FFFFCACAFFCACACAC3BCC3FFCA998D%6FC399C9A0CAA8FFFFFF52A8FD04FFA8A8FF27F8A8FD31FFA852F8FD04FF%AFAFFD20FFCFFFFFFFCAC3FFFFCFC3C3CAA84B6F9ACAFFC9CAC9CAA9FFFF%FF527DFD05FFA8FF27277DFD31FFA85252A8A8A87DA8FD23FFCACACAFFBC%CA9AFFC36F4476BCC9CAFFFFFFC3FFA8FFFFFF527DFD04FFA8A8FF27F8A8%FD31FFA87DF8FF527D27A8AFFD23FFCACFC3CAFFCAC34B20C2C3CFCAC9C3%FFC9CFA8A8FFFFFF527DFD05FFA8FF27277DFD31FFA85252A8A87DA8A8FD%23FFCACFC2BCCAC3764B27A0C2C3C3CFCAC3C9CAFFFFA8FFFFFF2E7EFD04%FFA8A8FF27F87DFD12FFA85227A8FD1BFFA87D7DFD26FFCAFFFFCACACACF%6F4B6FC9CAFFCAFFCAFFC9C3CAFD05FFA8277DFD05FFA8FF27277DFD13FF%202784FD08FFA87EFD11FFA85276A8FFFFFFA8FD1BFFCAFD04FFCAC3CFC3%C2C37D204B75C3C9CAC9C9C9FFC9C3C3CAFFFFA8FFFFFF7D7DFD04FFA8A8%FF27F87EFD12FFA927F8A8FD08FFF827A8FD10FFA87D27FD04FFA8A8FD1A%FFCAFD04FFC9CAC9C3BC9A4476A1C9CACFCACFC2CAFFCFC2CAC3FFCAA8FF%FFA87DA8FD05FFA8FF27277DFD13FF27277DFD08FF2727FD11FF84A8A8FF%FF27FFA8FD1DFFCACACAC9A0C36F274AC2C3C9A8C3BCFFC3C9CAFFFFCAC3%FFFFFFA8FFFFFF527DFD04FFA8A8FF27F8A8FD12FFA827F8A8FD08FFF827%A8FD10FFA87D27FFFFA8FFA9A8FD1BFFCAC3C9C9C3C3696F6FCAC9C9FFC9%CACFFFCFFD05FFCFFFFFFFA8FFFFFFA8FD06FFA8FF27277DFD13FF272784%FD08FF2727FD11FFA85227A8FFFFFFA8FD18FFCFCAFFC9FFC3C2B5752093%A1C9CAC9FFCAC2CAFFFFCACAFFFFCAFFFFFFCAFFA8FFFFFF52A8FFA8527D%A8A8FF27F8A8FD12FFA827F8A8FD08FFF827A9FD10FFA852F8FD1DFFC9FF%CAC3BCC9756F6F9AB5C2BCC3C9CAC9CFCACFC3C3C9FFCFCFCAFFFFC3A8FD%04FF277DFF7D527DFFA8FF27277DFD13FF2727A8FD08FF2721FD11FF7E52%52A8A1A87DA8FD16FFCACAFFC2C3A0BC4A6F6FC3C9CA9ACAC3CA9AC2CAFF%C3FFCAFFFFFFC3FFFFFFCAFFA8FFFFA8277EFFFFA8FFA8A8FF27F87D7DA8%FD10FFA827F8A8FD08FFF827A8FD10FFA85227A8277D27A8FD0EFFC9CFCA%FFFFCFFFFFCACFCAC393934B76BBC9C3CACAFFFFCFC9CAC9FFCAFFCAFD09%FFA8A9FFFFFF53A8FD05FFA8FF272759FFA8FD11FF2727A8FD08FF2727FD%11FFA82727A8A17DA8A8FD06FFCFCAFFCAFFFFFFC9CAC3CAC9C3A1C99AC3%93B5696F6FBCC3C9C3CAC2C9CACFFFC9C3FFCAFFCACAFD06FFC3CAFFFFA8%FFFFFF27A8FD04FFA8A8FF27F87DA8A8FD10FFA927F8A8FD08FF2027A8FD%10FFA85227FD04FFA8A8FD0AFFCFA0C2BCBC999A93B593B58DBB93B5C2C9%BCBCCAC9BBCFCFCFC9CFFD04FFC9FFCACACAFD05FFCFFFCAA8FFFFFF7D7D%FD05FFA8FF27277DA8A8FD11FF27277DFD08FF2727FD11FF847727FD04FF%A8FD06FFCA99A0939393B068938CB58CB58CB093BB93BC9ABCBCCAA0BCCA%CAA0CFC3FFCACAFFC2C3CACAFFCACFFD04FFC9FFCACAA8FFFFA8F87DFD04%FFA8A8FF27F87DA8A8A8FD0FFFA827F8A8FD08FFF827A8FD10FFA8A852FF%A8FFA8FD05FFA0BC93938DFD04B5BCC2C2C2BCBCC3BCC3C2C9CAC9BCC3C2%C9C9FFCACAFFFFCACAC3CFC9CAFD05FFCFCAFD06FFA9FFFFA87DA8FD05FF%A8FF27277DA8A8FD11FF27277EFD08FF2727FD11FFA852527D2752277EFF%FFFF7D938CB593BB93BCC2C29AC3C9C9C9CAFFFFFFCAFFCAC2CAFFC9C9FF%FFCAC3FFFFCACAFFCACFFFCACAFFC3FFC9FD07FFA8FD09FFA8A8FF27F87D%A8A8FD10FFA827F87D7DA8FD06FFF827A8A8A8FD0EFFA85252A8527D52A8%FFFFAF768DBBBCCFFFCAC2FD07FFCAFFFFFFCAFFFFFFCAFFFFCAFFC9CAFD%07FFCAFFFFFFCACFFD08FFA8A9FD0AFFA8FF272753A8A8FD11FF27277DA8%A8FD06FF27F8A87DA8FD0EFFA8A8A8FD04FFA8FFFFFF6FA0C3FFFFFFCAFD%0CFFCAC9FFFFCFCAFFFFFFCAFD08FFCACAFD0DFFA8FD09FFA8A8FF27F87D%A8A8FD10FFA827F87D7DA8FD06FF20277DA8A8FD05FFA8A87DFD06FFA8FD%0AFFCACAFD11FFCAFD2BFFA8FF272759AFA8FD11FF27277DA8A8FD06FF27%20A8A8A8FD05FFA82727FD06FFA8FFFFA8A8FFA8A8FD37FFA8FD07FFA8FF%A8A8FF27F87DA8A8FD06FF7DA8FD09FF27F87D7EA8FD06FF21277DA8A8FD%05FF7D2721A87DFD04FFA8FFFFA8277D27FD0CA8A9FD09A8FFFD09A8A9FD%05A8A9A8A8A8FFFD07A8FFA8FFFD04A8FD07FF7D52FF7DFF202752A87D7D%76A8A8FFA827F87D7EA8A8CFA8FFA8A8272752A87D7C76AFA8FFA82727A8%7DA87DA1A8FFA87DF8277DA87DFFA8FF7DFFFFA87D7DA87DA8FD04FFA8FF%A8FD047DFFA8FFFFFFA8A87D7D7DFFFFFFA8FFA8FD047DFFA8FFFFFFA8FD%047DFFFFFFA8FFA8A17D7D7DA8FD0AFFA8A8FFA87DA8FD057DA77DA87DA8%7DA87D8453A87DA884A87DA8FD057DA17DA884A87DA87D7E7DA87DA87DA8%84A8FD057DA87EA8FD06FF5227FD06FFA827272752FD06FF274BF87DFD06%FFF827F852FD06FF2752F852FD06FFFD042752FD11FF7DA87DFD08FF7D7D%52A8FD07FF527D52FD08FF527D7DFD07FF7E527D52A8FD09FF7DA8FD06FF%A87D7DA8A8FD04FF7D7D7D527D7DA8527DA8A8A87D527D7DA87DA8A87DA8%FD047DFD06FFA87DA87DA8FD12FFA8FD09FFA8A8A8FD08FFA884A8FD08FF%A8A8A8FD07FFFD05A8FD1AFF26F827522727275227F82727F85227277D76%F827F82727FD62FFA8FD06FF7D7DA8A87D527DA8FF7DA87D7DA8A87DFFA8%A87DA87DA8FD04FFA8FFA8FD18FF7D277D597D527D527D527D527D52A828%7D52537D7D52FD057D5252527D52A8527D7D7D527D5252527DA859527DFD%14FF7D275252522752527D277D765227A8527D27527D5227525152527D27%7D2752522727522752FD18FFA87D52FD0B7DA87D7D7D52A87E7D52A87D7E%527D528452597D7D527D53FD067DFF52527DFD14FF7D5227522727277D52%52767D527D7D52524B27A82752277D52525227522727762752272752FDFC%FFFD4EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-03-10T13:34:06-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-03-10T13:34:07-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-03-10T13:34:07-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7tpdn/gHQ9W1LWtUl1G2&#xA;uLpbydlh+KOe6dY5AiqWPpl2UgH7O9TiqqPN+ia55gn0CzuZ0uNIvo7fVFX1LcMZbW4dFWRSjEc4&#xA;e3hX7JBKqf8A6Dsv9+XX/SZdf9VcVd+g7L/fl1/0mXX/AFVxVamhWiihmu2NSam8uuhNQNpO3TFV&#xA;36Dsv9+XX/SZdf8AVXFVraFaEqRNdgKakC8utxQih/ee9cVXfoOy/wB+XX/SZdf9VcVecal+aflS&#xA;y82yeWvq2pTXMa3zidb2cRsunWzTyEfvq7yRSRD/AClPbCqlb/m75DWU2tydV+uIHeRI57p1H7k3&#xA;QQM0sTEiIqN1HxGnviqnJ+c/kE2c15bQ6xNbwMY3Yz3KNzqyqqx+s0hq6cT8O3XpUhVG2v5q/lvd&#xA;Qm4Nzq9tDG9upMjXzF2u5WgiUJG8j/bG5p4b70xV6H+g7L/fl1/0mXX/AFVwK79B2X+/Lr/pMuv+&#xA;quKrV0K0BYma7IY1AN5dbCgFB+89q4qhLBhBrxskmJHpTtJC1zJcNRGg9JmErOYzSRth1H4RjK7b&#xA;MkAACL3H4rvSryhoHnDT/MmuXmsagbnTLyWV9PtzcSzcFa5lePijgLEFgZE4ptt9OSa0v178stZ1&#xA;K5v5bfzBLaJeer6YVXZ4jLMJQUYyfsU+ECgqB2FAbVV89eaL/wAvaF5l8xG6uXg0WaGOKwt/qsYZ&#xA;ZI7ev7yW3navK4J/DAqG/K7zVf8An7yyNeiv77TkFzJbtbubKYkRqDUMLSOlS/hirMf0PqH/AFfL&#xA;3/gLL/smxV36H1D/AKvl7/wFl/2TYq0NH1PmSddveNBQenZVrvXf6v8ALFW/0PqH/V8vf+Asv+yb&#xA;FXl+ufnt5G0TWb3SL7zDrIvNPme3uAlpZsvqRsVah9DcVGK0jPLH5w+StejkMPmvUYPRlgt3kubW&#xA;1iQy3CyFKEWzhVpCxJYgDucKp/F5y8pSrI0XnlnMRkDIDYlyYVZ5OCfVuT0WNvsg9Dirm83+VhaR&#xA;3T+ejawyUKtdGwhNKpWqy28bCokXr41xVfb+bPK1xeRWcPnhnuJzxgQNYUkaqCiMbbixrMo2P6ji&#xA;rIv0PqH/AFfL3/gLL/smwK0dH1PmCNdveNDUenZVrtTf6v8APFUHrdpqtjo1/ew63eGW1t5Zo1aO&#xA;yKlo0LANS3BpUb74qqRa95K8x2d9bxX9jqlnbMiX8YkjljQlqp6gqRQsnwnoSNumKoa30XyvperW&#xA;y6NaWlrdPdouoLbKiyVSyn9IShd/sNVa+Ne+Kpp5jttVudEu4NJm9DUHQCCXlwoeQJHKjUqtR/Ed&#xA;QqwnStI/OuDU7CW+1axnsklto72BRT/R0A9dgxjZnkf6Nwd6EUKpdJ5f/wCcgI2jWz12w9BH5sbg&#xA;GWU/uyr/ABemqtV90WgXepAFFCqJfSfz8+vTSJq2miB/hK0qCBy3hUw/uTRv2zJ8XGpK1XFUz0bR&#xA;/wA17bXC19qttNorCyJjqGmBjt4EuxVoukkqSFaEdSTuRxCpZZ6L+e9teQKusafLp/qK1wtxWSYq&#xA;F+P956QHxMuwCgUJ+z8IUqki+Uv+cjmuLy4k13TGeeKeOKM/YX1QgQqFgHBlo7Ft+vvsqm+k+Xvz&#xA;ibRrO2ur2xgvbC5hEs7RoRcwRQhZfsJv6rzSCpA+wpp8RxVDSaN+fqanA5vdLmtfUVAqRpTi6ESy&#xA;Sj0k6FQVI33I74qyDypo/wCatvJeDWtR09UkjtTbSQxeowdaG5V1CxCjEsFo1FFKCtchMEjY0W3B&#xA;KAlcwZCj1r3M9yTU7FVscscqCSJ1kjbdXUgg/IjACDyTKJBo7FIrVrQeb5Y0dXuxDO1xRERgG+q+&#xA;mpKgF6L0J+WQgKJ/H9rdlkTGPcB3317ulo3VPMmg6VeWFlqV9Da3WqSejp8MrcWmkqo4oO5q6/fl&#xA;jQmWKvKPzr/8ld5//wCYm1/5N2OKhB/84p/+SsP/AG0bj/iMeKl7HirsVdirsVfPPmqw/Kl/M2rv&#xA;qkds2oNeXBuS0aE8/VatSVrXIHLEbEuXj0GeceKMJEHyU7C38oW1lI3ll9Ptkkv7BLlrqANC5Zbk&#xA;COQpBLxVgSGO1BXfJRmJcmnNp8mI1OJj7010KaeTQru7J8lSz+oWF1D8EX79bz1TJ8I3YAEbmq89&#xA;z9rJNSFnaG/dU1C68o3At0lEKQQfWuLG5t14Ts6T8QVbg7VX4W8BUKEz9WytIdN1BbnyVDfLHFIJ&#xA;1UKhmeaSn1Z61Cn0PhI3Yr7YpRj/AJj+coNMuVu9c8rW2qQMxLSSzm39NI+DMJCI1LfWFpwr47mm&#xA;6qZWFx+dN7bWk1nqGh3duxRLq4iZ3pwl/fcCI1HMLVd17DYGuKp6R51HlXzB/ihrEsbOc2osBIKD&#xA;05QQ/qdTx4HbvXtTArz/APKnyqNZ0fzXoWp3qzW1zLaSSNbXtvdCOZJ5ZG9GGCW4hgiPpJwrFE7b&#xA;hkHFTirOdG8gWXlzzFLqsd7c3l3r1/HPeGYoqiSGzuasqxqgHNpGJHToO2Ks4xV2KuxV2KuxV2Ku&#xA;xV2KuxV2KrZZY4o2kldY41FWdiAAPcnASBzTGJJoblRtx6xjvGWaF2j4m3kanGpr8SKWTl75GO++&#xA;7ZP03DY78x+vnTG77zRphsr22WdFsI7WeWS9swf3MYkEKqq0KlzU9COmwPbFlniQYjlXMfJ2mLQz&#xA;EozI9XENpdTXESfL8F5j+QTvrPn3zR5vEdwLS9VtNtLi6KerOunPFHzcJUchG0a7bbHL8ETGO5tx&#xA;NflhOdiHAf4gOV97L/zTtvNsnnHyJJo1q91pq6iP0wRZwXSwRCaBhL6kkbyQEryq6MNhlzgvS8Ve&#xA;UfnX/wCSu8//APMTa/8AJuxxUIP/AJxT/wDJWH/to3H/ABGPFS9jxV2KuxV2KsP1D8ovy71C+uL+&#xA;80gS3d1I808pnuRydyWY0WQAVJ7ZWcMSbIc3H2jnhERjOQiERpn5YeQtNjlitdGh9KZ45JI5i9wp&#xA;aIMEPGZpAKCRunXvkoQEeTTn1OTKbnIyI70VF5A8kRQvBFoVikMhVpEW3jAZl50J23P75/8Agjkm&#xA;hUh8leUIeXpaNZpzQxtxgjFUZgzL06EqDirT+R/JrtAz6HYsbVY0tuVvERGsTF41QFaKEZiRTocV&#xA;bh8k+T4ZjPFotkszcgZRBHy+Jmc/FSv2pGP04qmGl6Xp+l2SWWnwi3tUZ3WJakBpXaRzuSfidyTi&#xA;qF81f8ovrH/MFc/8mmxV5H5EPnKK+/Mq70azvVu7jUoZ9IGpW7xLJHJe3DS+j9YjtmZPSY/ab4D8&#xA;FKKC6rOtI1PznfeZJW1rTP0dpS38X6CR3jaRoTY3HrGQxs/x8xXielaVNK4qzbFXYq7FXYq7FXYq&#xA;7FXYq4kAEk0A3JPSmKgLJJVSPkCtW2jDNxDMfsiu/XASyjGykl5KLtYSJmuYbwBJ7W3ZZIkT0Hd/&#xA;iVG5BqilStTTfehxpni63fQe52GKPBe3CY8idifUK6/rrfbqxHzFe6jp+kSWtxeNY6UsMduuqS3D&#xA;LJCUhLxpPDGvMPKSOfw9D02zEnx1w3UeV35dR5u300cUp8YjxTsyMRGwd9zEnpHp5+95nHr/AJs8&#xA;9Qy6FoCyWvlWJfRvb66YQw8LQR0ZIZgHId05Hif2hyCAmp8MgUZbd17fi2UdXAZBMQPGSd63Ej3j&#xA;kRwmq5kPYfIWmQaT+j9LshbtptpbXaWtxbzGb1D60BcueKjkDsSCanfMzTE8J5F0faIAmNpA1uCK&#xA;r+3nukv5r69qWm+fPy8t7OGYx3+otb3E8bzovpu8PKNhBPCGFBzZZUZaCu9CDkOAjdb1H84ItQ1N&#xA;NMsIJrREY6U5EY5v65CrJWSoHp8N/AueoGFUr/Orl/yrD8wKgcfrNrQ13/u7HAoQn/OKf/krD/20&#xA;bj/iMeKl7HirsVdirsVdirsVdirsVdirsVdiqVebOX+FtY4gE/UrjYmn+6m+eKvEPyn1LRvKOqfm&#xA;rqiJLdXdpqsKajZw2qWdupa9uoUNsxuJyyfGWIZV4jYctjir07SvPen+YfM82m2cRMWi38Uf11JI&#xA;p4pvrFlcsCphZ+NOFaN2KnY1AVZtirsVdirsVdirsVdirsVQN0kVlYuEgM9uzk3KOzyfu5GJlIBE&#xA;jNQE0QfIZVKox5bORjJyTFmpdOQ3HLur3/FI7O71Br5IIDDqxRGlvl3ihili+CIW/IuFPJaFe25J&#xA;rtmNGR4qHq7/AC7qdjlxw4DI3j3qPUkHc8XK/f12FPOPzI84+XvLQsrrVbSK88yTTfVotMKRMfTQ&#xA;ChdrYct6fCSOIYN14jKJY+Lcjcc+XIe52GHUcPojKXBL6a4iTKV1sboX8arvKU2flLzx531m31rz&#xA;dMv1cyCJdLtgYAqyJ6sYDiN1b4Sd3qVpxY1IAZ/vDYHX+xvwZo6SJAlvw3GrrunYNH3D+kSPLq2j&#xA;aV5NWHTpIo+M+k1SGNVYmI3EhX0/gRPUjWTkFalOp98vxxxGj1j+n793VZ82pHFH+HJ7t+Ec+exq&#xA;tvgjtDhlhu9NW4LNdSWdzNcMyPHVnktx9l/sbL9ntmRgiRDfm67WzEsp4fpGw6/b197E/wA2L5rX&#xA;zt+Xqi6lh+sai0Rt1AaOXlNbfbrLHQr2PFtq/Tc4r0/FXlH51/8AkrvP/wDzE2v/ACbscVCD/wCc&#xA;U/8AyVh/7aNx/wARjxUvY8VdirsVdirsVdirsVdirsVdirsVSvzV/wAovrH/ADBXP/JpsVeefkfc&#xA;6W115q0mG11G3u9Pu1XUoL+7jurdZjLcR8beOJYoYf7nkVWJaqUO68Tir0CeLTxeaZNZpEBJeOsk&#xA;kIX4jHa3CUJXrwoV9umKpvirsVdirsVdirsVU2mCzpDwcmRWYOFJQcabM3QE8tvHfBe9MhGwT3Lb&#xA;u5MEEkiRmaSNefooQGI9qkDBOVDvZY4cUgCaB6sN17zxHb6UiuYJbmRi/P1JraIqg9dOB4O7ngE5&#xA;rt1322zByar01zPx97u9L2XeQncRHlGR39JvcAb3R/S8x8xefLjVXvtA8jaLJe6lqYeXU9S9QyW9&#xA;tGlZ+KSUiYBZJK1UEV2HI9IxjEg+e5HPbm5BOXHKJNmMfTE1wjjoDcHiux8Ez/L/APKlbGaTVNdM&#xA;WoapdOgMU7SC4RFkX6x6XIxUjWOT9nYKxWlDxIhAnu4e7kU6jUQjRjxcY3M9pDiMTQG3fdcu8U9F&#xA;062s31S4tIbWSzvWke5kuBIzxVqGjki+FUcMJCtDTp0IFcshEGRAFHm4WachjEjIShQjVb+YPUVX&#xA;9iEnvAmu3DtcR2scF+gvoJbhmEhUK0RjTcxkQ/GQNmNajochKXr7gJb7t0MV4QKMicZ4SI8u+z19&#xA;W3l3smaeOXzBbqnKsVvdI9VZfi52zbFgOQo3UbZsQbdBKBFX1YJ+a1veXfm7yethq9tZXVjci5Om&#xA;3dzNaJd8rq29NA0cFwrk+k8YXY1cHcVUli9OxV5R+df/AJK7z/8A8xNr/wAm7HFQg/8AnFP/AMlY&#xA;f+2jcf8AEY8VL2PFXYq7FXYq+WvMdxOP+cuYohIwjN7YVQMeP+8EPbFPR9S4odiryX8hfze1/wDM&#xA;T9Ofpa0tbX9F/VPR+qCQcvrHrcuXqPJ09EUpikvWsUOxV2KpX5q/5RfWP+YK5/5NNirAPyd83a7r&#xA;Xmzz9pWqXt5dpoGpfU7UXaW6oievdAek0EUJbkiITzG21NsVZdpvlyy8v2eiaTaO720OoXMsZcgM&#xA;PXS6nK/AFFFMlBt0xVkuKuxV2KuxV2KqdzcR28DzSV4opaigsxoCaKo3Y7bAYJSAFs4QMiAEp1nz&#xA;DZ6dJbi6uUsoJAshmdl5fa/u2Rh8Kv8AZD1+1t1yjLmESLNfj8buZpdFLKDwgyI2r9N+XOu7d5T5&#xA;m/NKPQjHZXpW/uDHHcTVCm8lgcCWO0aMcgrKh+NWcGpDjY8cwTOWwPLbc9z0MNHjkDKB9Q4hGMeX&#xA;HEbkd5Njh25bf0mGLYX/AJ1M58y6i2j6ZH6c8elrIRIYZJ1T0keiKlPTFFqpJGwH2sgJgE0eX4/A&#xA;cmeGcsUQcf1c674jiF7cXXeQ37qet6F5a8vabaM2nW6HTII4wYBC0Vxd84lZW9d2HN1qz1QkmvHa&#xA;gy4Rid+Y+V/jydVkzZNonaZJ34rEaNbjfnsPV797TfT7bT7W5TVNYe9S/tibVpbhao8Tep6XIRK0&#xA;fHiftbGtOW+WQEQeKd2Nt3HzTnOPh4hDgl6tuYO189+fTfyTXy3HoxWW4s4VEy1jkuxHHHzjDtx4&#xA;mP4ONF6Dp3AOXacQ3I+bia45doyO3dZNGvPe/wADZF20cE1+0/ONbqAnkIKHnFKP3fqsV5HZa0Bp&#xA;XxycQDK+o7u7pbRORjCt+E9/QjnW6jDd2t5rdpc2zmSP6teRcviArFPArUDU/aruOuWRmJCw05cU&#xA;oGpbH9bFfzI1by7Y+bvJNvq1rbXFxfXrw6e00tzFJHL6tuysggjljlAk4H05uK8wjVHGok1ph5q/&#xA;MvTvLvmKx0S4tZZ5r5Y3R4iNg7OpqPYR9yKsVA6mirGPzqYH8sPzAG9Rc2tdjTeOx74qEJ/zin/5&#xA;Kw/9tG4/4jHipex4q7FXYq7FXyv5k/8AWvYf+Y2w/wCoCHFPR9UYodir5r/5w1/6a/8A7d3/AGNY&#xA;pL6UxQ7FXYqlXmxgvlbWCa/7xXHQE/7qbwxV8/8A5XL5w8w6R+YH+FBYaBqk1/bfVFtPqsRRFurl&#xA;pEkeANKpVCEX1Ix8IoBUsxUvVfLmmfmDbeZJ7vzPfRT2l5e27aXaxv6iwBLG5E4A4RceRKjv0r1q&#xA;zKHoGKqUk0iScRC7xiNnMilftKRRKEhuTV22ptkSa6M4xBHPe/wVkt/bwW8c9xWESlVVGHxc36JR&#xA;a/F2wGYAsso4ZSkRHevxbGLzz7bQzBo7izS3n4iL67MbV4iopL6iMrHZnjFNqA17ZinVb7VXm7bH&#xA;2RIjcT4h/NHED3Ub7hL30g5/zf8AKUV08bahbxwxPICSWkMiqgKFfTB48nam4OwOH82LpY9iZTCw&#xA;DImuXQk8vP7GN6n+efllJI7m3jlv5Pgk+qSRArBLxCs0UjcDspYdNyetMplqt7r59Pc7XB7NZzcD&#xA;UfO/qHQSHvo+Q6W8/wBR1zzvq9tNJYrHpGk3EpAmmKy3HJ15S8W4i4MdTv8AEBvSpOYhlECz+Pjz&#xA;dmMBE+EAcUa9Ruq3r0bR4tutHupkPlzyN5b0u3/TF3eC4ju3ZIdTnjM6OvHhNIVi9b43fkY1Y0pX&#xA;lU7GyVHcmo/ju+xwuKcaxRgPEiAZV6TxcxXFyH86t75bbvTtOsdJu0huNSsEWVfStiBAGNx9YhT4&#xA;rhfSBBDFu9F7nsMrHGBoyHly52Orpc+XLAmOOe28uf08Mj9Pq93v6OuPLkOpX0MYhRrMSNdQ3aMW&#xA;iSEsoaGJ0KEPJx5GtQtTQ4nAJSqtud+XcsNacUCbPFXCR1J39RBvYcul7WnjyGpRJC13aSGKNIhK&#xA;0a+qv7r10B+MKjAsSffbMgn5j3/C3XiPUj0yF71e3Ph7t+SNtXtpbZTE0UsbirNFQo3LqRQnYmuW&#xA;xII2cfIJCW9g+fNRH1fTIrW1traVoXk9JFhUusQarcmJPwoPw6DI7QAADZ6splKUhdXv1/WVJ4+G&#xA;v2aoFWIWl1xRRSh9WAk9ab/LLAKaCSTuwL807Ll548i3ZtvWhF6Ip5jO8ax/6VavF+7Mscb8pVB+&#xA;wxLKngMUPTWiiZgzIrMKUYgE7Go/HFXlX51/+Su8/wD/ADE2v/JuxxUPPPyFhhfyOXdFZ1mk4sQC&#xA;R8R6HCFL6awK7FXYq7FXyv5k/wDWvYf+Y2w/6gIcU9H1Rih2Kvmv/nDX/pr/APt3f9jWKS+lMUOx&#xA;V2KpX5q/5RfWP+YK5/5NNirxbyl550PyrN+ZHm2LRaWt5qFpexPAzh7uG6mnginHqkhYnMTS8iF/&#xA;ePIlKKpxV6B5f/MfSvNfmKWwsYJY10a+hT13oRMtzZXJV1C14isbDc9KHviqZfmR57tPJ+hfWmHq&#xA;ahdsYNPgHeTiWLt/kIOp8aDvlWfJwRJdj2VoTqtRHH0PP3Dm8bufO/5p+bdTSTS43t5rSKQlNPRg&#xA;yxlhyJ5Fz8RWm3Wm2as5pzNjmO57gdj6LSw/eS9MiPqrc9By5De/naGtvKv5gaxLdRS398QqrdX0&#xA;Mxm5kByFbhXg7A7gcuXWg8a4icr282+eq0WHhIjHf0iqr9Y7iao7WU20n8mbqa3juby1uZ5IkM9w&#xA;jt6TO7KTHBGvFqhtubiT4fDLI4ZkXThZu3scJcMJRAuo9QO+RPxIEaoo+w/5x8acTxy6mkMsPEM0&#xA;cbOBOfiZKOEqgRk3r1+7LI6OR68mrJ7Wxx0Y49pe4bcr2ve7+Cf6X+UdjZXdw5vJHFoiLNa2UXpG&#xA;cMWmZCZSV+LkF2b7I6rWmGOj3Nm67nAz+0U5xA4QOLkZG6/h6b7c+XPoVbT/ACNrtlJdXNii2UaF&#xA;Fj0mN0lLxVJ6yMsSs3wsxYb0I6ZGOlmLI28mObtXDMRjM8R/n0Rv8N/dXK+9PNJ8tWllZ3d0sVuo&#xA;vElmitLR2nQyGjqIVb04yFK/CoWgPSlTl8MIAJ23vk6/Ua6U5RjcvSQLkK25ermd+ptONLs7qCyt&#xA;GEl1c3Nryil+tSNH6hkZfUkZQGVuNP3f3DL8cSAOZI7/AMfJwdRljKctoxjLf0i6rkPj/Eg2ttRm&#xA;s5Yp730otQnEUJtlntpIQnMARUL0q0amtApHLsRldSrc/UfMU3icBMERswjZvhkDy58u8+Y2TO0t&#xA;RayCa9d5LmKAGe9ZysGyhX4qznj/AHfI1HeteuXRjwmzzrn0cTJk4xUKETLaP8Xl0350vjkkbhNZ&#xA;WIje4P76WULHRYnCjnxJZuSlilKjxpiCecRz/H9iDECxOV8PKt+Y/XVox4FeeKYs4MXIBVZgh5AD&#xA;4lBo1KbV6ZaY720CdAjbdLhBbweYbdIU4F7e7mkoDQs8tvU1O1dsYxA5InkMqvoKSHzb+XZ8xeb/&#xA;AC55ge9SKLy9L6yWbxTSc35hiyslxCiH4RuY296jbCxZniryj86//JXef/8AmJtf+Tdjioef/kH/&#xA;AMoK3/GaT9ZwhS+l8CuxV2KuxV8oecbtLP8A5yxa7kVmjt7myldUpyITTomIFSBXbucU9H1Bo+sQ&#xA;apBLLFFJCIZPSZZeFa8Feo4M4pRx3xQj8VfL/wDziNq9hpw82G7kZPV/R/AKjyE8frNdkVvHFJfT&#xA;ltcw3NtFcwNyhnRZImIK1VxyU0YAjY98UKmKuxVK/NX/ACi+sf8AMFc/8mmxVCXkPkfylpt9qU9t&#xA;YaPYXEqy6jOkMcSyyuwVXl4KPUcs3U1OKufUtEn1m1srCaF7qzu0F7FFSqGWwmeHlTxioV9sVUfN&#xA;/kXS/M95o9xf8mTSp2lMNV4SIwBZHUq3IFo1r02rlWXHxUPNzNHq5YDKUTUjGh8x+pOdL0bTdKgM&#xA;FhD6UZYsQWZzVv8AKcs1PAVoMOPFGAoBq1GpyZjczZ+X3K1tbww8zGSxkdmd2Yu1SxPHkamikkAd&#xA;ugyQiA1zyGVX0/H9verZJg4kCgJoTsPfviqHW1lN41xLLyVai3jUFQqsqhg/xEOeS1BoKdMhw72W&#xA;05Bw8IHv/Z3KqW8KTSTKirLKFEjgbsErxqfapyQiLtgZkgC9gp/UrB2gf0Iy1qT9WYKKxkji3Aj7&#xA;O2xpg4BttyZDNPcWfVz8/er5JrU7mJZYWiMjR+psHjbi/j8J+jBIWKZQlwm6v3r3RHRkdQyMCGUi&#xA;oIOxBBwkWgEg2G+mwxQ4EGoBqRsfbviqAn/479n/AMwt1/yct8VR+KoTUNW0zTvq/wBeuUt/rcy2&#xA;1t6hpzlf7KL7mmKvM/zr/wDJXef/APmJtf8Ak3Y4qHn/AOQf/KCt/wAZpP1nCFL6XwKknmbzt5V8&#xA;rpbv5g1KLTluywtzNy+Mx05UoD05DFU4gnhuIY5oXEkUqrJG6moZWFVYexGKr8VfI/5if+tP3v8A&#xA;r23/AHTI8Qno+lvJP+8V7/zFH/kxFhLEMiwJfIn/ADjR9vzF8rP/AJn4Qsn1Z5e/44Gm/wDMLB/y&#xA;bXArDfzz86a55O8hyazorRpfC5hhDSoJFCyE8vhO3bFVL8pfzIufMXkjRtQ1omTVr55Y55YY1SIN&#xA;9akhjHGv8qrWgxVmXmr/AJRfWP8AmCuf+TTYq15o8r6L5n0aXR9ZhM9jMyOyKzIwaNgylXUhhuO2&#xA;KsI1/wAhzeX3sH8laLBdtqWqWja+b0/Wf3ESPGZgLhmCHi7BnT4t9hirPf8AD2gf9W21/wCREf8A&#xA;zTirGfzD0q/tPLUkvlTR7WbWPWiWNPqcMwCM4DEqzRfCP2iKmlaCu4VY9+XNh5/udXjj84eXrC10&#xA;46fJJOyW1stL760AiqULEgxmT24hD9pjVVnOtQ+S9E0ybVNVtrK0sLfj61xJDHxXmwRRspJLOwUA&#xA;dScVeJ+c/PWvLrtwPLsHloaE7INKuWl06SSVRA8k7cXkRlcR8nCsuzemDszVVp6JpHm78uotI0uP&#xA;zBPo0OvSw2cWpwwrDJHHfXMXJo+cYdFHJH3LUA3JxWlD8wPMflS18n39x5UuNAn15REbON5bGhUy&#xA;p6pHNgpKwszLXvTFWJflr5p1u/8ANP1bzXB5bg0dopUR7ZrH4rz1IyEjKu7N/fAJtuhVieR3Vp6Q&#xA;fMf5TLAs7XmjLG0sVuAxtwwlnbhEhQjkCx6VHTfpvitPOvNWoef73XNXXyHpOjatpNu9k2mzwx2M&#xA;9Y5IGM5Y+pUfGHoTTcKAKV5KvU/K+iJN5c02XXtIsodZe3ja/iSCKizFRzGwIBr1ANPDFVPzXojR&#xA;aKz+X9JspdTE9qEje3hIMTXMYuPtcAP3Jc1riryjSIfz4bUbBb/ytpS2klzbi/YW1qCsLORLuGO2&#xA;zgsNwgjIFWaqr3S10nSrSUzWtnBbysvBpIokRita8SVANK4qisVS7WfL2k6z9T/SMPrfUbhLq2+J&#xA;lpLH0rxI5DxU7HFUFrnkby1rkd3FqlvNcW9+VN5bC6uo4JSgVVLQxypHUCNf2e2KsJk/LG20t7zT&#xA;vL+lzWVi09q1hJb3U6xLG7It2ZQ1xViodnFF340+ZVlWlflh5K0iR5dLs57KSReDvBe3sbFa14kr&#xA;MNsiIgcmUpk8yt1z8rPI+vrCuuWM2prbljALu8vJghenLjzmNK8RXCxYfoHk/wAxR6tpQn0R9Otj&#xA;cXw1GW3vrlTHb8m+qhJI7nnXjQEgfEeoGFXog8qaWBQT6h9Opagf1z4FYj5x/Kbyy9vfa9pWjfXf&#xA;NvFTb3c91dPKzKFjJ5vNuViBCgnsBiqD0H8tLPWb2/k826IyxKlsbAPc3FQzxf6RHVLqblwYDc/R&#xA;t0BiCyjOQ5Fnf+FdM/3/AKh/3Er/AP6r4WLz3VPyus/Luq2Q8k+X1jsruO4GqtHc3Ef71Iz9U5H6&#xA;xGePqMa06CuFU/8AKP5eaUNMsdS1WxmtPMHp/wCkPFe3aOpoUFCk5pVKVAPtkaF2niNUmur/AJde&#xA;U9ZszZavBc6hZlg5t7m+vZY+S9DxeYiowoebWvknzZpEd7Y6boBhsoFvTpQtbueJEkS/ZrWQL9aq&#xA;pktgWPWjcNqlhhV6XZ+ULKbS4U1Jr0zzQqL2A6lftHzZB6icTcOONailT9OBWR4q7FXYq7FXjmo/&#xA;nn5q0nW7ixvfJF/c2yXLwxXFok7FYkuZIfUekUiN8CBhwbft2OKpTe/mvqHn2wi8sap+Xer2um6z&#xA;d6faXVxc+ukSxXFwjPIGSJGrGqmQVopCksafCyrFtP0bynd6XqNhbfllq9pHDZXNxB9YuL0pzp6D&#xA;Qr8HPiqMeXGp5qVUHZipROgaJoel6PrN9dflzLdWmlzWJ063hN+UuGuY51M0MdyhljWNJ+Q+Dksj&#xA;jcU5Yqg9K8l+SL7XrLym/wCV+t21lbXlzOmoy3c4hD8Ctw9QvE8jp/CNagMabjkMUKOl3ui2+s6P&#xA;rGm/lPq1pfw3QFpPeS3cixej6NaL6Z4sAi8K+L191KtrOmeSp9Fu9Yvfyo12W8TUI7CayjuLk+pG&#xA;sAm51UBmi5ov7G9FNR9nFCe+TfO8fkea60ny7+WWtxCYRC5laW5niaWGz9RFDyRNuBSIcR0ANO2K&#xA;pq3/ADkN5zHqT/8AKu9TaCNmJhRJzKI0QjdjCFq0g5KQD8AO1aVVeu+UtXvtY8t6fqd/ZtYXd3CJ&#xA;JrV1ZCpPfjIFdeQ+IKwqK0O+KptirsVdirsVdirA/Pmk/mtcazFeeTdTtLW1jtCjW15UxtccnqxU&#xA;I3VWWhJ6jtvyVQJsPz5M0H+5HS0Sjm6IFQWHMqI1MFQrHgBViQtaktvhVdFpX53paoTq1gboyTvc&#xA;jiGVlMSLGsVYvgHNXK1rSo5c96qquk6d+dq6jZNqmq6a9kY5xqCQJQiQs4gMVYq0CFC1T9rxGKoC&#xA;LRfz9gstPtota0+WRI2W+uZwrMSsknp8aQfExiEXInvz9jiqL1zSfzrZhcaLq1jHP6HFoLgBoPUa&#xA;2gViqiLlUXCSshLftbim2BUVqlj+chnmbT9Q0702e2EKFeKqi2yi4J5RO3x3HMqOX2eO43GFUr/R&#xA;H5/q91INZ0xn+rotsCvwmZWepZfRAApINx144qsNl/zkAmm2lvFfacdUKTyXt2/E2/Npm9NUUxl6&#xA;iMg02Xtiq+707/nIQyVtNT0lI2gDcJVDlbipPDksC1j+KhPGvwg9yMVXrpP5+m4JfWtKSKS4PLhD&#xA;XhbAz8VQMm7EGP4j7bHi3JVEavp/54zeZ5Dp2p6ZB5aF1G0alSbo2yiMsu8bKGYhgTU9flgV6Nir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BA2DD52773216811AE07D53D7F7EBAAA</stEvt:instanceID>
                  <stEvt:when>2011-03-10T13:34:07-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:94782b2b-b887-a548-af0c-54e93ec08a6c</stRef:instanceID>
            <stRef:documentID>xmp.did:F77F117407206811ACAFB8DA80854E76</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:BA2DD52773216811AE07D53D7F7EBAAA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:BA2DD52773216811AE07D53D7F7EBAAA</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>262.113889</stDim:w>
            <stDim:h>99.998375</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999405</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998795</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999702</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999104</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999401</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998802</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999103</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Crosses Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=70 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=50 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=65 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>65.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=85 Y=60 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -271.747 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 271.747 li
718.065 271.747 li
718.065 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
348.381 226.794 mo
345.233 226.794 li
37.3813 226.794 mo
40.5317 226.794 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 48 /zero putdup 52 /four putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PTVRLA+Helvetica /Helvetica findfont ct_VMDictPut/PTVRLA+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero 3{/.notdef}rp /four 203{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 231.132 mo(0.4)sh348.381 197.294 mo
345.233 197.294 li
37.3813 197.294 mo
40.5317 197.294 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero 3{/.notdef}rp /four /.notdef /six 201{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 201.624 mo(0.6)sh348.381 167.794 mo
345.233 167.794 li
37.3813 167.794 mo
40.5317 167.794 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero 3{/.notdef}rp /four /.notdef /six /.notdef /eight 199{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 172.124 mo(0.8)sh348.381 138.294 mo
345.233 138.294 li
37.3813 138.294 mo
40.5317 138.294 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one 2{/.notdef}rp /four /.notdef /six /.notdef /eight 199{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf22.2798 142.624 mo(1)sh348.381 108.844 mo
345.233 108.844 li
37.3813 108.844 mo
40.5317 108.844 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 199{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 113.171 mo(1.2)sh348.381 79.3438 mo
345.233 79.3438 li
37.3813 79.3438 mo
40.5317 79.3438 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 83.6709 mo(1.4)sh348.381 49.8438 mo
345.233 49.8438 li
37.3813 49.8438 mo
40.5317 49.8438 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 54.1787 mo(1.6)sh348.381 20.3438 mo
345.233 20.3438 li
37.3813 20.3438 mo
40.5317 20.3438 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf16.4438 24.6787 mo(1.8)sh37.3813 5.59375 mo
37.3813 8.74414 li
37.3813 226.794 mo
37.3813 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf35.436 240.124 mo(0)sh93.9321 5.59375 mo
93.9321 8.74414 li
93.9321 226.794 mo
93.9321 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf83.0923 240.124 mo(200)sh150.483 5.59375 mo
150.483 8.74414 li
150.483 226.794 mo
150.483 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf139.631 240.124 mo(400)sh207.032 5.59375 mo
207.032 8.74414 li
207.032 226.794 mo
207.032 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf196.194 240.124 mo(600)sh263.583 5.59375 mo
263.583 8.74414 li
263.583 226.794 mo
263.583 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf252.741 240.124 mo(800)sh320.131 5.59375 mo
320.131 8.74414 li
320.131 226.794 mo
320.131 223.644 li
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf307.35 240.124 mo(1000)sh37.3813 5.59375 mo
37.3813 226.794 li
348.381 226.794 li
348.381 5.59375 li
37.3813 5.59375 li
37.3813 5.59375 li
cp
0 0 0 1 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 67 /C putdup 86 /V putdup 97 /a putdup 99 /c putdup 101 /e putdup 102 /f putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 222 /fi putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings17 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C75B9C4286C550974FB8FF16157FF06444D0A95E98A4481C8CE386C20B17AD8BD72461D32B73E295712B08DFD1B0F73A653F8CA74DCF8A515118CC86109EB01A7E7A9C3615A4533ED84> |-/parenright <1C60D8A8C9B81F2C3AB1B16A6E1AE2073D977B7DEBBB7FD67C209E382B3E164F2FC748C9013310E801B9D60E1F62C24C1118E395F6F8936B4B0F2F517CCC3E0AD7B20618CE73D7A005611C9C9D80414388> |-/hyphen <1C60D8A8C9B81F2C6F8FBC1C810A0E8C44539FA33CB316> |-/C <1C60D8A8C9B6079F2D195D2F475FB0496F57CAED376D8723354DEC9F1B1DE5681520D221B2480D1D8BDCDE504128C39D7EB2E84513BAC1DE0FB32782218FDC6E9C50EDB3243AB03AB27341C2AB66BCC7BEF1938A37561E60AF9AC58E646150BF50A2A4F9C83CE1E9DB03C86EEE00383C4EF0503E9E481C5C2D47FEADCC38BAEC2FF5C5F148176C> |-/V <1C60D8A8C9B64EDFF43DD2870D4682FBC1495FA58F995AA6853533009263A3BA3DBE0094FFB6E8> |-/a <1C60D8A8C9B7EF322BE880EA00DBE3D8876C5FB7647BA8CCC58F470AD954361B3D91651144567349F627F201CF4B889415AEB7207EF345F45727C83FD2AD41468A288BFAB1F1F8FCB791EF1AEC76E7D581984F9D9441BE677D94FB963C5BC5B27908DAD995ADB6FCD1CBF7C384901475354EB3A245D3307FEAFA4358FCD91A73A9A2D0B4DA6C6FAD93BFAD58639AD4966C9A8F5E818248BC94F832DB718423280F618BE3B1ED95509C1B2FEAFB5A791924A6F1D5665394FA5CC00C95995C34120BDD0AD5EC6C89EEA20ACD877A1340E12A0053EE1F5E0DCED83F6B965D6FD267E8BD205A0A960ED3D04B55781B> |-/c <1C60D8A8C9B7EF3224D14587A8B37D54D8F0D79949CF14C9CC9890F2A6EDAA42FBA7117A612E13E7903C5A9C5F0200507E43E4C5E8B577504A53EA8A3E180CB569C8E885144F7728A2CCF0AEA32AD779FCECF91E377BD59B10FB864AC6580EFC92CA06227EB092EEEA6F0A41DE0D0DA52550ED7973070D2B3954AFC87D3BB2A46D25> |-/e <1C60D8A8C9B7EF322BA45AA2EF7BD5EAECAF85AF93C215781DFD7DA13F94BB4115BE9214BE159174D684F62C2005A0180C6808F64A08B396F763189FED746BF18ED4EE6E66DDE691142C37E3D614F8DB7B75C14A9F846CCAD13261BA0F086A233499153D3DE84AE55E921B6458DA81ABE3A274371E0DC1724FB71E09D7A2DF5E64CCD5B0577B8A6829193E633FA6CD7C2838A9AF9E8E0D8892F0FE> |-/f <1C60D8A8C9B81F2C3A233ED2584A5D503772ABBF6B2808B3D90393B4492FAD585A6BBF0DD8708D41EF54D499B58E7A4707819D1962C784050E571012168CB14C65EDB734DC21589D28A0280112A3100C30A89B7F4072B8FB10EB042628FCB195E8> |-/i <1C60D8A8C9B854D0F4508A75B6F712D3D087C02C3CCD57AE7F32B92CA51473D32788CE0DC0B491> |-/n <1C60D8A8C9B7D8BE16D8563F2A820135798DB83DD6B1FB4BEEDD6BE48B5FE588992ED2D6619960E60863C9F44AA1F533124F0383142FF7EEADB4AF1E517ED95B69DCD15F12872381FB9701963D2E25CAEBA64306BF64AB37AA8CAB3DCB77> |-/o <1C60D8A8C9B7D8BE16E0CC961AEF519BE656EC753A8172FD3365F902B7C752134E0D6062F2934F0088DB7D58C66CCBA57D3D7D362C8679BD71F98F68353DF00A6FE4BC9DC38D8621ADC978F735588AE608451BBF7B1F36DE1ABDB4D743E861A8CEED1A56243288AD7237419D7149DAF8582921DC7F71072F99464BF4B424500A0E0A81AC> |-/r <1C60D8A8C9B7361F024500926F06869CAF414F7868F5156DB8CC460EA9477D01645E9A011D9746CB6993BDF7B2650628B9E15EAC73BA376BEC45E761AF9B7A77C8C55B8EEDEF93F167A7A94770404E8E1F0D41C5ED2E00F6> |-/t <1C60D8A8C9B81F2C1282009E5D95CE7F7F46B3356102279C4BC0F18BE99679A2FBE0B24A5C5CDAE5CD8FAEB44771EF6D329849A78B1C197090EDEDC41A5628E7A0D30EBF1C775B98D05B427C008446AE8ADA9F57D4B8> |-/fi <1C60D8A8C9B7D8BE19A96FE641E15737892F54D43639DA6E41F5803D939913AE1F22AF811B6242CCCDED8B1A3E5BFD3C548440DC87B8D0B230FB126D81FCDA21A50C240D6295E29B820A47E0F3380D97CD5BE21F22073914D920DC453188481C7FC4A5E9696118AD73F5A8EFF02084218E9C6F1CDACC6A7DCADA7CE1ECC7F0> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PTVRLB+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/PTVRLB+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp /C 18{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t 105{/.notdef}rp /fi 33{/.notdef}rp]PTVRLB+Helvetica-Bold nfPTVRLB+Helvetica-Bold*1 [0 -12 -12 0 0 0 ]msf10.3184 204.919 mo(Co-ef\336cient of Variation \(CV\))[-8.66602 -7.33008 -3.99609 -6.67383 -3.99609 -7.33008 -6.67383 -3.33398 -6.67383 -7.33008 -3.99609 -3.33398 -7.33008 -3.99609 -3.33398 -8.00391 -6.67383 -4.66992 -3.33398 -6.67383 -3.99609 -3.33398 -7.33008 -7.33008 -3.33398 -3.99609 -8.66602 -8.00391 0 ]ysh12.8813 116.193 mo
.746094 .675781 .667969 .898438 cmyk
@
.74609 .67578 .66797 .89844 cmyk
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLB+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B854D0F45A7DCEFBC402FF7699F7922C5BBAB4> |-/P <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/S <1C60D8A8C9B64EDFB7523A7CB42EDAFEB7A57D7E602730D163703AB2E3742CE0B6B5031548F45E27EFEFB540FE387F8D57A682608C79329F4A9151F797C0BCE8B604F7FE451B11641163326012E74FF90725FC4946BE08E582C7990A27F05BF122930EF15C33C6A81641E7FDAB6583B2FA7DF36B61736BAEC2A282E5FA64D01E02E9F2034809BFCF9FB16CEAD631B349973A1734AC0C894FE2F2A758604EB0CD036EAE9087D8FFE9EBB3F6918A69E2C9D04BA54611686354B12441475A72B74E> |-/b <1C60D8A8C9B7D8BE16D22FCDD8FCF7194897CFC30BADA8F67F8875F9903B2ED36E82921D56167F38453B5A93340C5020D0611F38DBB18C6CAE74187506B2AF43DE20531EE5B49E1D8D8134DC87926A1D91F0E7502F24D2D9AC69DFFC6772A16DFD269EEF9B0FFC983C0D5F96843F43A9E372C7BC2A591AC769DFAD44A51C3D5BF85580D46E4063D60C7F3300CA1AC9E39BEF> |-/d <1C60D8A8C9B7D8BE16BD107A274D943DAED37669E432F654CC360B3D8C905F9C219D83A31E595AC2019C89CC2CBB5EAFD78F3600B78D8B0BC94CCD70626D21E2CEC442A1AC2C4AB73D2704C9DEE15048FA5F71A9B5F8247015652D2CCF08BFD7F54F0626B6D36F389C846697AF01C07180DEEC520CE1BD6F4E51EE34E217BE5985B2F0B40273DDBA26105539CBF1FCA7E418> |-/l <1C60D8A8C9B854D0F4508A7EF0C5E0071B71FDC5CEA748F1> |-/m <1C60D8A8C9B59F85E943960B6A65D4B2F64B00C4B40B01286B3C82A10C6D1643B6A00AAC5CFCADA0EB991D1B3C664CF57001567C470EB0A43C79983E64AF4489B4B8E24F9EB06CFA28C8A0DDAEC44973CEA217F66CD0544CCE81161D4DA90D120427AEEF311B7B6686C094A1EA98C9E023CB840F428D192A02E1BEFA91A3E9DEE66822BD73369C214366BBF71EE6DC3CA70AD870D354E56D5200282EC9239529FEDB45FDE6E3295FB077AA1EF603> |-/s <1C60D8A8C9B7EF3276785A356AF9DD9181F27C4252E9DACE79B7DB0370DCA0F85F2A56C0E905F3608D53B08547BCFA1E15664D76297FA3EA82E19324C21C3817083D0B133768886E32780B3693CC1A54C69A839D656ADAACCF3EF0C2DED6AEA97A43D9D5150EF29F02BAE794D0AAD927DFAE8C63D2C80CFCA65FDAAC0B332AC718C253D1D2EC2E3CF8D5C07F36B7AE5922387582C705BE031EB76063A112BF895DE22DA9D9C7170534EB3741A864E522B78EF0730F66150AFF> |-/v <1C60D8A8C9B7EF322BB96619AF24817CECACF89D2A54317E940B59CB55C244695F26CA8B6D3C05> |-/x <1C60D8A8C9B7EF322B529517FE56C1843BE1A93F6E373C00500B87BE66DB104949CFDAFF6A742E48CB31ACEC02ED038FC930C57F837E549FC2A6> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLB+Helvetica-Bold /Encoding getdup 73 /I putdup 80 /P putdup 83 /S putdup 98 /b putdup 100 /d putdup 108 /l putdup 109 /m putdup 115 /s putdup 118 /v putdup 120 /x putpop%ADOEndSubsetFont
/PTVRLB+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 21{/.notdef}rp /C 5{/.notdef}rp /I 6{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v /.notdef /x 101{/.notdef}rp /fi 33{/.notdef}rp]PTVRLB+Helvetica-Bold nfPTVRLB+Helvetica-Bold*1 [12 0 0 -12 0 0 ]msf129.018 251.575 mo(Sorted Paramter Index )sh92.6782 265.976 mo(\(based on CV over entire ensemble\))sh6 lw
325.182 81.8936 mo
325.483 81.6436 li
325.782 81.4434 li
326.032 81.3438 li
326.333 81.1934 li
326.631 81.0938 li
326.881 80.9941 li
327.182 80.9434 li
327.483 80.5938 li
327.733 80.5938 li
328.032 80.1934 li
328.333 80.1934 li
328.583 80.0439 li
328.881 79.6436 li
329.131 78.8936 li
329.432 78.4941 li
329.733 78.0439 li
329.983 77.9941 li
330.282 77.9434 li
330.583 77.8438 li
330.833 77.6934 li
331.131 77.4941 li
331.432 76.5938 li
331.682 76.0439 li
331.983 75.8936 li
332.282 75.8438 li
332.532 75.6934 li
332.833 75.3936 li
333.131 74.7441 li
333.381 74.4941 li
333.682 74.0938 li
333.983 73.1934 li
334.233 72.6436 li
334.532 72.5439 li
334.833 72.1436 li
335.083 72.1436 li
335.381 72.0938 li
335.682 71.0938 li
335.932 70.7939 li
336.233 70.7441 li
336.532 70.5938 li
336.782 69.6436 li
337.083 69.5439 li
337.333 69.3438 li
337.631 69.1934 li
337.932 68.8438 li
338.182 68.1436 li
338.483 67.4941 li
338.782 67.2939 li
339.032 66.6934 li
339.333 66.4941 li
339.631 66.3438 li
339.881 66.0439 li
340.182 65.1934 li
340.483 62.6934 li
340.733 61.5439 li
341.032 61.3936 li
341.333 61.2939 li
341.583 61.1934 li
341.881 61.1934 li
342.182 60.3438 li
342.432 60.2939 li
342.733 60.1436 li
343.032 58.3438 li
343.282 58.1436 li
343.583 57.7441 li
343.881 57.4434 li
344.131 57.2939 li
344.432 56.1436 li
344.682 54.7939 li
344.983 52.9434 li
345.282 50.9434 li
345.532 44.2939 li
295.782 101.294 mo
296.083 100.844 li
296.381 100.594 li
296.631 100.544 li
296.932 100.094 li
297.233 100.094 li
297.483 99.8438 li
297.782 99.8438 li
298.032 99.5938 li
298.333 99.4434 li
298.631 99.3438 li
298.881 99.1934 li
299.182 99.0439 li
299.483 98.9941 li
299.733 98.9941 li
300.032 98.8936 li
300.333 98.8438 li
300.583 98.4434 li
300.881 98.4434 li
301.182 98.3936 li
301.432 98.3936 li
301.733 98.3438 li
302.032 98.2939 li
302.282 98.0439 li
302.583 97.8936 li
302.881 97.4434 li
303.131 97.3936 li
303.432 97.1436 li
303.733 97.0439 li
303.983 96.9941 li
304.282 96.7441 li
304.583 96.3936 li
304.833 95.8936 li
305.131 95.7441 li
305.432 95.7441 li
305.682 95.2939 li
305.983 95.2441 li
306.233 94.9941 li
306.532 94.9434 li
306.833 94.8945 li
307.083 94.8945 li
307.381 94.8438 li
307.682 94.7441 li
307.932 94.1445 li
308.233 93.3438 li
308.532 93.2939 li
308.782 93.0938 li
309.083 92.8945 li
309.381 92.6445 li
309.631 92.3438 li
309.932 92.2939 li
310.233 91.9941 li
310.483 91.7939 li
310.782 91.5439 li
311.083 91.3438 li
311.333 91.2939 li
311.631 91.0938 li
311.932 90.4941 li
312.182 90.0439 li
312.483 89.9434 li
312.782 89.7939 li
313.032 89.5439 li
313.333 89.0439 li
313.583 88.9434 li
313.881 88.8438 li
314.182 88.5938 li
314.432 88.5938 li
314.733 88.4434 li
315.032 88.3945 li
315.282 88.3945 li
315.583 88.0938 li
315.881 87.9941 li
316.131 87.8945 li
316.432 87.8945 li
316.733 87.8438 li
316.983 87.3945 li
317.282 86.5439 li
317.583 86.3438 li
317.833 86.0938 li
318.131 85.9434 li
318.432 85.8438 li
318.682 85.7441 li
318.983 85.7441 li
319.282 85.3438 li
319.532 85.1934 li
319.833 84.8936 li
320.131 84.8438 li
320.381 84.3438 li
320.682 83.9941 li
320.983 83.9434 li
321.233 83.6934 li
321.532 83.5938 li
321.782 83.4941 li
322.083 83.2441 li
322.381 82.7441 li
322.631 82.6934 li
322.932 82.6934 li
323.233 82.5938 li
323.483 82.4941 li
323.782 82.4941 li
324.083 82.4941 li
324.333 82.3936 li
324.631 82.2441 li
324.932 81.9941 li
325.182 81.8936 li
266.381 124.244 mo
266.682 124.193 li
266.932 123.943 li
267.233 123.594 li
267.532 123.193 li
267.782 122.894 li
268.083 122.644 li
268.381 122.094 li
268.631 122.094 li
268.932 121.994 li
269.233 121.994 li
269.483 121.794 li
269.782 121.794 li
270.083 121.494 li
270.333 121.494 li
270.631 121.494 li
270.932 121.344 li
271.182 121.244 li
271.483 121.193 li
271.782 120.994 li
272.032 120.594 li
272.333 120.494 li
272.631 120.193 li
272.881 119.894 li
273.182 119.644 li
273.483 119.544 li
273.733 119.494 li
274.032 119.394 li
274.333 119.044 li
274.583 117.943 li
274.881 117.894 li
275.131 117.594 li
275.432 117.494 li
275.733 117.344 li
275.983 117.294 li
276.282 117.044 li
276.583 116.943 li
276.833 116.644 li
277.131 116.544 li
277.432 116.244 li
277.682 116.144 li
277.983 115.894 li
278.282 115.644 li
278.532 115.094 li
278.833 114.943 li
279.131 114.443 li
279.381 114.244 li
279.682 113.943 li
279.983 113.894 li
280.233 113.744 li
280.532 113.693 li
280.833 113.544 li
281.083 113.244 li
281.381 113.094 li
281.682 112.994 li
281.932 112.193 li
282.233 111.994 li
282.483 111.794 li
282.782 111.594 li
283.083 110.894 li
283.333 110.744 li
283.631 110.693 li
283.932 110.094 li
284.182 109.644 li
284.483 109.344 li
284.782 109.244 li
285.032 109.094 li
285.333 109.044 li
285.631 108.544 li
285.881 108.494 li
286.182 108.494 li
286.483 108.443 li
286.733 108.443 li
287.032 108.244 li
287.333 108.193 li
287.583 107.844 li
287.881 107.794 li
288.182 107.044 li
288.432 106.844 li
288.733 106.693 li
289.032 106.544 li
289.282 106.494 li
289.583 106.443 li
289.881 106.145 li
290.131 105.544 li
290.432 105.494 li
290.682 105.294 li
290.983 105.244 li
291.282 105.094 li
291.532 104.794 li
291.833 104.645 li
292.131 104.645 li
292.381 104.395 li
292.682 103.994 li
292.983 103.494 li
293.233 103.443 li
293.532 103.395 li
293.833 103.294 li
294.083 103.244 li
294.381 103.044 li
294.682 102.494 li
294.932 102.395 li
295.233 101.943 li
295.532 101.645 li
295.782 101.294 li
236.983 142.394 mo
237.282 142.044 li
237.532 141.995 li
237.833 141.944 li
238.131 141.845 li
238.381 141.845 li
238.682 141.544 li
238.983 141.544 li
239.233 141.544 li
239.532 141.345 li
239.833 141.345 li
240.083 140.944 li
240.381 140.845 li
240.682 140.745 li
240.932 140.495 li
241.233 139.944 li
241.532 139.893 li
241.782 139.844 li
242.083 139.543 li
242.381 139.344 li
242.631 139.344 li
242.932 139.293 li
243.233 139.043 li
243.483 138.543 li
243.782 138.443 li
244.032 138.443 li
244.333 138.094 li
244.631 137.944 li
244.881 137.794 li
245.182 136.943 li
245.483 136.894 li
245.733 136.844 li
246.032 136.644 li
246.333 136.594 li
246.583 136.594 li
246.881 136.544 li
247.182 136.294 li
247.432 136.044 li
247.733 135.944 li
248.032 135.794 li
248.282 135.744 li
248.583 135.694 li
248.881 135.544 li
249.131 135.444 li
249.432 135.344 li
249.733 135.094 li
249.983 135.044 li
250.282 134.944 li
250.583 134.794 li
250.833 134.644 li
251.131 134.594 li
251.381 134.444 li
251.682 134.294 li
251.983 134.294 li
252.233 134.244 li
252.532 134.044 li
252.833 133.944 li
253.083 133.594 li
253.381 133.444 li
253.682 133.144 li
253.932 132.444 li
254.233 132.244 li
254.532 132.144 li
254.782 132.044 li
255.083 131.794 li
255.381 131.744 li
255.631 131.344 li
255.932 131.094 li
256.233 130.994 li
256.483 130.544 li
256.782 130.344 li
257.083 129.943 li
257.333 129.943 li
257.631 129.844 li
257.932 129.294 li
258.182 128.994 li
258.483 128.794 li
258.782 128.744 li
259.032 128.644 li
259.333 128.644 li
259.583 128.544 li
259.881 128.394 li
260.182 128.294 li
260.432 128.094 li
260.733 128.044 li
261.032 127.894 li
261.282 127.594 li
261.583 127.294 li
261.881 127.244 li
262.131 126.943 li
262.432 126.844 li
262.733 126.844 li
262.983 126.494 li
263.282 126.244 li
263.583 126.094 li
263.833 125.894 li
264.131 125.844 li
264.432 125.693 li
264.682 125.544 li
264.983 125.144 li
265.282 125.144 li
265.532 124.994 li
265.833 124.394 li
266.131 124.344 li
266.381 124.244 li
207.583 160.444 mo
207.881 160.095 li
208.131 160.044 li
208.432 159.894 li
208.733 159.845 li
208.983 159.345 li
209.282 159.245 li
209.583 158.694 li
209.833 158.595 li
210.131 158.144 li
210.432 158.144 li
210.682 158.095 li
210.983 157.944 li
211.282 157.595 li
211.532 157.495 li
211.833 157.345 li
212.131 157.294 li
212.381 157.245 li
212.682 157.194 li
212.932 156.944 li
213.233 156.894 li
213.532 156.694 li
213.782 156.495 li
214.083 156.245 li
214.381 156.245 li
214.631 156.194 li
214.932 156.144 li
215.233 155.845 li
215.483 155.794 li
215.782 155.794 li
216.083 155.194 li
216.333 155.144 li
216.631 155.044 li
216.932 155.044 li
217.182 154.794 li
217.483 154.644 li
217.782 154.544 li
218.032 154.394 li
218.333 154.394 li
218.631 154.394 li
218.881 154.394 li
219.182 154.044 li
219.483 153.995 li
219.733 153.995 li
220.032 153.894 li
220.282 153.845 li
220.583 153.694 li
220.881 153.644 li
221.131 153.595 li
221.432 153.444 li
221.733 153.294 li
221.983 152.845 li
222.282 152.694 li
222.583 152.294 li
222.833 152.245 li
223.131 151.544 li
223.432 151.495 li
223.682 151.394 li
223.983 151.245 li
224.282 150.944 li
224.532 150.745 li
224.833 150.694 li
225.131 150.694 li
225.381 150.595 li
225.682 150.444 li
225.983 150.394 li
226.233 150.294 li
226.532 150.095 li
226.833 149.944 li
227.083 149.444 li
227.381 149.294 li
227.682 149.245 li
227.932 149.194 li
228.233 149.095 li
228.483 148.694 li
228.782 148.644 li
229.083 148.595 li
229.333 147.845 li
229.631 147.794 li
229.932 147.745 li
230.182 147.745 li
230.483 147.144 li
230.782 146.995 li
231.032 146.694 li
231.333 146.345 li
231.631 146.194 li
231.881 146.044 li
232.182 145.845 li
232.483 145.845 li
232.733 145.544 li
233.032 145.444 li
233.333 145.194 li
233.583 145.095 li
233.881 145.044 li
234.182 144.745 li
234.432 144.194 li
234.733 143.995 li
235.032 143.944 li
235.282 143.144 li
235.583 142.845 li
235.833 142.694 li
236.131 142.694 li
236.432 142.595 li
236.682 142.544 li
236.983 142.394 li
178.182 174.095 mo
178.481 173.995 li
178.731 173.995 li
179.032 173.845 li
179.333 173.694 li
179.583 173.644 li
179.881 173.444 li
180.182 173.394 li
180.432 173.294 li
180.733 173.245 li
181.032 173.144 li
181.282 173.144 li
181.583 173.144 li
181.833 173.095 li
182.131 173.044 li
182.432 172.995 li
182.682 172.845 li
182.983 172.745 li
183.282 172.644 li
183.532 172.595 li
183.833 172.544 li
184.131 172.495 li
184.381 172.444 li
184.682 172.245 li
184.983 172.245 li
185.233 172.194 li
185.532 172.095 li
185.833 171.694 li
186.083 171.444 li
186.381 171.444 li
186.682 171.245 li
186.932 171.194 li
187.233 170.995 li
187.532 170.694 li
187.782 170.394 li
188.083 170.245 li
188.381 169.495 li
188.631 169.394 li
188.932 169.144 li
189.182 168.995 li
189.483 168.894 li
189.782 168.894 li
190.032 168.745 li
190.333 168.644 li
190.631 168.595 li
190.881 168.595 li
191.182 168.544 li
191.483 168.495 li
191.733 168.444 li
192.032 168.294 li
192.333 168.245 li
192.583 168.144 li
192.881 168.095 li
193.182 168.044 li
193.432 167.995 li
193.733 167.995 li
194.032 167.995 li
194.282 167.794 li
194.583 167.745 li
194.881 167.644 li
195.131 167.595 li
195.432 167.495 li
195.733 167.245 li
195.983 167.194 li
196.282 167.194 li
196.583 166.944 li
196.833 166.794 li
197.131 166.595 li
197.381 166.194 li
197.682 166.095 li
197.983 166.044 li
198.233 165.894 li
198.532 165.845 li
198.833 165.745 li
199.083 165.745 li
199.381 165.595 li
199.682 165.495 li
199.932 164.894 li
200.233 164.794 li
200.532 164.745 li
200.782 164.595 li
201.083 164.544 li
201.381 164.495 li
201.631 164.394 li
201.932 164.345 li
202.233 163.845 li
202.483 163.595 li
202.782 163.544 li
203.083 163.495 li
203.333 163.394 li
203.631 163.345 li
203.932 163.144 li
204.182 162.995 li
204.483 162.894 li
204.733 162.595 li
205.032 162.595 li
205.333 162.544 li
205.583 162.294 li
205.881 162.144 li
206.182 161.944 li
206.432 161.894 li
206.733 161.694 li
207.032 161.493 li
207.282 161.243 li
207.583 160.444 li
148.782 179.694 mo
149.083 179.694 li
149.333 179.694 li
149.631 179.644 li
149.932 179.644 li
150.182 179.595 li
150.483 179.544 li
150.733 179.544 li
151.032 179.495 li
151.333 179.444 li
151.583 179.345 li
151.881 179.345 li
152.182 179.245 li
152.432 179.144 li
152.733 178.995 li
153.032 178.995 li
153.282 178.995 li
153.583 178.995 li
153.881 178.845 li
154.131 178.745 li
154.432 178.694 li
154.733 178.694 li
154.983 178.644 li
155.282 178.595 li
155.583 178.595 li
155.833 178.544 li
156.131 178.495 li
156.432 178.495 li
156.682 178.444 li
156.983 178.394 li
157.282 178.394 li
157.532 178.394 li
157.833 178.294 li
158.083 178.245 li
158.381 178.194 li
158.682 178.194 li
158.932 178.144 li
159.233 178.095 li
159.532 178.095 li
159.782 177.995 li
160.083 177.944 li
160.381 177.944 li
160.631 177.944 li
160.932 177.894 li
161.233 177.894 li
161.483 177.894 li
161.782 177.845 li
162.083 177.794 li
162.333 177.694 li
162.631 177.694 li
162.932 177.595 li
163.182 177.595 li
163.483 177.595 li
163.782 177.544 li
164.032 177.294 li
164.333 177.144 li
164.631 177.095 li
164.881 176.995 li
165.182 176.894 li
165.483 176.894 li
165.733 176.894 li
166.032 176.794 li
166.282 176.794 li
166.583 176.745 li
166.881 176.694 li
167.131 176.644 li
167.432 176.595 li
167.733 176.495 li
167.983 176.444 li
168.282 176.394 li
168.583 176.394 li
168.833 176.394 li
169.131 176.345 li
169.432 176.345 li
169.682 176.345 li
169.983 176.294 li
170.282 176.194 li
170.532 176.144 li
170.833 176.095 li
171.131 176.044 li
171.381 175.944 li
171.682 175.894 li
171.983 175.894 li
172.233 175.845 li
172.532 175.694 li
172.833 175.694 li
173.083 175.544 li
173.381 175.493 li
173.631 175.493 li
173.932 175.394 li
174.233 175.294 li
174.481 175.243 li
174.782 175.243 li
175.083 175.194 li
175.333 175.095 li
175.631 174.794 li
175.932 174.743 li
176.182 174.544 li
176.481 174.444 li
176.782 174.345 li
177.032 174.294 li
177.333 174.294 li
177.631 174.194 li
177.881 174.144 li
178.182 174.095 li
119.381 183.845 mo
119.631 183.794 li
119.932 183.794 li
120.233 183.745 li
120.483 183.544 li
120.782 183.544 li
121.083 183.495 li
121.333 183.495 li
121.631 183.444 li
121.932 183.444 li
122.182 183.394 li
122.483 183.394 li
122.782 183.345 li
123.032 183.245 li
123.333 183.245 li
123.633 183.194 li
123.883 182.995 li
124.182 182.944 li
124.483 182.944 li
124.733 182.944 li
125.032 182.845 li
125.333 182.745 li
125.583 182.745 li
125.883 182.644 li
126.182 182.595 li
126.432 182.544 li
126.733 182.544 li
126.983 182.544 li
127.282 182.495 li
127.583 182.444 li
127.833 182.444 li
128.133 182.345 li
128.432 182.294 li
128.682 182.294 li
128.983 182.245 li
129.282 182.194 li
129.532 182.144 li
129.833 182.144 li
130.133 182.144 li
130.383 182.144 li
130.682 182.095 li
130.983 182.095 li
131.233 182.095 li
131.532 181.944 li
131.833 181.944 li
132.083 181.944 li
132.383 181.894 li
132.682 181.894 li
132.932 181.845 li
133.233 181.845 li
133.532 181.845 li
133.782 181.694 li
134.083 181.694 li
134.383 181.644 li
134.633 181.644 li
134.932 181.644 li
135.182 181.644 li
135.483 181.595 li
135.782 181.595 li
136.032 181.544 li
136.333 181.394 li
136.633 181.345 li
136.883 181.294 li
137.182 181.294 li
137.483 181.194 li
137.733 181.194 li
138.032 181.144 li
138.333 181.144 li
138.583 181.095 li
138.883 181.044 li
139.182 181.044 li
139.432 180.993 li
139.733 180.993 li
140.032 180.894 li
140.282 180.845 li
140.583 180.845 li
140.883 180.845 li
141.133 180.794 li
141.432 180.743 li
141.733 180.743 li
141.983 180.694 li
142.282 180.694 li
142.532 180.694 li
142.833 180.544 li
143.133 180.493 li
143.383 180.345 li
143.682 180.294 li
143.983 180.294 li
144.233 180.243 li
144.532 180.144 li
144.833 180.144 li
145.083 180.144 li
145.383 180.144 li
145.682 180.095 li
145.932 180.095 li
146.233 180.095 li
146.532 180.095 li
146.782 179.894 li
147.083 179.894 li
147.383 179.845 li
147.633 179.845 li
147.932 179.845 li
148.233 179.845 li
148.483 179.743 li
148.782 179.694 li
89.9829 187.644 mo
90.2329 187.644 li
90.5317 187.644 li
90.8325 187.495 li
91.0825 187.495 li
91.3813 187.495 li
91.6821 187.495 li
91.9321 187.444 li
92.2329 187.345 li
92.5317 187.345 li
92.7817 187.345 li
93.0825 187.194 li
93.3813 187.095 li
93.6333 187.095 li
93.9321 187.044 li
94.2329 186.995 li
94.4829 186.995 li
94.7817 186.944 li
95.0825 186.894 li
95.3325 186.845 li
95.6333 186.845 li
95.8833 186.745 li
96.1821 186.745 li
96.4829 186.694 li
96.7329 186.644 li
97.0317 186.644 li
97.3325 186.644 li
97.5825 186.544 li
97.8833 186.544 li
98.1821 186.495 li
98.4321 186.394 li
98.7329 186.394 li
99.0317 186.394 li
99.2817 186.345 li
99.5825 186.294 li
99.8833 186.294 li
100.133 186.245 li
100.432 186.245 li
100.733 186.194 li
100.983 186.095 li
101.282 185.995 li
101.583 185.995 li
101.833 185.894 li
102.133 185.894 li
102.432 185.894 li
102.682 185.845 li
102.983 185.845 li
103.282 185.845 li
103.532 185.845 li
103.833 185.745 li
104.083 185.644 li
104.383 185.644 li
104.682 185.595 li
104.932 185.544 li
105.233 185.544 li
105.532 185.544 li
105.782 185.544 li
106.083 185.394 li
106.383 185.345 li
106.633 185.294 li
106.932 185.194 li
107.233 185.194 li
107.483 185.095 li
107.782 185.095 li
108.083 185.044 li
108.333 185.044 li
108.633 184.995 li
108.932 184.995 li
109.182 184.894 li
109.483 184.845 li
109.782 184.845 li
110.032 184.845 li
110.333 184.845 li
110.633 184.794 li
110.883 184.794 li
111.182 184.794 li
111.432 184.745 li
111.733 184.745 li
112.032 184.745 li
112.282 184.694 li
112.583 184.644 li
112.883 184.644 li
113.133 184.595 li
113.432 184.595 li
113.733 184.544 li
113.983 184.444 li
114.282 184.394 li
114.583 184.394 li
114.833 184.194 li
115.133 184.194 li
115.432 184.194 li
115.682 184.194 li
115.983 184.144 li
116.282 184.095 li
116.532 184.044 li
116.833 184.044 li
117.133 183.993 li
117.383 183.944 li
117.682 183.944 li
117.983 183.894 li
118.233 183.894 li
118.532 183.845 li
118.833 183.845 li
119.083 183.845 li
119.383 183.845 li
60.5825 209.294 mo
60.8325 201.294 li
61.1313 200.544 li
61.4321 200.544 li
61.6821 200.294 li
61.9829 200.245 li
62.2817 198.894 li
62.5317 198.544 li
62.8325 198.144 li
63.1313 197.444 li
63.3813 197.044 li
63.6821 196.694 li
63.9829 196.144 li
64.2329 195.894 li
64.5317 195.845 li
64.7817 195.794 li
65.0825 195.595 li
65.3833 195.495 li
65.6333 194.894 li
65.9321 194.644 li
66.2329 194.595 li
66.4829 194.444 li
66.7817 194.294 li
67.0825 194.144 li
67.3325 193.995 li
67.6333 193.894 li
67.9321 193.745 li
68.1821 193.745 li
68.4829 193.694 li
68.7817 193.595 li
69.0317 193.294 li
69.3325 193.294 li
69.6333 193.095 li
69.8833 193.095 li
70.1821 193.044 li
70.4829 192.894 li
70.7329 192.894 li
71.0317 192.745 li
71.3325 192.694 li
71.5825 192.644 li
71.8833 192.345 li
72.1821 192.294 li
72.4321 192.294 li
72.7329 192.245 li
72.9829 192.194 li
73.2817 191.995 li
73.5825 191.944 li
73.8325 191.845 li
74.1333 191.745 li
74.4321 191.694 li
74.6821 191.644 li
74.9829 191.544 li
75.2817 191.495 li
75.5317 191.444 li
75.8325 191.444 li
76.1333 191.345 li
76.3833 191.194 li
76.6821 191.194 li
76.9829 191.095 li
77.2329 190.944 li
77.5317 190.845 li
77.8325 190.794 li
78.0825 190.794 li
78.3833 190.745 li
78.6821 190.644 li
78.9321 190.444 li
79.2329 190.294 li
79.5317 190.245 li
79.7817 190.144 li
80.0825 189.995 li
80.3325 189.894 li
80.6333 189.845 li
80.9321 189.745 li
81.1821 189.694 li
81.4829 189.294 li
81.7817 189.194 li
82.0317 189.144 li
82.3325 189.144 li
82.6333 189.144 li
82.8833 189.144 li
83.1821 189.095 li
83.4829 188.995 li
83.7329 188.944 li
84.0317 188.894 li
84.3325 188.845 li
84.5825 188.745 li
84.8833 188.644 li
85.1821 188.644 li
85.4321 188.595 li
85.7329 188.444 li
86.0317 188.345 li
86.2817 188.345 li
86.5825 188.294 li
86.8833 188.245 li
87.1333 188.245 li
87.4321 188.245 li
87.7329 188.194 li
87.9829 188.194 li
88.2817 188.044 li
88.5317 187.995 li
88.8325 187.995 li
89.1333 187.845 li
89.3833 187.694 li
89.6821 187.694 li
89.9829 187.644 li
.746094 .675781 .667969 .898438 cmyk
@
1 lw
72.8579 201.769 mo
76.0063 198.62 li
72.8579 198.62 mo
76.0063 201.769 li
72.8579 200.194 mo
76.0063 200.194 li
74.4321 201.769 mo
74.4321 198.62 li
72.5571 198.769 mo
75.7075 195.62 li
72.5571 195.62 mo
75.7075 198.769 li
72.5571 197.194 mo
75.7075 197.194 li
74.1313 198.769 mo
74.1313 195.62 li
72.2563 190.769 mo
75.4067 187.62 li
72.2563 187.62 mo
75.4067 190.769 li
72.2563 189.194 mo
75.4067 189.194 li
73.8325 190.769 mo
73.8325 187.62 li
72.0063 193.37 mo
75.1567 190.22 li
72.0063 190.22 mo
75.1567 193.37 li
72.0063 191.794 mo
75.1567 191.794 li
73.5825 193.37 mo
73.5825 190.22 li
71.7075 204.769 mo
74.8579 201.62 li
71.7075 201.62 mo
74.8579 204.769 li
71.7075 203.194 mo
74.8579 203.194 li
73.2817 204.769 mo
73.2817 201.62 li
71.4067 198.22 mo
74.5571 195.069 li
71.4067 195.069 mo
74.5571 198.22 li
71.4067 196.644 mo
74.5571 196.644 li
72.9829 198.22 mo
72.9829 195.069 li
71.1567 191.419 mo
74.3071 188.269 li
71.1567 188.269 mo
74.3071 191.419 li
71.1567 189.845 mo
74.3071 189.845 li
72.7329 191.419 mo
72.7329 188.269 li
70.8579 197.569 mo
74.0063 194.419 li
70.8579 194.419 mo
74.0063 197.569 li
70.8579 195.995 mo
74.0063 195.995 li
72.4321 197.569 mo
72.4321 194.419 li
70.6079 207.22 mo
73.7563 204.069 li
70.6079 204.069 mo
73.7563 207.22 li
70.6079 205.644 mo
73.7563 205.644 li
72.1821 207.22 mo
72.1821 204.069 li
70.3071 194.069 mo
73.4575 190.919 li
70.3071 190.919 mo
73.4575 194.069 li
70.3071 192.495 mo
73.4575 192.495 li
71.8813 194.069 mo
71.8813 190.919 li
70.0063 198.419 mo
73.1567 195.269 li
70.0063 195.269 mo
73.1567 198.419 li
70.0063 196.845 mo
73.1567 196.845 li
71.5825 198.419 mo
71.5825 195.269 li
69.7563 201.12 mo
72.9067 197.97 li
69.7563 197.97 mo
72.9067 201.12 li
69.7563 199.544 mo
72.9067 199.544 li
71.3325 201.12 mo
71.3325 197.97 li
69.4575 195.12 mo
72.6079 191.97 li
69.4575 191.97 mo
72.6079 195.12 li
69.4575 193.544 mo
72.6079 193.544 li
71.0317 195.12 mo
71.0317 191.97 li
69.1567 191.919 mo
72.3071 188.769 li
69.1567 188.769 mo
72.3071 191.919 li
69.1567 190.345 mo
72.3071 190.345 li
70.7329 191.919 mo
70.7329 188.769 li
68.9067 196.87 mo
72.0571 193.72 li
68.9067 193.72 mo
72.0571 196.87 li
68.9067 195.294 mo
72.0571 195.294 li
70.4829 196.87 mo
70.4829 193.72 li
68.6079 192.669 mo
71.7563 189.519 li
68.6079 189.519 mo
71.7563 192.669 li
68.6079 191.095 mo
71.7563 191.095 li
70.1821 192.669 mo
70.1821 189.519 li
68.3071 200.769 mo
71.4575 197.62 li
68.3071 197.62 mo
71.4575 200.769 li
68.3071 199.194 mo
71.4575 199.194 li
69.8813 200.769 mo
69.8813 197.62 li
68.0571 192.87 mo
71.2075 189.72 li
68.0571 189.72 mo
71.2075 192.87 li
68.0571 191.294 mo
71.2075 191.294 li
69.6313 192.87 mo
69.6313 189.72 li
67.7563 201.269 mo
70.9067 198.12 li
67.7563 198.12 mo
70.9067 201.269 li
67.7563 199.694 mo
70.9067 199.694 li
69.3325 201.269 mo
69.3325 198.12 li
67.4575 206.72 mo
70.6079 203.569 li
67.4575 203.569 mo
70.6079 206.72 li
67.4575 205.144 mo
70.6079 205.144 li
69.0317 206.72 mo
69.0317 203.569 li
67.2075 201.269 mo
70.3579 198.12 li
67.2075 198.12 mo
70.3579 201.269 li
67.2075 199.694 mo
70.3579 199.694 li
68.7817 201.269 mo
68.7817 198.12 li
66.9067 192.47 mo
70.0571 189.319 li
66.9067 189.319 mo
70.0571 192.47 li
66.9067 190.894 mo
70.0571 190.894 li
68.4829 192.47 mo
68.4829 189.319 li
66.6079 198.419 mo
69.7563 195.269 li
66.6079 195.269 mo
69.7563 198.419 li
66.6079 196.845 mo
69.7563 196.845 li
68.1821 198.419 mo
68.1821 195.269 li
66.3579 195.769 mo
69.5063 192.62 li
66.3579 192.62 mo
69.5063 195.769 li
66.3579 194.194 mo
69.5063 194.194 li
67.9321 195.769 mo
67.9321 192.62 li
66.0571 204.62 mo
69.2075 201.47 li
66.0571 201.47 mo
69.2075 204.62 li
66.0571 203.044 mo
69.2075 203.044 li
67.6313 204.62 mo
67.6313 201.47 li
65.7563 206.269 mo
68.9067 203.12 li
65.7563 203.12 mo
68.9067 206.269 li
65.7563 204.694 mo
68.9067 204.694 li
67.3325 206.269 mo
67.3325 203.12 li
65.5063 194.169 mo
68.6567 191.019 li
65.5063 191.019 mo
68.6567 194.169 li
65.5063 192.595 mo
68.6567 192.595 li
67.0825 194.169 mo
67.0825 191.019 li
65.2075 196.37 mo
68.3579 193.22 li
65.2075 193.22 mo
68.3579 196.37 li
65.2075 194.794 mo
68.3579 194.794 li
66.7817 196.37 mo
66.7817 193.22 li
64.9067 200.87 mo
68.0571 197.72 li
64.9067 197.72 mo
68.0571 200.87 li
64.9067 199.294 mo
68.0571 199.294 li
66.4829 200.87 mo
66.4829 197.72 li
64.6567 189.97 mo
67.8071 186.819 li
64.6567 186.819 mo
67.8071 189.97 li
64.6567 188.394 mo
67.8071 188.394 li
66.2329 189.97 mo
66.2329 186.819 li
64.3579 202.569 mo
67.5063 199.419 li
64.3579 199.419 mo
67.5063 202.569 li
64.3579 200.995 mo
67.5063 200.995 li
65.9321 202.569 mo
65.9321 199.419 li
64.0571 193.62 mo
67.2075 190.47 li
64.0571 190.47 mo
67.2075 193.62 li
64.0571 192.044 mo
67.2075 192.044 li
65.6313 193.62 mo
65.6313 190.47 li
63.8071 203.97 mo
66.9575 200.819 li
63.8071 200.819 mo
66.9575 203.97 li
63.8071 202.394 mo
66.9575 202.394 li
65.3813 203.97 mo
65.3813 200.819 li
63.5063 204.069 mo
66.6567 200.919 li
63.5063 200.919 mo
66.6567 204.069 li
63.5063 202.495 mo
66.6567 202.495 li
65.0825 204.069 mo
65.0825 200.919 li
63.2075 197.019 mo
66.3579 193.87 li
63.2075 193.87 mo
66.3579 197.019 li
63.2075 195.444 mo
66.3579 195.444 li
64.7817 197.019 mo
64.7817 193.87 li
62.9575 199.819 mo
66.1079 196.669 li
62.9575 196.669 mo
66.1079 199.819 li
62.9575 198.245 mo
66.1079 198.245 li
64.5317 199.819 mo
64.5317 196.669 li
62.6567 203.97 mo
65.8071 200.819 li
62.6567 200.819 mo
65.8071 203.97 li
62.6567 202.394 mo
65.8071 202.394 li
64.2329 203.97 mo
64.2329 200.819 li
62.4067 198.419 mo
65.5571 195.269 li
62.4067 195.269 mo
65.5571 198.419 li
62.4067 196.845 mo
65.5571 196.845 li
63.9829 198.419 mo
63.9829 195.269 li
62.1079 202.269 mo
65.2563 199.12 li
62.1079 199.12 mo
65.2563 202.269 li
62.1079 200.694 mo
65.2563 200.694 li
63.6821 202.269 mo
63.6821 199.12 li
61.8071 196.87 mo
64.9575 193.72 li
61.8071 193.72 mo
64.9575 196.87 li
61.8071 195.294 mo
64.9575 195.294 li
63.3813 196.87 mo
63.3813 193.72 li
61.5571 201.47 mo
64.7075 198.319 li
61.5571 198.319 mo
64.7075 201.47 li
61.5571 199.894 mo
64.7075 199.894 li
63.1313 201.47 mo
63.1313 198.319 li
61.2563 203.47 mo
64.4067 200.319 li
61.2563 200.319 mo
64.4067 203.47 li
61.2563 201.894 mo
64.4067 201.894 li
62.8325 203.47 mo
62.8325 200.319 li
60.9575 209.97 mo
64.1079 206.819 li
60.9575 206.819 mo
64.1079 209.97 li
60.9575 208.394 mo
64.1079 208.394 li
62.5317 209.97 mo
62.5317 206.819 li
60.7075 197.269 mo
63.8579 194.12 li
60.7075 194.12 mo
63.8579 197.269 li
60.7075 195.694 mo
63.8579 195.694 li
62.2817 197.269 mo
62.2817 194.12 li
60.4067 203.069 mo
63.5571 199.919 li
60.4067 199.919 mo
63.5571 203.069 li
60.4067 201.495 mo
63.5571 201.495 li
61.9829 203.069 mo
61.9829 199.919 li
60.1079 206.72 mo
63.2563 203.569 li
60.1079 203.569 mo
63.2563 206.72 li
60.1079 205.144 mo
63.2563 205.144 li
61.6821 206.72 mo
61.6821 203.569 li
59.8579 209.519 mo
63.0063 206.37 li
59.8579 206.37 mo
63.0063 209.519 li
59.8579 207.944 mo
63.0063 207.944 li
61.4321 209.519 mo
61.4321 206.37 li
59.5571 202.97 mo
62.7075 199.819 li
59.5571 199.819 mo
62.7075 202.97 li
59.5571 201.394 mo
62.7075 201.394 li
61.1313 202.97 mo
61.1313 199.819 li
59.2563 207.519 mo
62.4067 204.37 li
59.2563 204.37 mo
62.4067 207.519 li
59.2563 205.944 mo
62.4067 205.944 li
60.8325 207.519 mo
60.8325 204.37 li
59.0063 214.669 mo
62.1567 211.519 li
59.0063 211.519 mo
62.1567 214.669 li
59.0063 213.095 mo
62.1567 213.095 li
60.5825 214.669 mo
60.5825 211.519 li
0 .988281 1 0 cmyk
@
86.9575 187.519 mo
90.1079 184.37 li
86.9575 184.37 mo
90.1079 187.519 li
86.9575 185.944 mo
90.1079 185.944 li
88.5317 187.519 mo
88.5317 184.37 li
86.7075 188.569 mo
89.8579 185.419 li
86.7075 185.419 mo
89.8579 188.569 li
86.7075 186.995 mo
89.8579 186.995 li
88.2817 188.569 mo
88.2817 185.419 li
86.4067 186.919 mo
89.5571 183.769 li
86.4067 183.769 mo
89.5571 186.919 li
86.4067 185.345 mo
89.5571 185.345 li
87.9829 186.919 mo
87.9829 183.769 li
86.1567 195.519 mo
89.3071 192.37 li
86.1567 192.37 mo
89.3071 195.519 li
86.1567 193.944 mo
89.3071 193.944 li
87.7329 195.519 mo
87.7329 192.37 li
85.8579 196.519 mo
89.0063 193.37 li
85.8579 193.37 mo
89.0063 196.519 li
85.8579 194.944 mo
89.0063 194.944 li
87.4321 196.519 mo
87.4321 193.37 li
85.5571 190.919 mo
88.7075 187.769 li
85.5571 187.769 mo
88.7075 190.919 li
85.5571 189.345 mo
88.7075 189.345 li
87.1313 190.919 mo
87.1313 187.769 li
85.3071 192.319 mo
88.4575 189.169 li
85.3071 189.169 mo
88.4575 192.319 li
85.3071 190.745 mo
88.4575 190.745 li
86.8813 192.319 mo
86.8813 189.169 li
85.0063 191.419 mo
88.1567 188.269 li
85.0063 188.269 mo
88.1567 191.419 li
85.0063 189.845 mo
88.1567 189.845 li
86.5825 191.419 mo
86.5825 188.269 li
84.7075 194.319 mo
87.8579 191.169 li
84.7075 191.169 mo
87.8579 194.319 li
84.7075 192.745 mo
87.8579 192.745 li
86.2817 194.319 mo
86.2817 191.169 li
84.4575 191.97 mo
87.6079 188.819 li
84.4575 188.819 mo
87.6079 191.97 li
84.4575 190.394 mo
87.6079 190.394 li
86.0317 191.97 mo
86.0317 188.819 li
84.1567 195.169 mo
87.3071 192.019 li
84.1567 192.019 mo
87.3071 195.169 li
84.1567 193.595 mo
87.3071 193.595 li
85.7329 195.169 mo
85.7329 192.019 li
83.8579 193.919 mo
87.0063 190.769 li
83.8579 190.769 mo
87.0063 193.919 li
83.8579 192.345 mo
87.0063 192.345 li
85.4321 193.919 mo
85.4321 190.769 li
83.6079 190.269 mo
86.7563 187.12 li
83.6079 187.12 mo
86.7563 190.269 li
83.6079 188.694 mo
86.7563 188.694 li
85.1821 190.269 mo
85.1821 187.12 li
83.3071 191.169 mo
86.4575 188.019 li
83.3071 188.019 mo
86.4575 191.169 li
83.3071 189.595 mo
86.4575 189.595 li
84.8813 191.169 mo
84.8813 188.019 li
83.0063 197.769 mo
86.1567 194.62 li
83.0063 194.62 mo
86.1567 197.769 li
83.0063 196.194 mo
86.1567 196.194 li
84.5825 197.769 mo
84.5825 194.62 li
82.7563 185.519 mo
85.9067 182.37 li
82.7563 182.37 mo
85.9067 185.519 li
82.7563 183.944 mo
85.9067 183.944 li
84.3325 185.519 mo
84.3325 182.37 li
82.4575 194.669 mo
85.6079 191.519 li
82.4575 191.519 mo
85.6079 194.669 li
82.4575 193.095 mo
85.6079 193.095 li
84.0317 194.669 mo
84.0317 191.519 li
82.1567 189.919 mo
85.3071 186.769 li
82.1567 186.769 mo
85.3071 189.919 li
82.1567 188.345 mo
85.3071 188.345 li
83.7329 189.919 mo
83.7329 186.769 li
81.9067 193.519 mo
85.0571 190.37 li
81.9067 190.37 mo
85.0571 193.519 li
81.9067 191.944 mo
85.0571 191.944 li
83.4829 193.519 mo
83.4829 190.37 li
81.6079 195.769 mo
84.7563 192.62 li
81.6079 192.62 mo
84.7563 195.769 li
81.6079 194.194 mo
84.7563 194.194 li
83.1821 195.769 mo
83.1821 192.62 li
81.3071 191.819 mo
84.4575 188.669 li
81.3071 188.669 mo
84.4575 191.819 li
81.3071 190.245 mo
84.4575 190.245 li
82.8813 191.819 mo
82.8813 188.669 li
81.0571 195.019 mo
84.2075 191.87 li
81.0571 191.87 mo
84.2075 195.019 li
81.0571 193.444 mo
84.2075 193.444 li
82.6313 195.019 mo
82.6313 191.87 li
80.7563 194.419 mo
83.9067 191.269 li
80.7563 191.269 mo
83.9067 194.419 li
80.7563 192.845 mo
83.9067 192.845 li
82.3325 194.419 mo
82.3325 191.269 li
80.4575 198.069 mo
83.6079 194.919 li
80.4575 194.919 mo
83.6079 198.069 li
80.4575 196.495 mo
83.6079 196.495 li
82.0317 198.069 mo
82.0317 194.919 li
80.2075 198.269 mo
83.3579 195.12 li
80.2075 195.12 mo
83.3579 198.269 li
80.2075 196.694 mo
83.3579 196.694 li
81.7817 198.269 mo
81.7817 195.12 li
79.9067 197.87 mo
83.0571 194.72 li
79.9067 194.72 mo
83.0571 197.87 li
79.9067 196.294 mo
83.0571 196.294 li
81.4829 197.87 mo
81.4829 194.72 li
79.6079 196.72 mo
82.7563 193.569 li
79.6079 193.569 mo
82.7563 196.72 li
79.6079 195.144 mo
82.7563 195.144 li
81.1821 196.72 mo
81.1821 193.569 li
79.3579 194.069 mo
82.5063 190.919 li
79.3579 190.919 mo
82.5063 194.069 li
79.3579 192.495 mo
82.5063 192.495 li
80.9321 194.069 mo
80.9321 190.919 li
79.0571 183.87 mo
82.2075 180.72 li
79.0571 180.72 mo
82.2075 183.87 li
79.0571 182.294 mo
82.2075 182.294 li
80.6313 183.87 mo
80.6313 180.72 li
78.7563 189.569 mo
81.9067 186.419 li
78.7563 186.419 mo
81.9067 189.569 li
78.7563 187.995 mo
81.9067 187.995 li
80.3325 189.569 mo
80.3325 186.419 li
78.5063 185.62 mo
81.6567 182.47 li
78.5063 182.47 mo
81.6567 185.62 li
78.5063 184.044 mo
81.6567 184.044 li
80.0825 185.62 mo
80.0825 182.47 li
78.2075 193.769 mo
81.3579 190.62 li
78.2075 190.62 mo
81.3579 193.769 li
78.2075 192.194 mo
81.3579 192.194 li
79.7817 193.769 mo
79.7817 190.62 li
77.9575 173.819 mo
81.1079 170.669 li
77.9575 170.669 mo
81.1079 173.819 li
77.9575 172.245 mo
81.1079 172.245 li
79.5317 173.819 mo
79.5317 170.669 li
77.6567 200.37 mo
80.8071 197.22 li
77.6567 197.22 mo
80.8071 200.37 li
77.6567 198.794 mo
80.8071 198.794 li
79.2329 200.37 mo
79.2329 197.22 li
77.3579 199.319 mo
80.5063 196.169 li
77.3579 196.169 mo
80.5063 199.319 li
77.3579 197.745 mo
80.5063 197.745 li
78.9321 199.319 mo
78.9321 196.169 li
77.1079 195.919 mo
80.2563 192.769 li
77.1079 192.769 mo
80.2563 195.919 li
77.1079 194.345 mo
80.2563 194.345 li
78.6821 195.919 mo
78.6821 192.769 li
76.8071 187.519 mo
79.9575 184.37 li
76.8071 184.37 mo
79.9575 187.519 li
76.8071 185.944 mo
79.9575 185.944 li
78.3813 187.519 mo
78.3813 184.37 li
76.5063 193.769 mo
79.6567 190.62 li
76.5063 190.62 mo
79.6567 193.769 li
76.5063 192.194 mo
79.6567 192.194 li
78.0825 193.769 mo
78.0825 190.62 li
76.2563 202.569 mo
79.4067 199.419 li
76.2563 199.419 mo
79.4067 202.569 li
76.2563 200.995 mo
79.4067 200.995 li
77.8325 202.569 mo
77.8325 199.419 li
75.9575 201.919 mo
79.1079 198.769 li
75.9575 198.769 mo
79.1079 201.919 li
75.9575 200.345 mo
79.1079 200.345 li
77.5317 201.919 mo
77.5317 198.769 li
75.6567 192.819 mo
78.8071 189.669 li
75.6567 189.669 mo
78.8071 192.819 li
75.6567 191.245 mo
78.8071 191.245 li
77.2329 192.819 mo
77.2329 189.669 li
75.4067 197.72 mo
78.5571 194.569 li
75.4067 194.569 mo
78.5571 197.72 li
75.4067 196.144 mo
78.5571 196.144 li
76.9829 197.72 mo
76.9829 194.569 li
75.1079 190.87 mo
78.2563 187.72 li
75.1079 187.72 mo
78.2563 190.87 li
75.1079 189.294 mo
78.2563 189.294 li
76.6821 190.87 mo
76.6821 187.72 li
74.8071 194.069 mo
77.9575 190.919 li
74.8071 190.919 mo
77.9575 194.069 li
74.8071 192.495 mo
77.9575 192.495 li
76.3813 194.069 mo
76.3813 190.919 li
74.5571 195.519 mo
77.7075 192.37 li
74.5571 192.37 mo
77.7075 195.519 li
74.5571 193.944 mo
77.7075 193.944 li
76.1313 195.519 mo
76.1313 192.37 li
74.2563 196.62 mo
77.4067 193.47 li
74.2563 193.47 mo
77.4067 196.62 li
74.2563 195.044 mo
77.4067 195.044 li
75.8325 196.62 mo
75.8325 193.47 li
73.9575 194.319 mo
77.1079 191.169 li
73.9575 191.169 mo
77.1079 194.319 li
73.9575 192.745 mo
77.1079 192.745 li
75.5317 194.319 mo
75.5317 191.169 li
73.7075 191.22 mo
76.8579 188.069 li
73.7075 188.069 mo
76.8579 191.22 li
73.7075 189.644 mo
76.8579 189.644 li
75.2817 191.22 mo
75.2817 188.069 li
73.4067 199.669 mo
76.5571 196.519 li
73.4067 196.519 mo
76.5571 199.669 li
73.4067 198.095 mo
76.5571 198.095 li
74.9829 199.669 mo
74.9829 196.519 li
73.1079 198.62 mo
76.2563 195.47 li
73.1079 195.47 mo
76.2563 198.62 li
73.1079 197.044 mo
76.2563 197.044 li
74.6821 198.62 mo
74.6821 195.47 li
@
101.108 194.169 mo
104.256 191.019 li
101.108 191.019 mo
104.256 194.169 li
101.108 192.595 mo
104.256 192.595 li
102.682 194.169 mo
102.682 191.019 li
100.858 186.569 mo
104.006 183.419 li
100.858 183.419 mo
104.006 186.569 li
100.858 184.995 mo
104.006 184.995 li
102.432 186.569 mo
102.432 183.419 li
100.557 199.669 mo
103.708 196.519 li
100.557 196.519 mo
103.708 199.669 li
100.557 198.095 mo
103.708 198.095 li
102.131 199.669 mo
102.131 196.519 li
100.256 191.12 mo
103.407 187.97 li
100.256 187.97 mo
103.407 191.12 li
100.256 189.544 mo
103.407 189.544 li
101.833 191.12 mo
101.833 187.97 li
100.006 192.569 mo
103.157 189.419 li
100.006 189.419 mo
103.157 192.569 li
100.006 190.995 mo
103.157 190.995 li
101.583 192.569 mo
101.583 189.419 li
99.7075 187.72 mo
102.858 184.569 li
99.7075 184.569 mo
102.858 187.72 li
99.7075 186.144 mo
102.858 186.144 li
101.282 187.72 mo
101.282 184.569 li
99.4067 194.319 mo
102.557 191.169 li
99.4067 191.169 mo
102.557 194.319 li
99.4067 192.745 mo
102.557 192.745 li
100.983 194.319 mo
100.983 191.169 li
99.1567 189.919 mo
102.307 186.769 li
99.1567 186.769 mo
102.307 189.919 li
99.1567 188.345 mo
102.307 188.345 li
100.733 189.919 mo
100.733 186.769 li
98.8579 192.97 mo
102.006 189.819 li
98.8579 189.819 mo
102.006 192.97 li
98.8579 191.394 mo
102.006 191.394 li
100.432 192.97 mo
100.432 189.819 li
98.5571 199.569 mo
101.708 196.419 li
98.5571 196.419 mo
101.708 199.569 li
98.5571 197.995 mo
101.708 197.995 li
100.131 199.569 mo
100.131 196.419 li
98.3071 193.669 mo
101.458 190.519 li
98.3071 190.519 mo
101.458 193.669 li
98.3071 192.095 mo
101.458 192.095 li
99.8813 193.669 mo
99.8813 190.519 li
98.0063 198.819 mo
101.157 195.669 li
98.0063 195.669 mo
101.157 198.819 li
98.0063 197.245 mo
101.157 197.245 li
99.5825 198.819 mo
99.5825 195.669 li
97.7075 199.37 mo
100.858 196.22 li
97.7075 196.22 mo
100.858 199.37 li
97.7075 197.794 mo
100.858 197.794 li
99.2817 199.37 mo
99.2817 196.22 li
97.4575 189.47 mo
100.608 186.319 li
97.4575 186.319 mo
100.608 189.47 li
97.4575 187.894 mo
100.608 187.894 li
99.0317 189.47 mo
99.0317 186.319 li
97.1567 202.72 mo
100.307 199.569 li
97.1567 199.569 mo
100.307 202.72 li
97.1567 201.144 mo
100.307 201.144 li
98.7329 202.72 mo
98.7329 199.569 li
96.8579 182.87 mo
100.006 179.72 li
96.8579 179.72 mo
100.006 182.87 li
96.8579 181.294 mo
100.006 181.294 li
98.4321 182.87 mo
98.4321 179.72 li
96.6079 193.419 mo
99.7563 190.269 li
96.6079 190.269 mo
99.7563 193.419 li
96.6079 191.845 mo
99.7563 191.845 li
98.1821 193.419 mo
98.1821 190.269 li
96.3071 190.269 mo
99.4575 187.12 li
96.3071 187.12 mo
99.4575 190.269 li
96.3071 188.694 mo
99.4575 188.694 li
97.8813 190.269 mo
97.8813 187.12 li
96.0063 186.819 mo
99.1567 183.669 li
96.0063 183.669 mo
99.1567 186.819 li
96.0063 185.245 mo
99.1567 185.245 li
97.5825 186.819 mo
97.5825 183.669 li
95.7563 197.37 mo
98.9067 194.22 li
95.7563 194.22 mo
98.9067 197.37 li
95.7563 195.794 mo
98.9067 195.794 li
97.3325 197.37 mo
97.3325 194.22 li
95.4575 186.62 mo
98.6079 183.47 li
95.4575 183.47 mo
98.6079 186.62 li
95.4575 185.044 mo
98.6079 185.044 li
97.0317 186.62 mo
97.0317 183.47 li
95.1567 197.669 mo
98.3071 194.519 li
95.1567 194.519 mo
98.3071 197.669 li
95.1567 196.095 mo
98.3071 196.095 li
96.7329 197.669 mo
96.7329 194.519 li
94.9067 190.12 mo
98.0571 186.97 li
94.9067 186.97 mo
98.0571 190.12 li
94.9067 188.544 mo
98.0571 188.544 li
96.4829 190.12 mo
96.4829 186.97 li
94.6079 187.819 mo
97.7563 184.669 li
94.6079 184.669 mo
97.7563 187.819 li
94.6079 186.245 mo
97.7563 186.245 li
96.1821 187.819 mo
96.1821 184.669 li
94.3071 190.62 mo
97.4575 187.47 li
94.3071 187.47 mo
97.4575 190.62 li
94.3071 189.044 mo
97.4575 189.044 li
95.8813 190.62 mo
95.8813 187.47 li
94.0571 185.37 mo
97.2075 182.22 li
94.0571 182.22 mo
97.2075 185.37 li
94.0571 183.794 mo
97.2075 183.794 li
95.6313 185.37 mo
95.6313 182.22 li
93.7563 192.97 mo
96.9067 189.819 li
93.7563 189.819 mo
96.9067 192.97 li
93.7563 191.394 mo
96.9067 191.394 li
95.3325 192.97 mo
95.3325 189.819 li
93.5063 196.569 mo
96.6567 193.419 li
93.5063 193.419 mo
96.6567 196.569 li
93.5063 194.995 mo
96.6567 194.995 li
95.0825 196.569 mo
95.0825 193.419 li
93.2075 184.419 mo
96.3579 181.269 li
93.2075 181.269 mo
96.3579 184.419 li
93.2075 182.845 mo
96.3579 182.845 li
94.7817 184.419 mo
94.7817 181.269 li
92.9067 207.97 mo
96.0571 204.819 li
92.9067 204.819 mo
96.0571 207.97 li
92.9067 206.394 mo
96.0571 206.394 li
94.4829 207.97 mo
94.4829 204.819 li
92.6567 188.569 mo
95.8071 185.419 li
92.6567 185.419 mo
95.8071 188.569 li
92.6567 186.995 mo
95.8071 186.995 li
94.2329 188.569 mo
94.2329 185.419 li
92.3579 187.019 mo
95.5063 183.87 li
92.3579 183.87 mo
95.5063 187.019 li
92.3579 185.444 mo
95.5063 185.444 li
93.9321 187.019 mo
93.9321 183.87 li
92.0571 194.519 mo
95.2075 191.37 li
92.0571 191.37 mo
95.2075 194.519 li
92.0571 192.944 mo
95.2075 192.944 li
93.6313 194.519 mo
93.6313 191.37 li
91.8071 185.97 mo
94.9575 182.819 li
91.8071 182.819 mo
94.9575 185.97 li
91.8071 184.394 mo
94.9575 184.394 li
93.3813 185.97 mo
93.3813 182.819 li
91.5063 200.47 mo
94.6567 197.319 li
91.5063 197.319 mo
94.6567 200.47 li
91.5063 198.894 mo
94.6567 198.894 li
93.0825 200.47 mo
93.0825 197.319 li
91.2075 196.519 mo
94.3579 193.37 li
91.2075 193.37 mo
94.3579 196.519 li
91.2075 194.944 mo
94.3579 194.944 li
92.7817 196.519 mo
92.7817 193.37 li
90.9575 195.22 mo
94.1079 192.069 li
90.9575 192.069 mo
94.1079 195.22 li
90.9575 193.644 mo
94.1079 193.644 li
92.5317 195.22 mo
92.5317 192.069 li
90.6567 188.269 mo
93.8071 185.12 li
90.6567 185.12 mo
93.8071 188.269 li
90.6567 186.694 mo
93.8071 186.694 li
92.2329 188.269 mo
92.2329 185.12 li
90.3579 192.919 mo
93.5063 189.769 li
90.3579 189.769 mo
93.5063 192.919 li
90.3579 191.345 mo
93.5063 191.345 li
91.9321 192.919 mo
91.9321 189.769 li
90.1079 191.37 mo
93.2563 188.22 li
90.1079 188.22 mo
93.2563 191.37 li
90.1079 189.794 mo
93.2563 189.794 li
91.6821 191.37 mo
91.6821 188.22 li
89.8071 188.169 mo
92.9575 185.019 li
89.8071 185.019 mo
92.9575 188.169 li
89.8071 186.595 mo
92.9575 186.595 li
91.3813 188.169 mo
91.3813 185.019 li
89.5063 190.47 mo
92.6567 187.319 li
89.5063 187.319 mo
92.6567 190.47 li
89.5063 188.894 mo
92.6567 188.894 li
91.0825 190.47 mo
91.0825 187.319 li
89.2563 195.519 mo
92.4067 192.37 li
89.2563 192.37 mo
92.4067 195.519 li
89.2563 193.944 mo
92.4067 193.944 li
90.8325 195.519 mo
90.8325 192.37 li
88.9575 198.97 mo
92.1079 195.819 li
88.9575 195.819 mo
92.1079 198.97 li
88.9575 197.394 mo
92.1079 197.394 li
90.5317 198.97 mo
90.5317 195.819 li
88.6567 175.069 mo
91.8071 171.919 li
88.6567 171.919 mo
91.8071 175.069 li
88.6567 173.495 mo
91.8071 173.495 li
90.2329 175.069 mo
90.2329 171.919 li
88.4067 191.12 mo
91.5571 187.97 li
88.4067 187.97 mo
91.5571 191.12 li
88.4067 189.544 mo
91.5571 189.544 li
89.9829 191.12 mo
89.9829 187.97 li
88.1079 194.569 mo
91.2563 191.419 li
88.1079 191.419 mo
91.2563 194.569 li
88.1079 192.995 mo
91.2563 192.995 li
89.6821 194.569 mo
89.6821 191.419 li
87.8071 191.37 mo
90.9575 188.22 li
87.8071 188.22 mo
90.9575 191.37 li
87.8071 189.794 mo
90.9575 189.794 li
89.3813 191.37 mo
89.3813 188.22 li
87.5571 191.22 mo
90.7075 188.069 li
87.5571 188.069 mo
90.7075 191.22 li
87.5571 189.644 mo
90.7075 189.644 li
89.1313 191.22 mo
89.1313 188.069 li
87.2563 198.37 mo
90.4067 195.22 li
87.2563 195.22 mo
90.4067 198.37 li
87.2563 196.794 mo
90.4067 196.794 li
88.8325 198.37 mo
88.8325 195.22 li
@
115.256 191.169 mo
118.407 188.019 li
115.256 188.019 mo
118.407 191.169 li
115.256 189.595 mo
118.407 189.595 li
116.833 191.169 mo
116.833 188.019 li
114.958 197.019 mo
118.108 193.87 li
114.958 193.87 mo
118.108 197.019 li
114.958 195.444 mo
118.108 195.444 li
116.532 197.019 mo
116.532 193.87 li
114.708 191.419 mo
117.858 188.269 li
114.708 188.269 mo
117.858 191.419 li
114.708 189.845 mo
117.858 189.845 li
116.282 191.419 mo
116.282 188.269 li
114.407 191.919 mo
117.557 188.769 li
114.407 188.769 mo
117.557 191.919 li
114.407 190.345 mo
117.557 190.345 li
115.983 191.919 mo
115.983 188.769 li
114.108 188.62 mo
117.256 185.47 li
114.108 185.47 mo
117.256 188.62 li
114.108 187.044 mo
117.256 187.044 li
115.682 188.62 mo
115.682 185.47 li
113.858 183.769 mo
117.006 180.62 li
113.858 180.62 mo
117.006 183.769 li
113.858 182.194 mo
117.006 182.194 li
115.432 183.769 mo
115.432 180.62 li
113.557 184.069 mo
116.708 180.919 li
113.557 180.919 mo
116.708 184.069 li
113.557 182.495 mo
116.708 182.495 li
115.131 184.069 mo
115.131 180.919 li
113.256 176.819 mo
116.407 173.669 li
113.256 173.669 mo
116.407 176.819 li
113.256 175.245 mo
116.407 175.245 li
114.833 176.819 mo
114.833 173.669 li
113.006 190.819 mo
116.157 187.669 li
113.006 187.669 mo
116.157 190.819 li
113.006 189.245 mo
116.157 189.245 li
114.583 190.819 mo
114.583 187.669 li
112.708 191.019 mo
115.858 187.87 li
112.708 187.87 mo
115.858 191.019 li
112.708 189.444 mo
115.858 189.444 li
114.282 191.019 mo
114.282 187.87 li
112.407 191.569 mo
115.557 188.419 li
112.407 188.419 mo
115.557 191.569 li
112.407 189.995 mo
115.557 189.995 li
113.983 191.569 mo
113.983 188.419 li
112.157 189.87 mo
115.307 186.72 li
112.157 186.72 mo
115.307 189.87 li
112.157 188.294 mo
115.307 188.294 li
113.733 189.87 mo
113.733 186.72 li
111.858 195.419 mo
115.006 192.269 li
111.858 192.269 mo
115.006 195.419 li
111.858 193.845 mo
115.006 193.845 li
113.432 195.419 mo
113.432 192.269 li
111.557 183.87 mo
114.708 180.72 li
111.557 180.72 mo
114.708 183.87 li
111.557 182.294 mo
114.708 182.294 li
113.131 183.87 mo
113.131 180.72 li
111.307 198.069 mo
114.458 194.919 li
111.307 194.919 mo
114.458 198.069 li
111.307 196.495 mo
114.458 196.495 li
112.881 198.069 mo
112.881 194.919 li
111.006 176.97 mo
114.157 173.819 li
111.006 173.819 mo
114.157 176.97 li
111.006 175.394 mo
114.157 175.394 li
112.583 176.97 mo
112.583 173.819 li
110.708 185.62 mo
113.858 182.47 li
110.708 182.47 mo
113.858 185.62 li
110.708 184.044 mo
113.858 184.044 li
112.282 185.62 mo
112.282 182.47 li
110.458 189.519 mo
113.608 186.37 li
110.458 186.37 mo
113.608 189.519 li
110.458 187.944 mo
113.608 187.944 li
112.032 189.519 mo
112.032 186.37 li
110.157 199.669 mo
113.307 196.519 li
110.157 196.519 mo
113.307 199.669 li
110.157 198.095 mo
113.307 198.095 li
111.733 199.669 mo
111.733 196.519 li
109.858 184.97 mo
113.006 181.819 li
109.858 181.819 mo
113.006 184.97 li
109.858 183.394 mo
113.006 183.394 li
111.432 184.97 mo
111.432 181.819 li
109.608 190.12 mo
112.756 186.97 li
109.608 186.97 mo
112.756 190.12 li
109.608 188.544 mo
112.756 188.544 li
111.182 190.12 mo
111.182 186.97 li
109.307 189.019 mo
112.458 185.87 li
109.307 185.87 mo
112.458 189.019 li
109.307 187.444 mo
112.458 187.444 li
110.881 189.019 mo
110.881 185.87 li
109.057 190.519 mo
112.208 187.37 li
109.057 187.37 mo
112.208 190.519 li
109.057 188.944 mo
112.208 188.944 li
110.631 190.519 mo
110.631 187.37 li
108.756 185.519 mo
111.907 182.37 li
108.756 182.37 mo
111.907 185.519 li
108.756 183.944 mo
111.907 183.944 li
110.333 185.519 mo
110.333 182.37 li
108.458 191.069 mo
111.608 187.919 li
108.458 187.919 mo
111.608 191.069 li
108.458 189.495 mo
111.608 189.495 li
110.032 191.069 mo
110.032 187.919 li
108.208 186.569 mo
111.358 183.419 li
108.208 183.419 mo
111.358 186.569 li
108.208 184.995 mo
111.358 184.995 li
109.782 186.569 mo
109.782 183.419 li
107.907 192.519 mo
111.057 189.37 li
107.907 189.37 mo
111.057 192.519 li
107.907 190.944 mo
111.057 190.944 li
109.483 192.519 mo
109.483 189.37 li
107.608 188.819 mo
110.756 185.669 li
107.608 185.669 mo
110.756 188.819 li
107.608 187.245 mo
110.756 187.245 li
109.182 188.819 mo
109.182 185.669 li
107.358 185.919 mo
110.506 182.769 li
107.358 182.769 mo
110.506 185.919 li
107.358 184.345 mo
110.506 184.345 li
108.932 185.919 mo
108.932 182.769 li
107.057 196.819 mo
110.208 193.669 li
107.057 193.669 mo
110.208 196.819 li
107.057 195.245 mo
110.208 195.245 li
108.631 196.819 mo
108.631 193.669 li
106.756 182.819 mo
109.907 179.669 li
106.756 179.669 mo
109.907 182.819 li
106.756 181.245 mo
109.907 181.245 li
108.333 182.819 mo
108.333 179.669 li
106.506 191.819 mo
109.657 188.669 li
106.506 188.669 mo
109.657 191.819 li
106.506 190.245 mo
109.657 190.245 li
108.083 191.819 mo
108.083 188.669 li
106.208 188.72 mo
109.358 185.569 li
106.208 185.569 mo
109.358 188.72 li
106.208 187.144 mo
109.358 187.144 li
107.782 188.72 mo
107.782 185.569 li
105.907 184.819 mo
109.057 181.669 li
105.907 181.669 mo
109.057 184.819 li
105.907 183.245 mo
109.057 183.245 li
107.483 184.819 mo
107.483 181.669 li
105.657 178.72 mo
108.807 175.569 li
105.657 175.569 mo
108.807 178.72 li
105.657 177.144 mo
108.807 177.144 li
107.233 178.72 mo
107.233 175.569 li
105.358 191.47 mo
108.506 188.319 li
105.358 188.319 mo
108.506 191.47 li
105.358 189.894 mo
108.506 189.894 li
106.932 191.47 mo
106.932 188.319 li
105.057 188.019 mo
108.208 184.87 li
105.057 184.87 mo
108.208 188.019 li
105.057 186.444 mo
108.208 186.444 li
106.631 188.019 mo
106.631 184.87 li
104.807 189.12 mo
107.958 185.97 li
104.807 185.97 mo
107.958 189.12 li
104.807 187.544 mo
107.958 187.544 li
106.381 189.12 mo
106.381 185.97 li
104.506 186.87 mo
107.657 183.72 li
104.506 183.72 mo
107.657 186.87 li
104.506 185.294 mo
107.657 185.294 li
106.083 186.87 mo
106.083 183.72 li
104.208 184.22 mo
107.358 181.069 li
104.208 181.069 mo
107.358 184.22 li
104.208 182.644 mo
107.358 182.644 li
105.782 184.22 mo
105.782 181.069 li
103.958 193.819 mo
107.108 190.669 li
103.958 190.669 mo
107.108 193.819 li
103.958 192.245 mo
107.108 192.245 li
105.532 193.819 mo
105.532 190.669 li
103.657 193.569 mo
106.807 190.419 li
103.657 190.419 mo
106.807 193.569 li
103.657 191.995 mo
106.807 191.995 li
105.233 193.569 mo
105.233 190.419 li
103.358 193.669 mo
106.506 190.519 li
103.358 190.519 mo
106.506 193.669 li
103.358 192.095 mo
106.506 192.095 li
104.932 193.669 mo
104.932 190.519 li
103.108 186.72 mo
106.256 183.569 li
103.108 183.569 mo
106.256 186.72 li
103.108 185.144 mo
106.256 185.144 li
104.682 186.72 mo
104.682 183.569 li
102.807 191.72 mo
105.958 188.569 li
102.807 188.569 mo
105.958 191.72 li
102.807 190.144 mo
105.958 190.144 li
104.381 191.72 mo
104.381 188.569 li
102.506 191.169 mo
105.657 188.019 li
102.506 188.019 mo
105.657 191.169 li
102.506 189.595 mo
105.657 189.595 li
104.083 191.169 mo
104.083 188.019 li
102.256 185.62 mo
105.407 182.47 li
102.256 182.47 mo
105.407 185.62 li
102.256 184.044 mo
105.407 184.044 li
103.833 185.62 mo
103.833 182.47 li
101.958 191.22 mo
105.108 188.069 li
101.958 188.069 mo
105.108 191.22 li
101.958 189.644 mo
105.108 189.644 li
103.532 191.22 mo
103.532 188.069 li
101.708 193.769 mo
104.858 190.62 li
101.708 190.62 mo
104.858 193.769 li
101.708 192.194 mo
104.858 192.194 li
103.282 193.769 mo
103.282 190.62 li
101.407 186.519 mo
104.557 183.37 li
101.407 183.37 mo
104.557 186.519 li
101.407 184.944 mo
104.557 184.944 li
102.983 186.519 mo
102.983 183.37 li
@
129.407 185.569 mo
132.557 182.419 li
129.407 182.419 mo
132.557 185.569 li
129.407 183.995 mo
132.557 183.995 li
130.983 185.569 mo
130.983 182.419 li
129.108 178.37 mo
132.256 175.22 li
129.108 175.22 mo
132.256 178.37 li
129.108 176.794 mo
132.256 176.794 li
130.682 178.37 mo
130.682 175.22 li
128.807 182.12 mo
131.958 178.97 li
128.807 178.97 mo
131.958 182.12 li
128.807 180.544 mo
131.958 180.544 li
130.381 182.12 mo
130.381 178.97 li
128.557 187.319 mo
131.708 184.169 li
128.557 184.169 mo
131.708 187.319 li
128.557 185.745 mo
131.708 185.745 li
130.131 187.319 mo
130.131 184.169 li
128.256 186.37 mo
131.407 183.22 li
128.256 183.22 mo
131.407 186.37 li
128.256 184.794 mo
131.407 184.794 li
129.833 186.37 mo
129.833 183.22 li
127.958 189.97 mo
131.108 186.819 li
127.958 186.819 mo
131.108 189.97 li
127.958 188.394 mo
131.108 188.394 li
129.532 189.97 mo
129.532 186.819 li
127.708 185.12 mo
130.858 181.97 li
127.708 181.97 mo
130.858 185.12 li
127.708 183.544 mo
130.858 183.544 li
129.282 185.12 mo
129.282 181.97 li
127.407 186.97 mo
130.557 183.819 li
127.407 183.819 mo
130.557 186.97 li
127.407 185.394 mo
130.557 185.394 li
128.983 186.97 mo
128.983 183.819 li
127.108 171.919 mo
130.256 168.769 li
127.108 168.769 mo
130.256 171.919 li
127.108 170.345 mo
130.256 170.345 li
128.682 171.919 mo
128.682 168.769 li
126.858 189.069 mo
130.006 185.919 li
126.858 185.919 mo
130.006 189.069 li
126.858 187.495 mo
130.006 187.495 li
128.432 189.069 mo
128.432 185.919 li
126.557 188.319 mo
129.708 185.169 li
126.557 185.169 mo
129.708 188.319 li
126.557 186.745 mo
129.708 186.745 li
128.131 188.319 mo
128.131 185.169 li
126.256 186.769 mo
129.407 183.62 li
126.256 183.62 mo
129.407 186.769 li
126.256 185.194 mo
129.407 185.194 li
127.833 186.769 mo
127.833 183.62 li
126.006 180.519 mo
129.157 177.37 li
126.006 177.37 mo
129.157 180.519 li
126.006 178.944 mo
129.157 178.944 li
127.583 180.519 mo
127.583 177.37 li
125.708 189.22 mo
128.858 186.069 li
125.708 186.069 mo
128.858 189.22 li
125.708 187.644 mo
128.858 187.644 li
127.282 189.22 mo
127.282 186.069 li
125.407 186.47 mo
128.557 183.319 li
125.407 183.319 mo
128.557 186.47 li
125.407 184.894 mo
128.557 184.894 li
126.983 186.47 mo
126.983 183.319 li
125.157 193.519 mo
128.307 190.37 li
125.157 190.37 mo
128.307 193.519 li
125.157 191.944 mo
128.307 191.944 li
126.733 193.519 mo
126.733 190.37 li
124.858 172.019 mo
128.006 168.87 li
124.858 168.87 mo
128.006 172.019 li
124.858 170.444 mo
128.006 170.444 li
126.432 172.019 mo
126.432 168.87 li
124.608 194.269 mo
127.756 191.12 li
124.608 191.12 mo
127.756 194.269 li
124.608 192.694 mo
127.756 192.694 li
126.182 194.269 mo
126.182 191.12 li
124.307 180.62 mo
127.458 177.47 li
124.307 177.47 mo
127.458 180.62 li
124.307 179.044 mo
127.458 179.044 li
125.881 180.62 mo
125.881 177.47 li
124.006 182.12 mo
127.157 178.97 li
124.006 178.97 mo
127.157 182.12 li
124.006 180.544 mo
127.157 180.544 li
125.583 182.12 mo
125.583 178.97 li
123.756 178.62 mo
126.907 175.47 li
123.756 175.47 mo
126.907 178.62 li
123.756 177.044 mo
126.907 177.044 li
125.333 178.62 mo
125.333 175.47 li
123.458 186.269 mo
126.608 183.12 li
123.458 183.12 mo
126.608 186.269 li
123.458 184.694 mo
126.608 184.694 li
125.032 186.269 mo
125.032 183.12 li
123.157 193.72 mo
126.307 190.569 li
123.157 190.569 mo
126.307 193.72 li
123.157 192.144 mo
126.307 192.144 li
124.733 193.72 mo
124.733 190.569 li
122.907 193.069 mo
126.057 189.919 li
122.907 189.919 mo
126.057 193.069 li
122.907 191.495 mo
126.057 191.495 li
124.483 193.069 mo
124.483 189.919 li
122.608 184.169 mo
125.756 181.019 li
122.608 181.019 mo
125.756 184.169 li
122.608 182.595 mo
125.756 182.595 li
124.182 184.169 mo
124.182 181.019 li
122.307 179.12 mo
125.458 175.97 li
122.307 175.97 mo
125.458 179.12 li
122.307 177.544 mo
125.458 177.544 li
123.881 179.12 mo
123.881 175.97 li
122.057 181.72 mo
125.208 178.569 li
122.057 178.569 mo
125.208 181.72 li
122.057 180.144 mo
125.208 180.144 li
123.631 181.72 mo
123.631 178.569 li
121.756 183.069 mo
124.907 179.919 li
121.756 179.919 mo
124.907 183.069 li
121.756 181.495 mo
124.907 181.495 li
123.333 183.069 mo
123.333 179.919 li
121.458 185.419 mo
124.608 182.269 li
121.458 182.269 mo
124.608 185.419 li
121.458 183.845 mo
124.608 183.845 li
123.032 185.419 mo
123.032 182.269 li
121.208 184.72 mo
124.358 181.569 li
121.208 181.569 mo
124.358 184.72 li
121.208 183.144 mo
124.358 183.144 li
122.782 184.72 mo
122.782 181.569 li
120.907 194.769 mo
124.057 191.62 li
120.907 191.62 mo
124.057 194.769 li
120.907 193.194 mo
124.057 193.194 li
122.483 194.769 mo
122.483 191.62 li
120.608 183.069 mo
123.756 179.919 li
120.608 179.919 mo
123.756 183.069 li
120.608 181.495 mo
123.756 181.495 li
122.182 183.069 mo
122.182 179.919 li
120.358 184.919 mo
123.506 181.769 li
120.358 181.769 mo
123.506 184.919 li
120.358 183.345 mo
123.506 183.345 li
121.932 184.919 mo
121.932 181.769 li
120.057 171.769 mo
123.208 168.62 li
120.057 168.62 mo
123.208 171.769 li
120.057 170.194 mo
123.208 170.194 li
121.631 171.769 mo
121.631 168.62 li
119.756 168.569 mo
122.907 165.419 li
119.756 165.419 mo
122.907 168.569 li
119.756 166.995 mo
122.907 166.995 li
121.333 168.569 mo
121.333 165.419 li
119.506 185.169 mo
122.657 182.019 li
119.506 182.019 mo
122.657 185.169 li
119.506 183.595 mo
122.657 183.595 li
121.083 185.169 mo
121.083 182.019 li
119.208 183.569 mo
122.358 180.419 li
119.208 180.419 mo
122.358 183.569 li
119.208 181.995 mo
122.358 181.995 li
120.782 183.569 mo
120.782 180.419 li
118.907 198.769 mo
122.057 195.62 li
118.907 195.62 mo
122.057 198.769 li
118.907 197.194 mo
122.057 197.194 li
120.483 198.769 mo
120.483 195.62 li
118.657 187.72 mo
121.807 184.569 li
118.657 184.569 mo
121.807 187.72 li
118.657 186.144 mo
121.807 186.144 li
120.233 187.72 mo
120.233 184.569 li
118.358 188.569 mo
121.506 185.419 li
118.358 185.419 mo
121.506 188.569 li
118.358 186.995 mo
121.506 186.995 li
119.932 188.569 mo
119.932 185.419 li
118.057 187.819 mo
121.208 184.669 li
118.057 184.669 mo
121.208 187.819 li
118.057 186.245 mo
121.208 186.245 li
119.631 187.819 mo
119.631 184.669 li
117.807 182.919 mo
120.958 179.769 li
117.807 179.769 mo
120.958 182.919 li
117.807 181.345 mo
120.958 181.345 li
119.381 182.919 mo
119.381 179.769 li
117.506 185.519 mo
120.657 182.37 li
117.506 182.37 mo
120.657 185.519 li
117.506 183.944 mo
120.657 183.944 li
119.083 185.519 mo
119.083 182.37 li
117.256 180.019 mo
120.407 176.87 li
117.256 176.87 mo
120.407 180.019 li
117.256 178.444 mo
120.407 178.444 li
118.833 180.019 mo
118.833 176.87 li
116.958 178.669 mo
120.108 175.519 li
116.958 175.519 mo
120.108 178.669 li
116.958 177.095 mo
120.108 177.095 li
118.532 178.669 mo
118.532 175.519 li
116.657 191.019 mo
119.807 187.87 li
116.657 187.87 mo
119.807 191.019 li
116.657 189.444 mo
119.807 189.444 li
118.233 191.019 mo
118.233 187.87 li
116.407 186.069 mo
119.557 182.919 li
116.407 182.919 mo
119.557 186.069 li
116.407 184.495 mo
119.557 184.495 li
117.983 186.069 mo
117.983 182.919 li
116.108 181.72 mo
119.256 178.569 li
116.108 178.569 mo
119.256 181.72 li
116.108 180.144 mo
119.256 180.144 li
117.682 181.72 mo
117.682 178.569 li
115.807 188.569 mo
118.958 185.419 li
115.807 185.419 mo
118.958 188.569 li
115.807 186.995 mo
118.958 186.995 li
117.381 188.569 mo
117.381 185.419 li
115.557 190.669 mo
118.708 187.519 li
115.557 187.519 mo
118.708 190.669 li
115.557 189.095 mo
118.708 189.095 li
117.131 190.669 mo
117.131 187.519 li
@
143.506 191.72 mo
146.657 188.569 li
143.506 188.569 mo
146.657 191.72 li
143.506 190.144 mo
146.657 190.144 li
145.083 191.72 mo
145.083 188.569 li
143.256 186.97 mo
146.407 183.819 li
143.256 183.819 mo
146.407 186.97 li
143.256 185.394 mo
146.407 185.394 li
144.833 186.97 mo
144.833 183.819 li
142.958 181.87 mo
146.108 178.72 li
142.958 178.72 mo
146.108 181.87 li
142.958 180.294 mo
146.108 180.294 li
144.532 181.87 mo
144.532 178.72 li
142.657 191.519 mo
145.807 188.37 li
142.657 188.37 mo
145.807 191.519 li
142.657 189.944 mo
145.807 189.944 li
144.233 191.519 mo
144.233 188.37 li
142.407 193.87 mo
145.557 190.72 li
142.407 190.72 mo
145.557 193.87 li
142.407 192.294 mo
145.557 192.294 li
143.983 193.87 mo
143.983 190.72 li
142.108 185.12 mo
145.256 181.97 li
142.108 181.97 mo
145.256 185.12 li
142.108 183.544 mo
145.256 183.544 li
143.682 185.12 mo
143.682 181.97 li
141.807 187.87 mo
144.958 184.72 li
141.807 184.72 mo
144.958 187.87 li
141.807 186.294 mo
144.958 186.294 li
143.381 187.87 mo
143.381 184.72 li
141.557 178.97 mo
144.708 175.819 li
141.557 175.819 mo
144.708 178.97 li
141.557 177.394 mo
144.708 177.394 li
143.131 178.97 mo
143.131 175.819 li
141.256 187.169 mo
144.407 184.019 li
141.256 184.019 mo
144.407 187.169 li
141.256 185.595 mo
144.407 185.595 li
142.833 187.169 mo
142.833 184.019 li
140.958 186.519 mo
144.108 183.37 li
140.958 183.37 mo
144.108 186.519 li
140.958 184.944 mo
144.108 184.944 li
142.532 186.519 mo
142.532 183.37 li
140.708 186.37 mo
143.858 183.22 li
140.708 183.22 mo
143.858 186.37 li
140.708 184.794 mo
143.858 184.794 li
142.282 186.37 mo
142.282 183.22 li
140.407 177.72 mo
143.557 174.569 li
140.407 174.569 mo
143.557 177.72 li
140.407 176.144 mo
143.557 176.144 li
141.983 177.72 mo
141.983 174.569 li
140.157 172.069 mo
143.307 168.919 li
140.157 168.919 mo
143.307 172.069 li
140.157 170.495 mo
143.307 170.495 li
141.733 172.069 mo
141.733 168.919 li
139.858 200.419 mo
143.006 197.269 li
139.858 197.269 mo
143.006 200.419 li
139.858 198.845 mo
143.006 198.845 li
141.432 200.419 mo
141.432 197.269 li
139.557 184.419 mo
142.708 181.269 li
139.557 181.269 mo
142.708 184.419 li
139.557 182.845 mo
142.708 182.845 li
141.131 184.419 mo
141.131 181.269 li
139.307 187.019 mo
142.458 183.87 li
139.307 183.87 mo
142.458 187.019 li
139.307 185.444 mo
142.458 185.444 li
140.881 187.019 mo
140.881 183.87 li
139.006 174.269 mo
142.157 171.12 li
139.006 171.12 mo
142.157 174.269 li
139.006 172.694 mo
142.157 172.694 li
140.583 174.269 mo
140.583 171.12 li
138.708 183.72 mo
141.858 180.569 li
138.708 180.569 mo
141.858 183.72 li
138.708 182.144 mo
141.858 182.144 li
140.282 183.72 mo
140.282 180.569 li
138.458 185.169 mo
141.608 182.019 li
138.458 182.019 mo
141.608 185.169 li
138.458 183.595 mo
141.608 183.595 li
140.032 185.169 mo
140.032 182.019 li
138.157 183.019 mo
141.307 179.87 li
138.157 179.87 mo
141.307 183.019 li
138.157 181.444 mo
141.307 181.444 li
139.733 183.019 mo
139.733 179.87 li
137.858 187.419 mo
141.006 184.269 li
137.858 184.269 mo
141.006 187.419 li
137.858 185.845 mo
141.006 185.845 li
139.432 187.419 mo
139.432 184.269 li
137.608 190.519 mo
140.756 187.37 li
137.608 187.37 mo
140.756 190.519 li
137.608 188.944 mo
140.756 188.944 li
139.182 190.519 mo
139.182 187.37 li
137.307 191.12 mo
140.458 187.97 li
137.307 187.97 mo
140.458 191.12 li
137.307 189.544 mo
140.458 189.544 li
138.881 191.12 mo
138.881 187.97 li
137.006 184.22 mo
140.157 181.069 li
137.006 181.069 mo
140.157 184.22 li
137.006 182.644 mo
140.157 182.644 li
138.583 184.22 mo
138.583 181.069 li
136.756 178.22 mo
139.907 175.069 li
136.756 175.069 mo
139.907 178.22 li
136.756 176.644 mo
139.907 176.644 li
138.333 178.22 mo
138.333 175.069 li
136.458 188.97 mo
139.608 185.819 li
136.458 185.819 mo
139.608 188.97 li
136.458 187.394 mo
139.608 187.394 li
138.032 188.97 mo
138.032 185.819 li
136.157 192.269 mo
139.307 189.12 li
136.157 189.12 mo
139.307 192.269 li
136.157 190.694 mo
139.307 190.694 li
137.733 192.269 mo
137.733 189.12 li
135.907 186.069 mo
139.057 182.919 li
135.907 182.919 mo
139.057 186.069 li
135.907 184.495 mo
139.057 184.495 li
137.483 186.069 mo
137.483 182.919 li
135.608 178.72 mo
138.756 175.569 li
135.608 175.569 mo
138.756 178.72 li
135.608 177.144 mo
138.756 177.144 li
137.182 178.72 mo
137.182 175.569 li
135.307 184.62 mo
138.458 181.47 li
135.307 181.47 mo
138.458 184.62 li
135.307 183.044 mo
138.458 183.044 li
136.881 184.62 mo
136.881 181.47 li
135.057 187.269 mo
138.208 184.12 li
135.057 184.12 mo
138.208 187.269 li
135.057 185.694 mo
138.208 185.694 li
136.631 187.269 mo
136.631 184.12 li
134.756 184.769 mo
137.907 181.62 li
134.756 181.62 mo
137.907 184.769 li
134.756 183.194 mo
137.907 183.194 li
136.333 184.769 mo
136.333 181.62 li
134.458 192.769 mo
137.608 189.62 li
134.458 189.62 mo
137.608 192.769 li
134.458 191.194 mo
137.608 191.194 li
136.032 192.769 mo
136.032 189.62 li
134.208 191.169 mo
137.358 188.019 li
134.208 188.019 mo
137.358 191.169 li
134.208 189.595 mo
137.358 189.595 li
135.782 191.169 mo
135.782 188.019 li
133.907 180.12 mo
137.057 176.97 li
133.907 176.97 mo
137.057 180.12 li
133.907 178.544 mo
137.057 178.544 li
135.483 180.12 mo
135.483 176.97 li
133.608 182.819 mo
136.756 179.669 li
133.608 179.669 mo
136.756 182.819 li
133.608 181.245 mo
136.756 181.245 li
135.182 182.819 mo
135.182 179.669 li
133.358 184.22 mo
136.506 181.069 li
133.358 181.069 mo
136.506 184.22 li
133.358 182.644 mo
136.506 182.644 li
134.932 184.22 mo
134.932 181.069 li
133.057 193.269 mo
136.208 190.12 li
133.057 190.12 mo
136.208 193.269 li
133.057 191.694 mo
136.208 191.694 li
134.631 193.269 mo
134.631 190.12 li
132.807 184.97 mo
135.958 181.819 li
132.807 181.819 mo
135.958 184.97 li
132.807 183.394 mo
135.958 183.394 li
134.381 184.97 mo
134.381 181.819 li
132.506 182.519 mo
135.657 179.37 li
132.506 179.37 mo
135.657 182.519 li
132.506 180.944 mo
135.657 180.944 li
134.083 182.519 mo
134.083 179.37 li
132.208 182.919 mo
135.358 179.769 li
132.208 179.769 mo
135.358 182.919 li
132.208 181.345 mo
135.358 181.345 li
133.782 182.919 mo
133.782 179.769 li
131.958 194.669 mo
135.108 191.519 li
131.958 191.519 mo
135.108 194.669 li
131.958 193.095 mo
135.108 193.095 li
133.532 194.669 mo
133.532 191.519 li
131.657 186.37 mo
134.807 183.22 li
131.657 183.22 mo
134.807 186.37 li
131.657 184.794 mo
134.807 184.794 li
133.233 186.37 mo
133.233 183.22 li
131.358 180.97 mo
134.506 177.819 li
131.358 177.819 mo
134.506 180.97 li
131.358 179.394 mo
134.506 179.394 li
132.932 180.97 mo
132.932 177.819 li
131.108 170.47 mo
134.256 167.319 li
131.108 167.319 mo
134.256 170.47 li
131.108 168.894 mo
134.256 168.894 li
132.682 170.47 mo
132.682 167.319 li
130.807 197.419 mo
133.958 194.269 li
130.807 194.269 mo
133.958 197.419 li
130.807 195.845 mo
133.958 195.845 li
132.381 197.419 mo
132.381 194.269 li
130.506 182.72 mo
133.657 179.569 li
130.506 179.569 mo
133.657 182.72 li
130.506 181.144 mo
133.657 181.144 li
132.083 182.72 mo
132.083 179.569 li
130.256 180.319 mo
133.407 177.169 li
130.256 177.169 mo
133.407 180.319 li
130.256 178.745 mo
133.407 178.745 li
131.833 180.319 mo
131.833 177.169 li
129.958 185.019 mo
133.108 181.87 li
129.958 181.87 mo
133.108 185.019 li
129.958 183.444 mo
133.108 183.444 li
131.532 185.019 mo
131.532 181.87 li
129.657 183.819 mo
132.807 180.669 li
129.657 180.669 mo
132.807 183.819 li
129.657 182.245 mo
132.807 182.245 li
131.233 183.819 mo
131.233 180.669 li
@
157.657 183.419 mo
160.807 180.269 li
157.657 180.269 mo
160.807 183.419 li
157.657 181.845 mo
160.807 181.845 li
159.233 183.419 mo
159.233 180.269 li
157.358 173.419 mo
160.506 170.269 li
157.358 170.269 mo
160.506 173.419 li
157.358 171.845 mo
160.506 171.845 li
158.932 173.419 mo
158.932 170.269 li
157.108 189.319 mo
160.256 186.169 li
157.108 186.169 mo
160.256 189.319 li
157.108 187.745 mo
160.256 187.745 li
158.682 189.319 mo
158.682 186.169 li
156.807 178.519 mo
159.958 175.37 li
156.807 175.37 mo
159.958 178.519 li
156.807 176.944 mo
159.958 176.944 li
158.381 178.519 mo
158.381 175.37 li
156.506 184.97 mo
159.657 181.819 li
156.506 181.819 mo
159.657 184.97 li
156.506 183.394 mo
159.657 183.394 li
158.083 184.97 mo
158.083 181.819 li
156.256 179.269 mo
159.407 176.12 li
156.256 176.12 mo
159.407 179.269 li
156.256 177.694 mo
159.407 177.694 li
157.833 179.269 mo
157.833 176.12 li
155.958 172.37 mo
159.108 169.22 li
155.958 169.22 mo
159.108 172.37 li
155.958 170.794 mo
159.108 170.794 li
157.532 172.37 mo
157.532 169.22 li
155.708 181.669 mo
158.858 178.519 li
155.708 178.519 mo
158.858 181.669 li
155.708 180.095 mo
158.858 180.095 li
157.282 181.669 mo
157.282 178.519 li
155.407 182.72 mo
158.557 179.569 li
155.407 179.569 mo
158.557 182.72 li
155.407 181.144 mo
158.557 181.144 li
156.983 182.72 mo
156.983 179.569 li
155.108 179.72 mo
158.256 176.569 li
155.108 176.569 mo
158.256 179.72 li
155.108 178.144 mo
158.256 178.144 li
156.682 179.72 mo
156.682 176.569 li
154.858 190.919 mo
158.006 187.769 li
154.858 187.769 mo
158.006 190.919 li
154.858 189.345 mo
158.006 189.345 li
156.432 190.919 mo
156.432 187.769 li
154.557 179.169 mo
157.708 176.019 li
154.557 176.019 mo
157.708 179.169 li
154.557 177.595 mo
157.708 177.595 li
156.131 179.169 mo
156.131 176.019 li
154.256 178.069 mo
157.407 174.919 li
154.256 174.919 mo
157.407 178.069 li
154.256 176.495 mo
157.407 176.495 li
155.833 178.069 mo
155.833 174.919 li
154.006 190.919 mo
157.157 187.769 li
154.006 187.769 mo
157.157 190.919 li
154.006 189.345 mo
157.157 189.345 li
155.583 190.919 mo
155.583 187.769 li
153.708 189.669 mo
156.858 186.519 li
153.708 186.519 mo
156.858 189.669 li
153.708 188.095 mo
156.858 188.095 li
155.282 189.669 mo
155.282 186.519 li
153.407 187.22 mo
156.557 184.069 li
153.407 184.069 mo
156.557 187.22 li
153.407 185.644 mo
156.557 185.644 li
154.983 187.22 mo
154.983 184.069 li
153.157 189.22 mo
156.307 186.069 li
153.157 186.069 mo
156.307 189.22 li
153.157 187.644 mo
156.307 187.644 li
154.733 189.22 mo
154.733 186.069 li
152.858 185.569 mo
156.006 182.419 li
152.858 182.419 mo
156.006 185.569 li
152.858 183.995 mo
156.006 183.995 li
154.432 185.569 mo
154.432 182.419 li
152.557 183.569 mo
155.708 180.419 li
152.557 180.419 mo
155.708 183.569 li
152.557 181.995 mo
155.708 181.995 li
154.131 183.569 mo
154.131 180.419 li
152.307 179.319 mo
155.458 176.169 li
152.307 176.169 mo
155.458 179.319 li
152.307 177.745 mo
155.458 177.745 li
153.881 179.319 mo
153.881 176.169 li
152.006 185.519 mo
155.157 182.37 li
152.006 182.37 mo
155.157 185.519 li
152.006 183.944 mo
155.157 183.944 li
153.583 185.519 mo
153.583 182.37 li
151.708 182.87 mo
154.858 179.72 li
151.708 179.72 mo
154.858 182.87 li
151.708 181.294 mo
154.858 181.294 li
153.282 182.87 mo
153.282 179.72 li
151.458 182.37 mo
154.608 179.22 li
151.458 179.22 mo
154.608 182.37 li
151.458 180.794 mo
154.608 180.794 li
153.032 182.37 mo
153.032 179.22 li
151.157 186.419 mo
154.307 183.269 li
151.157 183.269 mo
154.307 186.419 li
151.157 184.845 mo
154.307 184.845 li
152.733 186.419 mo
152.733 183.269 li
150.858 190.269 mo
154.006 187.12 li
150.858 187.12 mo
154.006 190.269 li
150.858 188.694 mo
154.006 188.694 li
152.432 190.269 mo
152.432 187.12 li
150.608 189.519 mo
153.756 186.37 li
150.608 186.37 mo
153.756 189.519 li
150.608 187.944 mo
153.756 187.944 li
152.182 189.519 mo
152.182 186.37 li
150.307 185.22 mo
153.458 182.069 li
150.307 182.069 mo
153.458 185.22 li
150.307 183.644 mo
153.458 183.644 li
151.881 185.22 mo
151.881 182.069 li
150.006 190.019 mo
153.157 186.87 li
150.006 186.87 mo
153.157 190.019 li
150.006 188.444 mo
153.157 188.444 li
151.583 190.019 mo
151.583 186.87 li
149.756 184.72 mo
152.907 181.569 li
149.756 181.569 mo
152.907 184.72 li
149.756 183.144 mo
152.907 183.144 li
151.333 184.72 mo
151.333 181.569 li
149.458 179.819 mo
152.608 176.669 li
149.458 176.669 mo
152.608 179.819 li
149.458 178.245 mo
152.608 178.245 li
151.032 179.819 mo
151.032 176.669 li
149.157 185.319 mo
152.307 182.169 li
149.157 182.169 mo
152.307 185.319 li
149.157 183.745 mo
152.307 183.745 li
150.733 185.319 mo
150.733 182.169 li
148.907 182.169 mo
152.057 179.019 li
148.907 179.019 mo
152.057 182.169 li
148.907 180.595 mo
152.057 180.595 li
150.483 182.169 mo
150.483 179.019 li
148.608 188.269 mo
151.756 185.12 li
148.608 185.12 mo
151.756 188.269 li
148.608 186.694 mo
151.756 186.694 li
150.182 188.269 mo
150.182 185.12 li
148.358 188.22 mo
151.506 185.069 li
148.358 185.069 mo
151.506 188.22 li
148.358 186.644 mo
151.506 186.644 li
149.932 188.22 mo
149.932 185.069 li
148.057 184.87 mo
151.208 181.72 li
148.057 181.72 mo
151.208 184.87 li
148.057 183.294 mo
151.208 183.294 li
149.631 184.87 mo
149.631 181.72 li
147.756 169.62 mo
150.907 166.47 li
147.756 166.47 mo
150.907 169.62 li
147.756 168.044 mo
150.907 168.044 li
149.333 169.62 mo
149.333 166.47 li
147.506 185.019 mo
150.657 181.87 li
147.506 181.87 mo
150.657 185.019 li
147.506 183.444 mo
150.657 183.444 li
149.083 185.019 mo
149.083 181.87 li
147.208 176.769 mo
150.358 173.62 li
147.208 173.62 mo
150.358 176.769 li
147.208 175.194 mo
150.358 175.194 li
148.782 176.769 mo
148.782 173.62 li
146.907 181.97 mo
150.057 178.819 li
146.907 178.819 mo
150.057 181.97 li
146.907 180.394 mo
150.057 180.394 li
148.483 181.97 mo
148.483 178.819 li
146.657 183.019 mo
149.807 179.87 li
146.657 179.87 mo
149.807 183.019 li
146.657 181.444 mo
149.807 181.444 li
148.233 183.019 mo
148.233 179.87 li
146.358 184.519 mo
149.506 181.37 li
146.358 181.37 mo
149.506 184.519 li
146.358 182.944 mo
149.506 182.944 li
147.932 184.519 mo
147.932 181.37 li
146.057 185.419 mo
149.208 182.269 li
146.057 182.269 mo
149.208 185.419 li
146.057 183.845 mo
149.208 183.845 li
147.631 185.419 mo
147.631 182.269 li
145.807 175.72 mo
148.958 172.569 li
145.807 172.569 mo
148.958 175.72 li
145.807 174.144 mo
148.958 174.144 li
147.381 175.72 mo
147.381 172.569 li
145.506 180.319 mo
148.657 177.169 li
145.506 177.169 mo
148.657 180.319 li
145.506 178.745 mo
148.657 178.745 li
147.083 180.319 mo
147.083 177.169 li
145.208 180.87 mo
148.358 177.72 li
145.208 177.72 mo
148.358 180.87 li
145.208 179.294 mo
148.358 179.294 li
146.782 180.87 mo
146.782 177.72 li
144.958 177.569 mo
148.108 174.419 li
144.958 174.419 mo
148.108 177.569 li
144.958 175.995 mo
148.108 175.995 li
146.532 177.569 mo
146.532 174.419 li
144.657 187.419 mo
147.807 184.269 li
144.657 184.269 mo
147.807 187.419 li
144.657 185.845 mo
147.807 185.845 li
146.233 187.419 mo
146.233 184.269 li
144.358 191.169 mo
147.506 188.019 li
144.358 188.019 mo
147.506 191.169 li
144.358 189.595 mo
147.506 189.595 li
145.932 191.169 mo
145.932 188.019 li
144.108 188.919 mo
147.256 185.769 li
144.108 185.769 mo
147.256 188.919 li
144.108 187.345 mo
147.256 187.345 li
145.682 188.919 mo
145.682 185.769 li
143.807 182.569 mo
146.958 179.419 li
143.807 179.419 mo
146.958 182.569 li
143.807 180.995 mo
146.958 180.995 li
145.381 182.569 mo
145.381 179.419 li
@
171.807 189.269 mo
174.958 186.12 li
171.807 186.12 mo
174.958 189.269 li
171.807 187.694 mo
174.958 187.694 li
173.381 189.269 mo
173.381 186.12 li
171.506 159.62 mo
174.657 156.47 li
171.506 156.47 mo
174.657 159.62 li
171.506 158.044 mo
174.657 158.044 li
173.083 159.62 mo
173.083 156.47 li
171.256 175.97 mo
174.407 172.819 li
171.256 172.819 mo
174.407 175.97 li
171.256 174.394 mo
174.407 174.394 li
172.833 175.97 mo
172.833 172.819 li
170.958 180.769 mo
174.108 177.62 li
170.958 177.62 mo
174.108 180.769 li
170.958 179.194 mo
174.108 179.194 li
172.532 180.769 mo
172.532 177.62 li
170.657 177.87 mo
173.807 174.72 li
170.657 174.72 mo
173.807 177.87 li
170.657 176.294 mo
173.807 176.294 li
172.233 177.87 mo
172.233 174.72 li
170.407 175.919 mo
173.557 172.769 li
170.407 172.769 mo
173.557 175.919 li
170.407 174.345 mo
173.557 174.345 li
171.983 175.919 mo
171.983 172.769 li
170.108 188.72 mo
173.256 185.569 li
170.108 185.569 mo
173.256 188.72 li
170.108 187.144 mo
173.256 187.144 li
171.682 188.72 mo
171.682 185.569 li
169.807 189.069 mo
172.958 185.919 li
169.807 185.919 mo
172.958 189.069 li
169.807 187.495 mo
172.958 187.495 li
171.381 189.069 mo
171.381 185.919 li
169.557 185.069 mo
172.708 181.919 li
169.557 181.919 mo
172.708 185.069 li
169.557 183.495 mo
172.708 183.495 li
171.131 185.069 mo
171.131 181.919 li
169.256 207.87 mo
172.407 204.72 li
169.256 204.72 mo
172.407 207.87 li
169.256 206.294 mo
172.407 206.294 li
170.833 207.87 mo
170.833 204.72 li
168.958 185.12 mo
172.108 181.97 li
168.958 181.97 mo
172.108 185.12 li
168.958 183.544 mo
172.108 183.544 li
170.532 185.12 mo
170.532 181.97 li
168.708 174.97 mo
171.858 171.819 li
168.708 171.819 mo
171.858 174.97 li
168.708 173.394 mo
171.858 173.394 li
170.282 174.97 mo
170.282 171.819 li
168.407 178.669 mo
171.557 175.519 li
168.407 175.519 mo
171.557 178.669 li
168.407 177.095 mo
171.557 177.095 li
169.983 178.669 mo
169.983 175.519 li
168.108 179.22 mo
171.256 176.069 li
168.108 176.069 mo
171.256 179.22 li
168.108 177.644 mo
171.256 177.644 li
169.682 179.22 mo
169.682 176.069 li
167.858 180.269 mo
171.006 177.12 li
167.858 177.12 mo
171.006 180.269 li
167.858 178.694 mo
171.006 178.694 li
169.432 180.269 mo
169.432 177.12 li
167.557 179.97 mo
170.708 176.819 li
167.557 176.819 mo
170.708 179.97 li
167.557 178.394 mo
170.708 178.394 li
169.131 179.97 mo
169.131 176.819 li
167.256 168.47 mo
170.407 165.319 li
167.256 165.319 mo
170.407 168.47 li
167.256 166.894 mo
170.407 166.894 li
168.833 168.47 mo
168.833 165.319 li
167.006 181.269 mo
170.157 178.12 li
167.006 178.12 mo
170.157 181.269 li
167.006 179.694 mo
170.157 179.694 li
168.583 181.269 mo
168.583 178.12 li
166.708 190.069 mo
169.858 186.919 li
166.708 186.919 mo
169.858 190.069 li
166.708 188.495 mo
169.858 188.495 li
168.282 190.069 mo
168.282 186.919 li
166.407 179.069 mo
169.557 175.919 li
166.407 175.919 mo
169.557 179.069 li
166.407 177.495 mo
169.557 177.495 li
167.983 179.069 mo
167.983 175.919 li
166.157 185.519 mo
169.307 182.37 li
166.157 182.37 mo
169.307 185.519 li
166.157 183.944 mo
169.307 183.944 li
167.733 185.519 mo
167.733 182.37 li
165.858 183.62 mo
169.006 180.47 li
165.858 180.47 mo
169.006 183.62 li
165.858 182.044 mo
169.006 182.044 li
167.432 183.62 mo
167.432 180.47 li
165.557 186.87 mo
168.708 183.72 li
165.557 183.72 mo
168.708 186.87 li
165.557 185.294 mo
168.708 185.294 li
167.131 186.87 mo
167.131 183.72 li
165.307 183.269 mo
168.458 180.12 li
165.307 180.12 mo
168.458 183.269 li
165.307 181.694 mo
168.458 181.694 li
166.881 183.269 mo
166.881 180.12 li
165.006 190.319 mo
168.157 187.169 li
165.006 187.169 mo
168.157 190.319 li
165.006 188.745 mo
168.157 188.745 li
166.583 190.319 mo
166.583 187.169 li
164.708 189.22 mo
167.858 186.069 li
164.708 186.069 mo
167.858 189.22 li
164.708 187.644 mo
167.858 187.644 li
166.282 189.22 mo
166.282 186.069 li
164.458 177.72 mo
167.608 174.569 li
164.458 174.569 mo
167.608 177.72 li
164.458 176.144 mo
167.608 176.144 li
166.032 177.72 mo
166.032 174.569 li
164.157 175.519 mo
167.307 172.37 li
164.157 172.37 mo
167.307 175.519 li
164.157 173.944 mo
167.307 173.944 li
165.733 175.519 mo
165.733 172.37 li
163.907 200.419 mo
167.057 197.269 li
163.907 197.269 mo
167.057 200.419 li
163.907 198.845 mo
167.057 198.845 li
165.483 200.419 mo
165.483 197.269 li
163.608 165.019 mo
166.756 161.87 li
163.608 161.87 mo
166.756 165.019 li
163.608 163.444 mo
166.756 163.444 li
165.182 165.019 mo
165.182 161.87 li
163.307 192.669 mo
166.458 189.519 li
163.307 189.519 mo
166.458 192.669 li
163.307 191.095 mo
166.458 191.095 li
164.881 192.669 mo
164.881 189.519 li
163.057 213.019 mo
166.208 209.87 li
163.057 209.87 mo
166.208 213.019 li
163.057 211.444 mo
166.208 211.444 li
164.631 213.019 mo
164.631 209.87 li
162.756 175.12 mo
165.907 171.97 li
162.756 171.97 mo
165.907 175.12 li
162.756 173.544 mo
165.907 173.544 li
164.333 175.12 mo
164.333 171.97 li
162.458 183.72 mo
165.608 180.569 li
162.458 180.569 mo
165.608 183.72 li
162.458 182.144 mo
165.608 182.144 li
164.032 183.72 mo
164.032 180.569 li
162.208 180.87 mo
165.358 177.72 li
162.208 177.72 mo
165.358 180.87 li
162.208 179.294 mo
165.358 179.294 li
163.782 180.87 mo
163.782 177.72 li
161.907 177.419 mo
165.057 174.269 li
161.907 174.269 mo
165.057 177.419 li
161.907 175.845 mo
165.057 175.845 li
163.483 177.419 mo
163.483 174.269 li
161.608 181.87 mo
164.756 178.72 li
161.608 178.72 mo
164.756 181.87 li
161.608 180.294 mo
164.756 180.294 li
163.182 181.87 mo
163.182 178.72 li
161.358 179.22 mo
164.506 176.069 li
161.358 176.069 mo
164.506 179.22 li
161.358 177.644 mo
164.506 177.644 li
162.932 179.22 mo
162.932 176.069 li
161.057 178.97 mo
164.208 175.819 li
161.057 175.819 mo
164.208 178.97 li
161.057 177.394 mo
164.208 177.394 li
162.631 178.97 mo
162.631 175.819 li
160.756 181.069 mo
163.907 177.919 li
160.756 177.919 mo
163.907 181.069 li
160.756 179.495 mo
163.907 179.495 li
162.333 181.069 mo
162.333 177.919 li
160.506 186.569 mo
163.657 183.419 li
160.506 183.419 mo
163.657 186.569 li
160.506 184.995 mo
163.657 184.995 li
162.083 186.569 mo
162.083 183.419 li
160.208 182.669 mo
163.358 179.519 li
160.208 179.519 mo
163.358 182.669 li
160.208 181.095 mo
163.358 181.095 li
161.782 182.669 mo
161.782 179.519 li
159.907 184.519 mo
163.057 181.37 li
159.907 181.37 mo
163.057 184.519 li
159.907 182.944 mo
163.057 182.944 li
161.483 184.519 mo
161.483 181.37 li
159.657 176.87 mo
162.807 173.72 li
159.657 173.72 mo
162.807 176.87 li
159.657 175.294 mo
162.807 175.294 li
161.233 176.87 mo
161.233 173.72 li
159.358 177.37 mo
162.506 174.22 li
159.358 174.22 mo
162.506 177.37 li
159.358 175.794 mo
162.506 175.794 li
160.932 177.37 mo
160.932 174.22 li
159.057 189.62 mo
162.208 186.47 li
159.057 186.47 mo
162.208 189.62 li
159.057 188.044 mo
162.208 188.044 li
160.631 189.62 mo
160.631 186.47 li
158.807 180.319 mo
161.958 177.169 li
158.807 177.169 mo
161.958 180.319 li
158.807 178.745 mo
161.958 178.745 li
160.381 180.319 mo
160.381 177.169 li
158.506 179.019 mo
161.657 175.87 li
158.506 175.87 mo
161.657 179.019 li
158.506 177.444 mo
161.657 177.444 li
160.083 179.019 mo
160.083 175.87 li
158.208 190.72 mo
161.358 187.569 li
158.208 187.569 mo
161.358 190.72 li
158.208 189.144 mo
161.358 189.144 li
159.782 190.72 mo
159.782 187.569 li
157.958 183.419 mo
161.108 180.269 li
157.958 180.269 mo
161.108 183.419 li
157.958 181.845 mo
161.108 181.845 li
159.532 183.419 mo
159.532 180.269 li
@
185.958 174.519 mo
189.108 171.37 li
185.958 171.37 mo
189.108 174.519 li
185.958 172.944 mo
189.108 172.944 li
187.532 174.519 mo
187.532 171.37 li
185.657 171.62 mo
188.807 168.47 li
185.657 168.47 mo
188.807 171.62 li
185.657 170.044 mo
188.807 170.044 li
187.233 171.62 mo
187.233 168.47 li
185.358 167.47 mo
188.506 164.319 li
185.358 164.319 mo
188.506 167.47 li
185.358 165.894 mo
188.506 165.894 li
186.932 167.47 mo
186.932 164.319 li
185.108 187.37 mo
188.256 184.22 li
185.108 184.22 mo
188.256 187.37 li
185.108 185.794 mo
188.256 185.794 li
186.682 187.37 mo
186.682 184.22 li
184.807 195.169 mo
187.958 192.019 li
184.807 192.019 mo
187.958 195.169 li
184.807 193.595 mo
187.958 193.595 li
186.381 195.169 mo
186.381 192.019 li
184.506 177.47 mo
187.657 174.319 li
184.506 174.319 mo
187.657 177.47 li
184.506 175.894 mo
187.657 175.894 li
186.083 177.47 mo
186.083 174.319 li
184.256 176.269 mo
187.407 173.12 li
184.256 173.12 mo
187.407 176.269 li
184.256 174.694 mo
187.407 174.694 li
185.833 176.269 mo
185.833 173.12 li
183.958 162.769 mo
187.108 159.62 li
183.958 159.62 mo
187.108 162.769 li
183.958 161.194 mo
187.108 161.194 li
185.532 162.769 mo
185.532 159.62 li
183.657 164.97 mo
186.807 161.819 li
183.657 161.819 mo
186.807 164.97 li
183.657 163.394 mo
186.807 163.394 li
185.233 164.97 mo
185.233 161.819 li
183.407 183.319 mo
186.557 180.169 li
183.407 180.169 mo
186.557 183.319 li
183.407 181.745 mo
186.557 181.745 li
184.983 183.319 mo
184.983 180.169 li
183.108 191.62 mo
186.256 188.47 li
183.108 188.47 mo
186.256 191.62 li
183.108 190.044 mo
186.256 190.044 li
184.682 191.62 mo
184.682 188.47 li
182.807 160.72 mo
185.958 157.569 li
182.807 157.569 mo
185.958 160.72 li
182.807 159.144 mo
185.958 159.144 li
184.381 160.72 mo
184.381 157.569 li
182.557 183.62 mo
185.708 180.47 li
182.557 180.47 mo
185.708 183.62 li
182.557 182.044 mo
185.708 182.044 li
184.131 183.62 mo
184.131 180.47 li
182.256 179.569 mo
185.407 176.419 li
182.256 176.419 mo
185.407 179.569 li
182.256 177.995 mo
185.407 177.995 li
183.833 179.569 mo
183.833 176.419 li
181.958 174.769 mo
185.108 171.62 li
181.958 171.62 mo
185.108 174.769 li
181.958 173.194 mo
185.108 173.194 li
183.532 174.769 mo
183.532 171.62 li
181.708 175.019 mo
184.858 171.87 li
181.708 171.87 mo
184.858 175.019 li
181.708 173.444 mo
184.858 173.444 li
183.282 175.019 mo
183.282 171.87 li
181.407 194.919 mo
184.557 191.769 li
181.407 191.769 mo
184.557 194.919 li
181.407 193.345 mo
184.557 193.345 li
182.983 194.919 mo
182.983 191.769 li
181.108 170.87 mo
184.256 167.72 li
181.108 167.72 mo
184.256 170.87 li
181.108 169.294 mo
184.256 169.294 li
182.682 170.87 mo
182.682 167.72 li
180.858 194.669 mo
184.006 191.519 li
180.858 191.519 mo
184.006 194.669 li
180.858 193.095 mo
184.006 193.095 li
182.432 194.669 mo
182.432 191.519 li
180.557 178.569 mo
183.708 175.419 li
180.557 175.419 mo
183.708 178.569 li
180.557 176.995 mo
183.708 176.995 li
182.131 178.569 mo
182.131 175.419 li
180.256 162.72 mo
183.407 159.569 li
180.256 159.569 mo
183.407 162.72 li
180.256 161.144 mo
183.407 161.144 li
181.833 162.72 mo
181.833 159.569 li
180.006 173.819 mo
183.157 170.669 li
180.006 170.669 mo
183.157 173.819 li
180.006 172.245 mo
183.157 172.245 li
181.583 173.819 mo
181.583 170.669 li
179.708 185.919 mo
182.858 182.769 li
179.708 182.769 mo
182.858 185.919 li
179.708 184.345 mo
182.858 184.345 li
181.282 185.919 mo
181.282 182.769 li
179.458 181.12 mo
182.608 177.97 li
179.458 177.97 mo
182.608 181.12 li
179.458 179.544 mo
182.608 179.544 li
181.032 181.12 mo
181.032 177.97 li
179.157 169.919 mo
182.307 166.769 li
179.157 166.769 mo
182.307 169.919 li
179.157 168.345 mo
182.307 168.345 li
180.733 169.919 mo
180.733 166.769 li
178.856 181.669 mo
182.006 178.519 li
178.856 178.519 mo
182.006 181.669 li
178.856 180.095 mo
182.006 180.095 li
180.432 181.669 mo
180.432 178.519 li
178.606 182.22 mo
181.756 179.069 li
178.606 179.069 mo
181.756 182.22 li
178.606 180.644 mo
181.756 180.644 li
180.182 182.22 mo
180.182 179.069 li
178.307 174.769 mo
181.458 171.62 li
178.307 171.62 mo
181.458 174.769 li
178.307 173.194 mo
181.458 173.194 li
179.881 174.769 mo
179.881 171.62 li
178.006 174.62 mo
181.157 171.47 li
178.006 171.47 mo
181.157 174.62 li
178.006 173.044 mo
181.157 173.044 li
179.583 174.62 mo
179.583 171.47 li
177.756 174.569 mo
180.907 171.419 li
177.756 171.419 mo
180.907 174.569 li
177.756 172.995 mo
180.907 172.995 li
179.333 174.569 mo
179.333 171.419 li
177.458 184.37 mo
180.608 181.22 li
177.458 181.22 mo
180.608 184.37 li
177.458 182.794 mo
180.608 182.794 li
179.032 184.37 mo
179.032 181.22 li
177.157 154.319 mo
180.307 151.169 li
177.157 151.169 mo
180.307 154.319 li
177.157 152.745 mo
180.307 152.745 li
178.731 154.319 mo
178.731 151.169 li
176.907 177.819 mo
180.057 174.669 li
176.907 174.669 mo
180.057 177.819 li
176.907 176.245 mo
180.057 176.245 li
178.481 177.819 mo
178.481 174.669 li
176.606 196.97 mo
179.756 193.819 li
176.606 193.819 mo
179.756 196.97 li
176.606 195.394 mo
179.756 195.394 li
178.182 196.97 mo
178.182 193.819 li
176.307 174.819 mo
179.458 171.669 li
176.307 171.669 mo
179.458 174.819 li
176.307 173.245 mo
179.458 173.245 li
177.881 174.819 mo
177.881 171.669 li
176.057 180.519 mo
179.208 177.37 li
176.057 177.37 mo
179.208 180.519 li
176.057 178.944 mo
179.208 178.944 li
177.631 180.519 mo
177.631 177.37 li
175.756 178.87 mo
178.907 175.72 li
175.756 175.72 mo
178.907 178.87 li
175.756 177.294 mo
178.907 177.294 li
177.333 178.87 mo
177.333 175.72 li
175.458 175.519 mo
178.606 172.37 li
175.458 172.37 mo
178.606 175.519 li
175.458 173.944 mo
178.606 173.944 li
177.032 175.519 mo
177.032 172.37 li
175.208 179.669 mo
178.356 176.519 li
175.208 176.519 mo
178.356 179.669 li
175.208 178.095 mo
178.356 178.095 li
176.782 179.669 mo
176.782 176.519 li
174.907 180.37 mo
178.057 177.22 li
174.907 177.22 mo
178.057 180.37 li
174.907 178.794 mo
178.057 178.794 li
176.481 180.37 mo
176.481 177.22 li
174.606 186.069 mo
177.756 182.919 li
174.606 182.919 mo
177.756 186.069 li
174.606 184.495 mo
177.756 184.495 li
176.182 186.069 mo
176.182 182.919 li
174.356 187.62 mo
177.506 184.47 li
174.356 184.47 mo
177.506 187.62 li
174.356 186.044 mo
177.506 186.044 li
175.932 187.62 mo
175.932 184.47 li
174.057 179.97 mo
177.208 176.819 li
174.057 176.819 mo
177.208 179.97 li
174.057 178.394 mo
177.208 178.394 li
175.631 179.97 mo
175.631 176.819 li
173.756 170.419 mo
176.907 167.269 li
173.756 167.269 mo
176.907 170.419 li
173.756 168.845 mo
176.907 168.845 li
175.333 170.419 mo
175.333 167.269 li
173.506 186.97 mo
176.657 183.819 li
173.506 183.819 mo
176.657 186.97 li
173.506 185.394 mo
176.657 185.394 li
175.083 186.97 mo
175.083 183.819 li
173.208 178.47 mo
176.356 175.319 li
173.208 175.319 mo
176.356 178.47 li
173.208 176.894 mo
176.356 176.894 li
174.782 178.47 mo
174.782 175.319 li
172.907 172.919 mo
176.057 169.769 li
172.907 169.769 mo
176.057 172.919 li
172.907 171.345 mo
176.057 171.345 li
174.481 172.919 mo
174.481 169.769 li
172.657 174.62 mo
175.807 171.47 li
172.657 171.47 mo
175.807 174.62 li
172.657 173.044 mo
175.807 173.044 li
174.233 174.62 mo
174.233 171.47 li
172.358 178.97 mo
175.506 175.819 li
172.358 175.819 mo
175.506 178.97 li
172.358 177.394 mo
175.506 177.394 li
173.932 178.97 mo
173.932 175.819 li
172.057 173.22 mo
175.208 170.069 li
172.057 170.069 mo
175.208 173.22 li
172.057 171.644 mo
175.208 171.644 li
173.631 173.22 mo
173.631 170.069 li
@
200.057 160.37 mo
203.208 157.22 li
200.057 157.22 mo
203.208 160.37 li
200.057 158.794 mo
203.208 158.794 li
201.631 160.37 mo
201.631 157.22 li
199.807 164.87 mo
202.958 161.72 li
199.807 161.72 mo
202.958 164.87 li
199.807 163.294 mo
202.958 163.294 li
201.381 164.87 mo
201.381 161.72 li
199.506 195.87 mo
202.657 192.72 li
199.506 192.72 mo
202.657 195.87 li
199.506 194.294 mo
202.657 194.294 li
201.083 195.87 mo
201.083 192.72 li
199.208 157.169 mo
202.358 154.019 li
199.208 154.019 mo
202.358 157.169 li
199.208 155.595 mo
202.358 155.595 li
200.782 157.169 mo
200.782 154.019 li
198.958 171.47 mo
202.108 168.319 li
198.958 168.319 mo
202.108 171.47 li
198.958 169.894 mo
202.108 169.894 li
200.532 171.47 mo
200.532 168.319 li
198.657 164.069 mo
201.807 160.919 li
198.657 160.919 mo
201.807 164.069 li
198.657 162.495 mo
201.807 162.495 li
200.233 164.069 mo
200.233 160.919 li
198.358 180.62 mo
201.506 177.47 li
198.358 177.47 mo
201.506 180.62 li
198.358 179.044 mo
201.506 179.044 li
199.932 180.62 mo
199.932 177.47 li
198.108 188.87 mo
201.256 185.72 li
198.108 185.72 mo
201.256 188.87 li
198.108 187.294 mo
201.256 187.294 li
199.682 188.87 mo
199.682 185.72 li
197.807 176.72 mo
200.958 173.569 li
197.807 173.569 mo
200.958 176.72 li
197.807 175.144 mo
200.958 175.144 li
199.381 176.72 mo
199.381 173.569 li
197.506 174.069 mo
200.657 170.919 li
197.506 170.919 mo
200.657 174.069 li
197.506 172.495 mo
200.657 172.495 li
199.083 174.069 mo
199.083 170.919 li
197.256 170.069 mo
200.407 166.919 li
197.256 166.919 mo
200.407 170.069 li
197.256 168.495 mo
200.407 168.495 li
198.833 170.069 mo
198.833 166.919 li
196.958 195.62 mo
200.108 192.47 li
196.958 192.47 mo
200.108 195.62 li
196.958 194.044 mo
200.108 194.044 li
198.532 195.62 mo
198.532 192.47 li
196.657 163.419 mo
199.807 160.269 li
196.657 160.269 mo
199.807 163.419 li
196.657 161.845 mo
199.807 161.845 li
198.233 163.419 mo
198.233 160.269 li
196.407 157.37 mo
199.557 154.22 li
196.407 154.22 mo
199.557 157.37 li
196.407 155.794 mo
199.557 155.794 li
197.983 157.37 mo
197.983 154.22 li
196.108 157.22 mo
199.256 154.069 li
196.108 154.069 mo
199.256 157.22 li
196.108 155.644 mo
199.256 155.644 li
197.682 157.22 mo
197.682 154.069 li
195.807 144.569 mo
198.958 141.419 li
195.807 141.419 mo
198.958 144.569 li
195.807 142.995 mo
198.958 142.995 li
197.381 144.569 mo
197.381 141.419 li
195.557 178.419 mo
198.708 175.269 li
195.557 175.269 mo
198.708 178.419 li
195.557 176.845 mo
198.708 176.845 li
197.131 178.419 mo
197.131 175.269 li
195.256 164.169 mo
198.407 161.019 li
195.256 161.019 mo
198.407 164.169 li
195.256 162.595 mo
198.407 162.595 li
196.833 164.169 mo
196.833 161.019 li
195.006 186.419 mo
198.157 183.269 li
195.006 183.269 mo
198.157 186.419 li
195.006 184.845 mo
198.157 184.845 li
196.583 186.419 mo
196.583 183.269 li
194.708 191.37 mo
197.858 188.22 li
194.708 188.22 mo
197.858 191.37 li
194.708 189.794 mo
197.858 189.794 li
196.282 191.37 mo
196.282 188.22 li
194.407 167.319 mo
197.557 164.169 li
194.407 164.169 mo
197.557 167.319 li
194.407 165.745 mo
197.557 165.745 li
195.983 167.319 mo
195.983 164.169 li
194.157 175.669 mo
197.307 172.519 li
194.157 172.519 mo
197.307 175.669 li
194.157 174.095 mo
197.307 174.095 li
195.733 175.669 mo
195.733 172.519 li
193.858 175.519 mo
197.006 172.37 li
193.858 172.37 mo
197.006 175.519 li
193.858 173.944 mo
197.006 173.944 li
195.432 175.519 mo
195.432 172.37 li
193.557 164.819 mo
196.708 161.669 li
193.557 161.669 mo
196.708 164.819 li
193.557 163.245 mo
196.708 163.245 li
195.131 164.819 mo
195.131 161.669 li
193.307 189.169 mo
196.458 186.019 li
193.307 186.019 mo
196.458 189.169 li
193.307 187.595 mo
196.458 187.595 li
194.881 189.169 mo
194.881 186.019 li
193.006 153.419 mo
196.157 150.269 li
193.006 150.269 mo
196.157 153.419 li
193.006 151.845 mo
196.157 151.845 li
194.583 153.419 mo
194.583 150.269 li
192.708 174.019 mo
195.858 170.87 li
192.708 170.87 mo
195.858 174.019 li
192.708 172.444 mo
195.858 172.444 li
194.282 174.019 mo
194.282 170.87 li
192.458 190.47 mo
195.608 187.319 li
192.458 187.319 mo
195.608 190.47 li
192.458 188.894 mo
195.608 188.894 li
194.032 190.47 mo
194.032 187.319 li
192.157 159.069 mo
195.307 155.919 li
192.157 155.919 mo
195.307 159.069 li
192.157 157.495 mo
195.307 157.495 li
193.733 159.069 mo
193.733 155.919 li
191.858 179.87 mo
195.006 176.72 li
191.858 176.72 mo
195.006 179.87 li
191.858 178.294 mo
195.006 178.294 li
193.432 179.87 mo
193.432 176.72 li
191.608 180.019 mo
194.756 176.87 li
191.608 176.87 mo
194.756 180.019 li
191.608 178.444 mo
194.756 178.444 li
193.182 180.019 mo
193.182 176.87 li
191.307 169.819 mo
194.458 166.669 li
191.307 166.669 mo
194.458 169.819 li
191.307 168.245 mo
194.458 168.245 li
192.881 169.819 mo
192.881 166.669 li
191.006 131.169 mo
194.157 128.019 li
191.006 128.019 mo
194.157 131.169 li
191.006 129.594 mo
194.157 129.594 li
192.583 131.169 mo
192.583 128.019 li
190.756 166.819 mo
193.907 163.669 li
190.756 163.669 mo
193.907 166.819 li
190.756 165.245 mo
193.907 165.245 li
192.333 166.819 mo
192.333 163.669 li
190.458 166.269 mo
193.608 163.12 li
190.458 163.12 mo
193.608 166.269 li
190.458 164.694 mo
193.608 164.694 li
192.032 166.269 mo
192.032 163.12 li
190.157 174.819 mo
193.307 171.669 li
190.157 171.669 mo
193.307 174.819 li
190.157 173.245 mo
193.307 173.245 li
191.733 174.819 mo
191.733 171.669 li
189.907 158.62 mo
193.057 155.47 li
189.907 155.47 mo
193.057 158.62 li
189.907 157.044 mo
193.057 157.044 li
191.483 158.62 mo
191.483 155.47 li
189.608 185.319 mo
192.756 182.169 li
189.608 182.169 mo
192.756 185.319 li
189.608 183.745 mo
192.756 183.745 li
191.182 185.319 mo
191.182 182.169 li
189.307 149.269 mo
192.458 146.12 li
189.307 146.12 mo
192.458 149.269 li
189.307 147.694 mo
192.458 147.694 li
190.881 149.269 mo
190.881 146.12 li
189.057 184.72 mo
192.208 181.569 li
189.057 181.569 mo
192.208 184.72 li
189.057 183.144 mo
192.208 183.144 li
190.631 184.72 mo
190.631 181.569 li
188.756 158.919 mo
191.907 155.769 li
188.756 155.769 mo
191.907 158.919 li
188.756 157.345 mo
191.907 157.345 li
190.333 158.919 mo
190.333 155.769 li
188.458 192.069 mo
191.608 188.919 li
188.458 188.919 mo
191.608 192.069 li
188.458 190.495 mo
191.608 190.495 li
190.032 192.069 mo
190.032 188.919 li
188.208 187.819 mo
191.358 184.669 li
188.208 184.669 mo
191.358 187.819 li
188.208 186.245 mo
191.358 186.245 li
189.782 187.819 mo
189.782 184.669 li
187.907 166.22 mo
191.057 163.069 li
187.907 163.069 mo
191.057 166.22 li
187.907 164.644 mo
191.057 164.644 li
189.483 166.22 mo
189.483 163.069 li
187.608 168.919 mo
190.756 165.769 li
187.608 165.769 mo
190.756 168.919 li
187.608 167.345 mo
190.756 167.345 li
189.182 168.919 mo
189.182 165.769 li
187.358 184.62 mo
190.506 181.47 li
187.358 181.47 mo
190.506 184.62 li
187.358 183.044 mo
190.506 183.044 li
188.932 184.62 mo
188.932 181.47 li
187.057 204.919 mo
190.208 201.769 li
187.057 201.769 mo
190.208 204.919 li
187.057 203.345 mo
190.208 203.345 li
188.631 204.919 mo
188.631 201.769 li
186.807 190.319 mo
189.958 187.169 li
186.807 187.169 mo
189.958 190.319 li
186.807 188.745 mo
189.958 188.745 li
188.381 190.319 mo
188.381 187.169 li
186.506 192.37 mo
189.657 189.22 li
186.506 189.22 mo
189.657 192.37 li
186.506 190.794 mo
189.657 190.794 li
188.083 192.37 mo
188.083 189.22 li
186.208 181.069 mo
189.358 177.919 li
186.208 177.919 mo
189.358 181.069 li
186.208 179.495 mo
189.358 179.495 li
187.782 181.069 mo
187.782 177.919 li
@
214.208 149.069 mo
217.358 145.919 li
214.208 145.919 mo
217.358 149.069 li
214.208 147.495 mo
217.358 147.495 li
215.782 149.069 mo
215.782 145.919 li
213.907 204.419 mo
217.057 201.269 li
213.907 201.269 mo
217.057 204.419 li
213.907 202.845 mo
217.057 202.845 li
215.483 204.419 mo
215.483 201.269 li
213.657 164.47 mo
216.807 161.319 li
213.657 161.319 mo
216.807 164.47 li
213.657 162.894 mo
216.807 162.894 li
215.233 164.47 mo
215.233 161.319 li
213.358 160.919 mo
216.506 157.769 li
213.358 157.769 mo
216.506 160.919 li
213.358 159.345 mo
216.506 159.345 li
214.932 160.919 mo
214.932 157.769 li
213.057 184.72 mo
216.208 181.569 li
213.057 181.569 mo
216.208 184.72 li
213.057 183.144 mo
216.208 183.144 li
214.631 184.72 mo
214.631 181.569 li
212.807 147.069 mo
215.958 143.919 li
212.807 143.919 mo
215.958 147.069 li
212.807 145.495 mo
215.958 145.495 li
214.381 147.069 mo
214.381 143.919 li
212.506 174.519 mo
215.657 171.37 li
212.506 171.37 mo
215.657 174.519 li
212.506 172.944 mo
215.657 172.944 li
214.083 174.519 mo
214.083 171.37 li
212.208 161.169 mo
215.358 158.019 li
212.208 158.019 mo
215.358 161.169 li
212.208 159.595 mo
215.358 159.595 li
213.782 161.169 mo
213.782 158.019 li
211.958 165.72 mo
215.108 162.569 li
211.958 162.569 mo
215.108 165.72 li
211.958 164.144 mo
215.108 164.144 li
213.532 165.72 mo
213.532 162.569 li
211.657 190.919 mo
214.807 187.769 li
211.657 187.769 mo
214.807 190.919 li
211.657 189.345 mo
214.807 189.345 li
213.233 190.919 mo
213.233 187.769 li
211.358 137.169 mo
214.506 134.019 li
211.358 134.019 mo
214.506 137.169 li
211.358 135.594 mo
214.506 135.594 li
212.932 137.169 mo
212.932 134.019 li
211.108 156.97 mo
214.256 153.819 li
211.108 153.819 mo
214.256 156.97 li
211.108 155.394 mo
214.256 155.394 li
212.682 156.97 mo
212.682 153.819 li
210.807 151.269 mo
213.958 148.12 li
210.807 148.12 mo
213.958 151.269 li
210.807 149.694 mo
213.958 149.694 li
212.381 151.269 mo
212.381 148.12 li
210.557 154.569 mo
213.708 151.419 li
210.557 151.419 mo
213.708 154.569 li
210.557 152.995 mo
213.708 152.995 li
212.131 154.569 mo
212.131 151.419 li
210.256 153.669 mo
213.407 150.519 li
210.256 150.519 mo
213.407 153.669 li
210.256 152.095 mo
213.407 152.095 li
211.833 153.669 mo
211.833 150.519 li
209.958 158.169 mo
213.108 155.019 li
209.958 155.019 mo
213.108 158.169 li
209.958 156.595 mo
213.108 156.595 li
211.532 158.169 mo
211.532 155.019 li
209.708 164.47 mo
212.858 161.319 li
209.708 161.319 mo
212.858 164.47 li
209.708 162.894 mo
212.858 162.894 li
211.282 164.47 mo
211.282 161.319 li
209.407 149.87 mo
212.557 146.72 li
209.407 146.72 mo
212.557 149.87 li
209.407 148.294 mo
212.557 148.294 li
210.983 149.87 mo
210.983 146.72 li
209.108 168.319 mo
212.256 165.169 li
209.108 165.169 mo
212.256 168.319 li
209.108 166.745 mo
212.256 166.745 li
210.682 168.319 mo
210.682 165.169 li
208.858 182.519 mo
212.006 179.37 li
208.858 179.37 mo
212.006 182.519 li
208.858 180.944 mo
212.006 180.944 li
210.432 182.519 mo
210.432 179.37 li
208.557 170.47 mo
211.708 167.319 li
208.557 167.319 mo
211.708 170.47 li
208.557 168.894 mo
211.708 168.894 li
210.131 170.47 mo
210.131 167.319 li
208.256 149.519 mo
211.407 146.37 li
208.256 146.37 mo
211.407 149.519 li
208.256 147.944 mo
211.407 147.944 li
209.833 149.519 mo
209.833 146.37 li
208.006 165.819 mo
211.157 162.669 li
208.006 162.669 mo
211.157 165.819 li
208.006 164.245 mo
211.157 164.245 li
209.583 165.819 mo
209.583 162.669 li
207.708 185.319 mo
210.858 182.169 li
207.708 182.169 mo
210.858 185.319 li
207.708 183.745 mo
210.858 183.745 li
209.282 185.319 mo
209.282 182.169 li
207.407 164.72 mo
210.557 161.569 li
207.407 161.569 mo
210.557 164.72 li
207.407 163.144 mo
210.557 163.144 li
208.983 164.72 mo
208.983 161.569 li
207.157 169.519 mo
210.307 166.37 li
207.157 166.37 mo
210.307 169.519 li
207.157 167.944 mo
210.307 167.944 li
208.733 169.519 mo
208.733 166.37 li
206.858 185.22 mo
210.006 182.069 li
206.858 182.069 mo
210.006 185.22 li
206.858 183.644 mo
210.006 183.644 li
208.432 185.22 mo
208.432 182.069 li
206.557 160.87 mo
209.708 157.72 li
206.557 157.72 mo
209.708 160.87 li
206.557 159.294 mo
209.708 159.294 li
208.131 160.87 mo
208.131 157.72 li
206.307 142.819 mo
209.458 139.668 li
206.307 139.668 mo
209.458 142.819 li
206.307 141.245 mo
209.458 141.245 li
207.881 142.819 mo
207.881 139.668 li
206.006 192.569 mo
209.157 189.419 li
206.006 189.419 mo
209.157 192.569 li
206.006 190.995 mo
209.157 190.995 li
207.583 192.569 mo
207.583 189.419 li
205.708 173.169 mo
208.858 170.019 li
205.708 170.019 mo
208.858 173.169 li
205.708 171.595 mo
208.858 171.595 li
207.282 173.169 mo
207.282 170.019 li
205.458 175.47 mo
208.608 172.319 li
205.458 172.319 mo
208.608 175.47 li
205.458 173.894 mo
208.608 173.894 li
207.032 175.47 mo
207.032 172.319 li
205.157 185.97 mo
208.307 182.819 li
205.157 182.819 mo
208.307 185.97 li
205.157 184.394 mo
208.307 184.394 li
206.733 185.97 mo
206.733 182.819 li
204.858 164.22 mo
208.006 161.069 li
204.858 161.069 mo
208.006 164.22 li
204.858 162.644 mo
208.006 162.644 li
206.432 164.22 mo
206.432 161.069 li
204.608 145.62 mo
207.756 142.47 li
204.608 142.47 mo
207.756 145.62 li
204.608 144.044 mo
207.756 144.044 li
206.182 145.62 mo
206.182 142.47 li
204.307 182.269 mo
207.458 179.12 li
204.307 179.12 mo
207.458 182.269 li
204.307 180.694 mo
207.458 180.694 li
205.881 182.269 mo
205.881 179.12 li
204.006 146.519 mo
207.157 143.37 li
204.006 143.37 mo
207.157 146.519 li
204.006 144.944 mo
207.157 144.944 li
205.583 146.519 mo
205.583 143.37 li
203.756 180.169 mo
206.907 177.019 li
203.756 177.019 mo
206.907 180.169 li
203.756 178.595 mo
206.907 178.595 li
205.333 180.169 mo
205.333 177.019 li
203.458 165.37 mo
206.608 162.22 li
203.458 162.22 mo
206.608 165.37 li
203.458 163.794 mo
206.608 163.794 li
205.032 165.37 mo
205.032 162.22 li
203.157 180.769 mo
206.307 177.62 li
203.157 177.62 mo
206.307 180.769 li
203.157 179.194 mo
206.307 179.194 li
204.733 180.769 mo
204.733 177.62 li
202.907 181.669 mo
206.057 178.519 li
202.907 178.519 mo
206.057 181.669 li
202.907 180.095 mo
206.057 180.095 li
204.483 181.669 mo
204.483 178.519 li
202.608 203.519 mo
205.756 200.37 li
202.608 200.37 mo
205.756 203.519 li
202.608 201.944 mo
205.756 201.944 li
204.182 203.519 mo
204.182 200.37 li
202.358 193.419 mo
205.506 190.269 li
202.358 190.269 mo
205.506 193.419 li
202.358 191.845 mo
205.506 191.845 li
203.932 193.419 mo
203.932 190.269 li
202.057 141.97 mo
205.208 138.819 li
202.057 138.819 mo
205.208 141.97 li
202.057 140.393 mo
205.208 140.393 li
203.631 141.97 mo
203.631 138.819 li
201.756 151.819 mo
204.907 148.669 li
201.756 148.669 mo
204.907 151.819 li
201.756 150.245 mo
204.907 150.245 li
203.333 151.819 mo
203.333 148.669 li
201.506 155.47 mo
204.657 152.319 li
201.506 152.319 mo
204.657 155.47 li
201.506 153.894 mo
204.657 153.894 li
203.083 155.47 mo
203.083 152.319 li
201.208 164.019 mo
204.358 160.87 li
201.208 160.87 mo
204.358 164.019 li
201.208 162.444 mo
204.358 162.444 li
202.782 164.019 mo
202.782 160.87 li
200.907 181.22 mo
204.057 178.069 li
200.907 178.069 mo
204.057 181.22 li
200.907 179.644 mo
204.057 179.644 li
202.483 181.22 mo
202.483 178.069 li
200.657 175.919 mo
203.807 172.769 li
200.657 172.769 mo
203.807 175.919 li
200.657 174.345 mo
203.807 174.345 li
202.233 175.919 mo
202.233 172.769 li
200.358 178.669 mo
203.506 175.519 li
200.358 175.519 mo
203.506 178.669 li
200.358 177.095 mo
203.506 177.095 li
201.932 178.669 mo
201.932 175.519 li
@
228.358 151.37 mo
231.506 148.22 li
228.358 148.22 mo
231.506 151.37 li
228.358 149.794 mo
231.506 149.794 li
229.932 151.37 mo
229.932 148.22 li
228.057 198.169 mo
231.208 195.019 li
228.057 195.019 mo
231.208 198.169 li
228.057 196.595 mo
231.208 196.595 li
229.631 198.169 mo
229.631 195.019 li
227.756 143.47 mo
230.907 140.319 li
227.756 140.319 mo
230.907 143.47 li
227.756 141.894 mo
230.907 141.894 li
229.333 143.47 mo
229.333 140.319 li
227.506 186.47 mo
230.657 183.319 li
227.506 183.319 mo
230.657 186.47 li
227.506 184.894 mo
230.657 184.894 li
229.083 186.47 mo
229.083 183.319 li
227.208 157.22 mo
230.358 154.069 li
227.208 154.069 mo
230.358 157.22 li
227.208 155.644 mo
230.358 155.644 li
228.782 157.22 mo
228.782 154.069 li
226.907 95.2695 mo
230.057 92.1191 li
226.907 92.1191 mo
230.057 95.2695 li
226.907 93.6934 mo
230.057 93.6934 li
228.483 95.2695 mo
228.483 92.1191 li
226.657 124.419 mo
229.807 121.269 li
226.657 121.269 mo
229.807 124.419 li
226.657 122.844 mo
229.807 122.844 li
228.233 124.419 mo
228.233 121.269 li
226.358 144.97 mo
229.506 141.819 li
226.358 141.819 mo
229.506 144.97 li
226.358 143.394 mo
229.506 143.394 li
227.932 144.97 mo
227.932 141.819 li
226.108 125.669 mo
229.256 122.519 li
226.108 122.519 mo
229.256 125.669 li
226.108 124.094 mo
229.256 124.094 li
227.682 125.669 mo
227.682 122.519 li
225.807 141.569 mo
228.958 138.419 li
225.807 138.419 mo
228.958 141.569 li
225.807 139.995 mo
228.958 139.995 li
227.381 141.569 mo
227.381 138.419 li
225.506 153.12 mo
228.657 149.97 li
225.506 149.97 mo
228.657 153.12 li
225.506 151.544 mo
228.657 151.544 li
227.083 153.12 mo
227.083 149.97 li
225.256 172.669 mo
228.407 169.519 li
225.256 169.519 mo
228.407 172.669 li
225.256 171.095 mo
228.407 171.095 li
226.833 172.669 mo
226.833 169.519 li
224.958 187.019 mo
228.108 183.87 li
224.958 183.87 mo
228.108 187.019 li
224.958 185.444 mo
228.108 185.444 li
226.532 187.019 mo
226.532 183.87 li
224.657 136.719 mo
227.807 133.568 li
224.657 133.568 mo
227.807 136.719 li
224.657 135.144 mo
227.807 135.144 li
226.233 136.719 mo
226.233 133.568 li
224.407 176.97 mo
227.557 173.819 li
224.407 173.819 mo
227.557 176.97 li
224.407 175.394 mo
227.557 175.394 li
225.983 176.97 mo
225.983 173.819 li
224.108 156.62 mo
227.256 153.47 li
224.108 153.47 mo
227.256 156.62 li
224.108 155.044 mo
227.256 155.044 li
225.682 156.62 mo
225.682 153.47 li
223.807 132.769 mo
226.958 129.619 li
223.807 129.619 mo
226.958 132.769 li
223.807 131.194 mo
226.958 131.194 li
225.381 132.769 mo
225.381 129.619 li
223.557 167.569 mo
226.708 164.419 li
223.557 164.419 mo
226.708 167.569 li
223.557 165.995 mo
226.708 165.995 li
225.131 167.569 mo
225.131 164.419 li
223.256 188.069 mo
226.407 184.919 li
223.256 184.919 mo
226.407 188.069 li
223.256 186.495 mo
226.407 186.495 li
224.833 188.069 mo
224.833 184.919 li
222.958 191.019 mo
226.108 187.87 li
222.958 187.87 mo
226.108 191.019 li
222.958 189.444 mo
226.108 189.444 li
224.532 191.019 mo
224.532 187.87 li
222.708 165.37 mo
225.858 162.22 li
222.708 162.22 mo
225.858 165.37 li
222.708 163.794 mo
225.858 163.794 li
224.282 165.37 mo
224.282 162.22 li
222.407 160.569 mo
225.557 157.419 li
222.407 157.419 mo
225.557 160.569 li
222.407 158.995 mo
225.557 158.995 li
223.983 160.569 mo
223.983 157.419 li
222.108 197.769 mo
225.256 194.62 li
222.108 194.62 mo
225.256 197.769 li
222.108 196.194 mo
225.256 196.194 li
223.682 197.769 mo
223.682 194.62 li
221.858 158.37 mo
225.006 155.22 li
221.858 155.22 mo
225.006 158.37 li
221.858 156.794 mo
225.006 156.794 li
223.432 158.37 mo
223.432 155.22 li
221.557 177.319 mo
224.708 174.169 li
221.557 174.169 mo
224.708 177.319 li
221.557 175.745 mo
224.708 175.745 li
223.131 177.319 mo
223.131 174.169 li
221.256 179.569 mo
224.407 176.419 li
221.256 176.419 mo
224.407 179.569 li
221.256 177.995 mo
224.407 177.995 li
222.833 179.569 mo
222.833 176.419 li
221.006 157.569 mo
224.157 154.419 li
221.006 154.419 mo
224.157 157.569 li
221.006 155.995 mo
224.157 155.995 li
222.583 157.569 mo
222.583 154.419 li
220.708 129.119 mo
223.858 125.969 li
220.708 125.969 mo
223.858 129.119 li
220.708 127.544 mo
223.858 127.544 li
222.282 129.119 mo
222.282 125.969 li
220.407 138.169 mo
223.557 135.019 li
220.407 135.019 mo
223.557 138.169 li
220.407 136.594 mo
223.557 136.594 li
221.983 138.169 mo
221.983 135.019 li
220.157 158.769 mo
223.307 155.62 li
220.157 155.62 mo
223.307 158.769 li
220.157 157.194 mo
223.307 157.194 li
221.733 158.769 mo
221.733 155.62 li
219.858 155.87 mo
223.006 152.72 li
219.858 152.72 mo
223.006 155.87 li
219.858 154.294 mo
223.006 154.294 li
221.432 155.87 mo
221.432 152.72 li
219.557 182.819 mo
222.708 179.669 li
219.557 179.669 mo
222.708 182.819 li
219.557 181.245 mo
222.708 181.245 li
221.131 182.819 mo
221.131 179.669 li
219.307 146.12 mo
222.458 142.97 li
219.307 142.97 mo
222.458 146.12 li
219.307 144.544 mo
222.458 144.544 li
220.881 146.12 mo
220.881 142.97 li
219.006 150.97 mo
222.157 147.819 li
219.006 147.819 mo
222.157 150.97 li
219.006 149.394 mo
222.157 149.394 li
220.583 150.97 mo
220.583 147.819 li
218.708 168.519 mo
221.858 165.37 li
218.708 165.37 mo
221.858 168.519 li
218.708 166.944 mo
221.858 166.944 li
220.282 168.519 mo
220.282 165.37 li
218.458 177.519 mo
221.608 174.37 li
218.458 174.37 mo
221.608 177.519 li
218.458 175.944 mo
221.608 175.944 li
220.032 177.519 mo
220.032 174.37 li
218.157 144.519 mo
221.307 141.37 li
218.157 141.37 mo
221.307 144.519 li
218.157 142.944 mo
221.307 142.944 li
219.733 144.519 mo
219.733 141.37 li
217.907 151.12 mo
221.057 147.97 li
217.907 147.97 mo
221.057 151.12 li
217.907 149.544 mo
221.057 149.544 li
219.483 151.12 mo
219.483 147.97 li
217.608 178.919 mo
220.756 175.769 li
217.608 175.769 mo
220.756 178.919 li
217.608 177.345 mo
220.756 177.345 li
219.182 178.919 mo
219.182 175.769 li
217.307 155.019 mo
220.458 151.87 li
217.307 151.87 mo
220.458 155.019 li
217.307 153.444 mo
220.458 153.444 li
218.881 155.019 mo
218.881 151.87 li
217.057 161.669 mo
220.208 158.519 li
217.057 158.519 mo
220.208 161.669 li
217.057 160.095 mo
220.208 160.095 li
218.631 161.669 mo
218.631 158.519 li
216.756 142.87 mo
219.907 139.719 li
216.756 139.719 mo
219.907 142.87 li
216.756 141.294 mo
219.907 141.294 li
218.333 142.87 mo
218.333 139.719 li
216.458 170.12 mo
219.608 166.97 li
216.458 166.97 mo
219.608 170.12 li
216.458 168.544 mo
219.608 168.544 li
218.032 170.12 mo
218.032 166.97 li
216.208 204.919 mo
219.358 201.769 li
216.208 201.769 mo
219.358 204.919 li
216.208 203.345 mo
219.358 203.345 li
217.782 204.919 mo
217.782 201.769 li
215.907 150.019 mo
219.057 146.87 li
215.907 146.87 mo
219.057 150.019 li
215.907 148.444 mo
219.057 148.444 li
217.483 150.019 mo
217.483 146.87 li
215.608 148.47 mo
218.756 145.319 li
215.608 145.319 mo
218.756 148.47 li
215.608 146.894 mo
218.756 146.894 li
217.182 148.47 mo
217.182 145.319 li
215.358 163.12 mo
218.506 159.97 li
215.358 159.97 mo
218.506 163.12 li
215.358 161.544 mo
218.506 161.544 li
216.932 163.12 mo
216.932 159.97 li
215.057 155.22 mo
218.208 152.069 li
215.057 152.069 mo
218.208 155.22 li
215.057 153.644 mo
218.208 153.644 li
216.631 155.22 mo
216.631 152.069 li
214.756 177.419 mo
217.907 174.269 li
214.756 174.269 mo
217.907 177.419 li
214.756 175.845 mo
217.907 175.845 li
216.333 177.419 mo
216.333 174.269 li
214.506 177.519 mo
217.657 174.37 li
214.506 174.37 mo
217.657 177.519 li
214.506 175.944 mo
217.657 175.944 li
216.083 177.519 mo
216.083 174.37 li
@
242.458 153.019 mo
245.608 149.87 li
242.458 149.87 mo
245.608 153.019 li
242.458 151.444 mo
245.608 151.444 li
244.032 153.019 mo
244.032 149.87 li
242.208 157.87 mo
245.358 154.72 li
242.208 154.72 mo
245.358 157.87 li
242.208 156.294 mo
245.358 156.294 li
243.782 157.87 mo
243.782 154.72 li
241.907 126.669 mo
245.057 123.519 li
241.907 123.519 mo
245.057 126.669 li
241.907 125.094 mo
245.057 125.094 li
243.483 126.669 mo
243.483 123.519 li
241.657 117.969 mo
244.807 114.818 li
241.657 114.818 mo
244.807 117.969 li
241.657 116.394 mo
244.807 116.394 li
243.233 117.969 mo
243.233 114.818 li
241.358 146.37 mo
244.506 143.22 li
241.358 143.22 mo
244.506 146.37 li
241.358 144.794 mo
244.506 144.794 li
242.932 146.37 mo
242.932 143.22 li
241.057 194.169 mo
244.208 191.019 li
241.057 191.019 mo
244.208 194.169 li
241.057 192.595 mo
244.208 192.595 li
242.631 194.169 mo
242.631 191.019 li
240.807 148.169 mo
243.958 145.019 li
240.807 145.019 mo
243.958 148.169 li
240.807 146.595 mo
243.958 146.595 li
242.381 148.169 mo
242.381 145.019 li
240.506 177.819 mo
243.657 174.669 li
240.506 174.669 mo
243.657 177.819 li
240.506 176.245 mo
243.657 176.245 li
242.083 177.819 mo
242.083 174.669 li
240.208 104.519 mo
243.358 101.369 li
240.208 101.369 mo
243.358 104.519 li
240.208 102.943 mo
243.358 102.943 li
241.782 104.519 mo
241.782 101.369 li
239.958 176.669 mo
243.108 173.519 li
239.958 173.519 mo
243.108 176.669 li
239.958 175.095 mo
243.108 175.095 li
241.532 176.669 mo
241.532 173.519 li
239.657 156.069 mo
242.807 152.919 li
239.657 152.919 mo
242.807 156.069 li
239.657 154.495 mo
242.807 154.495 li
241.233 156.069 mo
241.233 152.919 li
239.358 159.62 mo
242.506 156.47 li
239.358 156.47 mo
242.506 159.62 li
239.358 158.044 mo
242.506 158.044 li
240.932 159.62 mo
240.932 156.47 li
239.108 140.669 mo
242.256 137.519 li
239.108 137.519 mo
242.256 140.669 li
239.108 139.094 mo
242.256 139.094 li
240.682 140.669 mo
240.682 137.519 li
238.807 134.219 mo
241.958 131.068 li
238.807 131.068 mo
241.958 134.219 li
238.807 132.644 mo
241.958 132.644 li
240.381 134.219 mo
240.381 131.068 li
238.506 126.769 mo
241.657 123.619 li
238.506 123.619 mo
241.657 126.769 li
238.506 125.194 mo
241.657 125.194 li
240.083 126.769 mo
240.083 123.619 li
238.256 133.119 mo
241.407 129.969 li
238.256 129.969 mo
241.407 133.119 li
238.256 131.544 mo
241.407 131.544 li
239.833 133.119 mo
239.833 129.969 li
237.958 134.569 mo
241.108 131.419 li
237.958 131.419 mo
241.108 134.569 li
237.958 132.994 mo
241.108 132.994 li
239.532 134.569 mo
239.532 131.419 li
237.657 127.469 mo
240.807 124.318 li
237.657 124.318 mo
240.807 127.469 li
237.657 125.894 mo
240.807 125.894 li
239.233 127.469 mo
239.233 124.318 li
237.407 145.819 mo
240.557 142.669 li
237.407 142.669 mo
240.557 145.819 li
237.407 144.245 mo
240.557 144.245 li
238.983 145.819 mo
238.983 142.669 li
237.108 164.319 mo
240.256 161.169 li
237.108 161.169 mo
240.256 164.319 li
237.108 162.745 mo
240.256 162.745 li
238.682 164.319 mo
238.682 161.169 li
236.807 139.418 mo
239.958 136.269 li
236.807 136.269 mo
239.958 139.418 li
236.807 137.844 mo
239.958 137.844 li
238.381 139.418 mo
238.381 136.269 li
236.557 186.47 mo
239.708 183.319 li
236.557 183.319 mo
239.708 186.47 li
236.557 184.894 mo
239.708 184.894 li
238.131 186.47 mo
238.131 183.319 li
236.256 143.269 mo
239.407 140.12 li
236.256 140.12 mo
239.407 143.269 li
236.256 141.694 mo
239.407 141.694 li
237.833 143.269 mo
237.833 140.12 li
235.958 164.62 mo
239.108 161.47 li
235.958 161.47 mo
239.108 164.62 li
235.958 163.044 mo
239.108 163.044 li
237.532 164.62 mo
237.532 161.47 li
235.708 185.919 mo
238.858 182.769 li
235.708 182.769 mo
238.858 185.919 li
235.708 184.345 mo
238.858 184.345 li
237.282 185.919 mo
237.282 182.769 li
235.407 138.169 mo
238.557 135.019 li
235.407 135.019 mo
238.557 138.169 li
235.407 136.594 mo
238.557 136.594 li
236.983 138.169 mo
236.983 135.019 li
235.108 133.819 mo
238.256 130.669 li
235.108 130.669 mo
238.256 133.819 li
235.108 132.244 mo
238.256 132.244 li
236.682 133.819 mo
236.682 130.669 li
234.858 154.97 mo
238.006 151.819 li
234.858 151.819 mo
238.006 154.97 li
234.858 153.394 mo
238.006 153.394 li
236.432 154.97 mo
236.432 151.819 li
234.557 159.769 mo
237.708 156.62 li
234.557 156.62 mo
237.708 159.769 li
234.557 158.194 mo
237.708 158.194 li
236.131 159.769 mo
236.131 156.62 li
234.256 157.069 mo
237.407 153.919 li
234.256 153.919 mo
237.407 157.069 li
234.256 155.495 mo
237.407 155.495 li
235.833 157.069 mo
235.833 153.919 li
234.006 145.919 mo
237.157 142.769 li
234.006 142.769 mo
237.157 145.919 li
234.006 144.345 mo
237.157 144.345 li
235.583 145.919 mo
235.583 142.769 li
233.708 153.169 mo
236.858 150.019 li
233.708 150.019 mo
236.858 153.169 li
233.708 151.595 mo
236.858 151.595 li
235.282 153.169 mo
235.282 150.019 li
233.458 144.019 mo
236.608 140.87 li
233.458 140.87 mo
236.608 144.019 li
233.458 142.444 mo
236.608 142.444 li
235.032 144.019 mo
235.032 140.87 li
233.157 156.319 mo
236.307 153.169 li
233.157 153.169 mo
236.307 156.319 li
233.157 154.745 mo
236.307 154.745 li
234.733 156.319 mo
234.733 153.169 li
232.858 146.519 mo
236.006 143.37 li
232.858 143.37 mo
236.006 146.519 li
232.858 144.944 mo
236.006 144.944 li
234.432 146.519 mo
234.432 143.37 li
232.608 158.769 mo
235.756 155.62 li
232.608 155.62 mo
235.756 158.769 li
232.608 157.194 mo
235.756 157.194 li
234.182 158.769 mo
234.182 155.62 li
232.307 157.269 mo
235.458 154.12 li
232.307 154.12 mo
235.458 157.269 li
232.307 155.694 mo
235.458 155.694 li
233.881 157.269 mo
233.881 154.12 li
232.006 130.969 mo
235.157 127.819 li
232.006 127.819 mo
235.157 130.969 li
232.006 129.394 mo
235.157 129.394 li
233.583 130.969 mo
233.583 127.819 li
231.756 151.12 mo
234.907 147.97 li
231.756 147.97 mo
234.907 151.12 li
231.756 149.544 mo
234.907 149.544 li
233.333 151.12 mo
233.333 147.97 li
231.458 154.47 mo
234.608 151.319 li
231.458 151.319 mo
234.608 154.47 li
231.458 152.894 mo
234.608 152.894 li
233.032 154.47 mo
233.032 151.319 li
231.157 147.319 mo
234.307 144.169 li
231.157 144.169 mo
234.307 147.319 li
231.157 145.745 mo
234.307 145.745 li
232.733 147.319 mo
232.733 144.169 li
230.907 177.419 mo
234.057 174.269 li
230.907 174.269 mo
234.057 177.419 li
230.907 175.845 mo
234.057 175.845 li
232.483 177.419 mo
232.483 174.269 li
230.608 140.37 mo
233.756 137.219 li
230.608 137.219 mo
233.756 140.37 li
230.608 138.793 mo
233.756 138.793 li
232.182 140.37 mo
232.182 137.219 li
230.307 170.819 mo
233.458 167.669 li
230.307 167.669 mo
233.458 170.819 li
230.307 169.245 mo
233.458 169.245 li
231.881 170.819 mo
231.881 167.669 li
230.057 172.22 mo
233.208 169.069 li
230.057 169.069 mo
233.208 172.22 li
230.057 170.644 mo
233.208 170.644 li
231.631 172.22 mo
231.631 169.069 li
229.756 140.168 mo
232.907 137.019 li
229.756 137.019 mo
232.907 140.168 li
229.756 138.594 mo
232.907 138.594 li
231.333 140.168 mo
231.333 137.019 li
229.458 133.469 mo
232.608 130.318 li
229.458 130.318 mo
232.608 133.469 li
229.458 131.894 mo
232.608 131.894 li
231.032 133.469 mo
231.032 130.318 li
229.208 150.069 mo
232.358 146.919 li
229.208 146.919 mo
232.358 150.069 li
229.208 148.495 mo
232.358 148.495 li
230.782 150.069 mo
230.782 146.919 li
228.907 143.72 mo
232.057 140.569 li
228.907 140.569 mo
232.057 143.72 li
228.907 142.144 mo
232.057 142.144 li
230.483 143.72 mo
230.483 140.569 li
228.608 159.319 mo
231.756 156.169 li
228.608 156.169 mo
231.756 159.319 li
228.608 157.745 mo
231.756 157.745 li
230.182 159.319 mo
230.182 156.169 li
@
256.608 174.819 mo
259.756 171.669 li
256.608 171.669 mo
259.756 174.819 li
256.608 173.245 mo
259.756 173.245 li
258.182 174.819 mo
258.182 171.669 li
256.358 138.369 mo
259.506 135.219 li
256.358 135.219 mo
259.506 138.369 li
256.358 136.794 mo
259.506 136.794 li
257.932 138.369 mo
257.932 135.219 li
256.057 134.419 mo
259.208 131.269 li
256.057 131.269 mo
259.208 134.419 li
256.057 132.844 mo
259.208 132.844 li
257.631 134.419 mo
257.631 131.269 li
255.756 114.869 mo
258.907 111.719 li
255.756 111.719 mo
258.907 114.869 li
255.756 113.294 mo
258.907 113.294 li
257.333 114.869 mo
257.333 111.719 li
255.506 134.068 mo
258.657 130.919 li
255.506 130.919 mo
258.657 134.068 li
255.506 132.494 mo
258.657 132.494 li
257.083 134.068 mo
257.083 130.919 li
255.208 131.169 mo
258.358 128.019 li
255.208 128.019 mo
258.358 131.169 li
255.208 129.594 mo
258.358 129.594 li
256.782 131.169 mo
256.782 128.019 li
254.907 110.169 mo
258.057 107.019 li
254.907 107.019 mo
258.057 110.169 li
254.907 108.594 mo
258.057 108.594 li
256.483 110.169 mo
256.483 107.019 li
254.657 191.419 mo
257.807 188.269 li
254.657 188.269 mo
257.807 191.419 li
254.657 189.845 mo
257.807 189.845 li
256.233 191.419 mo
256.233 188.269 li
254.358 117.919 mo
257.506 114.77 li
254.358 114.77 mo
257.506 117.919 li
254.358 116.344 mo
257.506 116.344 li
255.932 117.919 mo
255.932 114.77 li
254.057 147.62 mo
257.208 144.47 li
254.057 144.47 mo
257.208 147.62 li
254.057 146.044 mo
257.208 146.044 li
255.631 147.62 mo
255.631 144.47 li
253.807 138.819 mo
256.958 135.669 li
253.807 135.669 mo
256.958 138.819 li
253.807 137.244 mo
256.958 137.244 li
255.381 138.819 mo
255.381 135.669 li
253.506 154.72 mo
256.657 151.569 li
253.506 151.569 mo
256.657 154.72 li
253.506 153.144 mo
256.657 153.144 li
255.083 154.72 mo
255.083 151.569 li
253.208 186.519 mo
256.358 183.37 li
253.208 183.37 mo
256.358 186.519 li
253.208 184.944 mo
256.358 184.944 li
254.782 186.519 mo
254.782 183.37 li
252.958 96.7695 mo
256.108 93.6191 li
252.958 93.6191 mo
256.108 96.7695 li
252.958 95.1934 mo
256.108 95.1934 li
254.532 96.7695 mo
254.532 93.6191 li
252.657 166.019 mo
255.807 162.87 li
252.657 162.87 mo
255.807 166.019 li
252.657 164.444 mo
255.807 164.444 li
254.233 166.019 mo
254.233 162.87 li
252.358 145.269 mo
255.506 142.12 li
252.358 142.12 mo
255.506 145.269 li
252.358 143.694 mo
255.506 143.694 li
253.932 145.269 mo
253.932 142.12 li
252.108 153.87 mo
255.256 150.72 li
252.108 150.72 mo
255.256 153.87 li
252.108 152.294 mo
255.256 152.294 li
253.682 153.87 mo
253.682 150.72 li
251.807 190.62 mo
254.958 187.47 li
251.807 187.47 mo
254.958 190.62 li
251.807 189.044 mo
254.958 189.044 li
253.381 190.62 mo
253.381 187.47 li
251.506 135.019 mo
254.657 131.869 li
251.506 131.869 mo
254.657 135.019 li
251.506 133.444 mo
254.657 133.444 li
253.083 135.019 mo
253.083 131.869 li
251.256 127.219 mo
254.407 124.069 li
251.256 124.069 mo
254.407 127.219 li
251.256 125.644 mo
254.407 125.644 li
252.833 127.219 mo
252.833 124.069 li
250.958 119.919 mo
254.108 116.769 li
250.958 116.769 mo
254.108 119.919 li
250.958 118.344 mo
254.108 118.344 li
252.532 119.919 mo
252.532 116.769 li
250.657 161.62 mo
253.807 158.47 li
250.657 158.47 mo
253.807 161.62 li
250.657 160.044 mo
253.807 160.044 li
252.233 161.62 mo
252.233 158.47 li
250.407 171.019 mo
253.557 167.87 li
250.407 167.87 mo
253.557 171.019 li
250.407 169.444 mo
253.557 169.444 li
251.983 171.019 mo
251.983 167.87 li
250.108 112.318 mo
253.256 109.169 li
250.108 109.169 mo
253.256 112.318 li
250.108 110.744 mo
253.256 110.744 li
251.682 112.318 mo
251.682 109.169 li
249.807 118.469 mo
252.958 115.318 li
249.807 115.318 mo
252.958 118.469 li
249.807 116.894 mo
252.958 116.894 li
251.381 118.469 mo
251.381 115.318 li
249.557 115.269 mo
252.708 112.119 li
249.557 112.119 mo
252.708 115.269 li
249.557 113.693 mo
252.708 113.693 li
251.131 115.269 mo
251.131 112.119 li
249.256 199.319 mo
252.407 196.169 li
249.256 196.169 mo
252.407 199.319 li
249.256 197.745 mo
252.407 197.745 li
250.833 199.319 mo
250.833 196.169 li
249.006 139.12 mo
252.157 135.969 li
249.006 135.969 mo
252.157 139.12 li
249.006 137.544 mo
252.157 137.544 li
250.583 139.12 mo
250.583 135.969 li
248.708 191.47 mo
251.858 188.319 li
248.708 188.319 mo
251.858 191.47 li
248.708 189.894 mo
251.858 189.894 li
250.282 191.47 mo
250.282 188.319 li
248.407 100.369 mo
251.557 97.2188 li
248.407 97.2188 mo
251.557 100.369 li
248.407 98.7939 mo
251.557 98.7939 li
249.983 100.369 mo
249.983 97.2188 li
248.157 135.119 mo
251.307 131.969 li
248.157 131.969 mo
251.307 135.119 li
248.157 133.544 mo
251.307 133.544 li
249.733 135.119 mo
249.733 131.969 li
247.858 180.37 mo
251.006 177.22 li
247.858 177.22 mo
251.006 180.37 li
247.858 178.794 mo
251.006 178.794 li
249.432 180.37 mo
249.432 177.22 li
247.557 126.769 mo
250.708 123.619 li
247.557 123.619 mo
250.708 126.769 li
247.557 125.194 mo
250.708 125.194 li
249.131 126.769 mo
249.131 123.619 li
247.307 101.719 mo
250.458 98.5684 li
247.307 98.5684 mo
250.458 101.719 li
247.307 100.145 mo
250.458 100.145 li
248.881 101.719 mo
248.881 98.5684 li
247.006 158.269 mo
250.157 155.12 li
247.006 155.12 mo
250.157 158.269 li
247.006 156.694 mo
250.157 156.694 li
248.583 158.269 mo
248.583 155.12 li
246.708 158.169 mo
249.858 155.019 li
246.708 155.019 mo
249.858 158.169 li
246.708 156.595 mo
249.858 156.595 li
248.282 158.169 mo
248.282 155.019 li
246.458 143.419 mo
249.608 140.268 li
246.458 140.268 mo
249.608 143.419 li
246.458 141.845 mo
249.608 141.845 li
248.032 143.419 mo
248.032 140.268 li
246.157 153.87 mo
249.307 150.72 li
246.157 150.72 mo
249.307 153.87 li
246.157 152.294 mo
249.307 152.294 li
247.733 153.87 mo
247.733 150.72 li
245.858 131.119 mo
249.006 127.969 li
245.858 127.969 mo
249.006 131.119 li
245.858 129.544 mo
249.006 129.544 li
247.432 131.119 mo
247.432 127.969 li
245.608 137.068 mo
248.756 133.919 li
245.608 133.919 mo
248.756 137.068 li
245.608 135.494 mo
248.756 135.494 li
247.182 137.068 mo
247.182 133.919 li
245.307 137.269 mo
248.458 134.119 li
245.307 134.119 mo
248.458 137.269 li
245.307 135.694 mo
248.458 135.694 li
246.881 137.269 mo
246.881 134.119 li
245.006 92.2695 mo
248.157 89.1191 li
245.006 89.1191 mo
248.157 92.2695 li
245.006 90.6934 mo
248.157 90.6934 li
246.583 92.2695 mo
246.583 89.1191 li
244.756 127.369 mo
247.907 124.219 li
244.756 124.219 mo
247.907 127.369 li
244.756 125.794 mo
247.907 125.794 li
246.333 127.369 mo
246.333 124.219 li
244.458 143.87 mo
247.608 140.72 li
244.458 140.72 mo
247.608 143.87 li
244.458 142.294 mo
247.608 142.294 li
246.032 143.87 mo
246.032 140.72 li
244.157 160.019 mo
247.307 156.87 li
244.157 156.87 mo
247.307 160.019 li
244.157 158.444 mo
247.307 158.444 li
245.733 160.019 mo
245.733 156.87 li
243.907 109.969 mo
247.057 106.818 li
243.907 106.818 mo
247.057 109.969 li
243.907 108.395 mo
247.057 108.395 li
245.483 109.969 mo
245.483 106.818 li
243.608 135.469 mo
246.756 132.319 li
243.608 132.319 mo
246.756 135.469 li
243.608 133.894 mo
246.756 133.894 li
245.182 135.469 mo
245.182 132.319 li
243.307 133.119 mo
246.458 129.969 li
243.307 129.969 mo
246.458 133.119 li
243.307 131.544 mo
246.458 131.544 li
244.881 133.119 mo
244.881 129.969 li
243.057 125.219 mo
246.208 122.068 li
243.057 122.068 mo
246.208 125.219 li
243.057 123.644 mo
246.208 123.644 li
244.631 125.219 mo
244.631 122.068 li
242.756 157.569 mo
245.907 154.419 li
242.756 154.419 mo
245.907 157.569 li
242.756 155.995 mo
245.907 155.995 li
244.333 157.569 mo
244.333 154.419 li
@
270.756 121.919 mo
273.907 118.769 li
270.756 118.769 mo
273.907 121.919 li
270.756 120.344 mo
273.907 120.344 li
272.333 121.919 mo
272.333 118.769 li
270.458 130.069 mo
273.608 126.919 li
270.458 126.919 mo
273.608 130.069 li
270.458 128.494 mo
273.608 128.494 li
272.032 130.069 mo
272.032 126.919 li
270.208 98.7686 mo
273.358 95.6191 li
270.208 95.6191 mo
273.358 98.7686 li
270.208 97.1934 mo
273.358 97.1934 li
271.782 98.7686 mo
271.782 95.6191 li
269.907 106.318 mo
273.057 103.169 li
269.907 103.169 mo
273.057 106.318 li
269.907 104.744 mo
273.057 104.744 li
271.483 106.318 mo
271.483 103.169 li
269.608 90.6689 mo
272.756 87.5186 li
269.608 87.5186 mo
272.756 90.6689 li
269.608 89.0938 mo
272.756 89.0938 li
271.182 90.6689 mo
271.182 87.5186 li
269.358 142.22 mo
272.506 139.069 li
269.358 139.069 mo
272.506 142.22 li
269.358 140.644 mo
272.506 140.644 li
270.932 142.22 mo
270.932 139.069 li
269.057 191.47 mo
272.208 188.319 li
269.057 188.319 mo
272.208 191.47 li
269.057 189.894 mo
272.208 189.894 li
270.631 191.47 mo
270.631 188.319 li
268.756 115.52 mo
271.907 112.369 li
268.756 112.369 mo
271.907 115.52 li
268.756 113.943 mo
271.907 113.943 li
270.333 115.52 mo
270.333 112.369 li
268.506 123.169 mo
271.657 120.02 li
268.506 120.02 mo
271.657 123.169 li
268.506 121.594 mo
271.657 121.594 li
270.083 123.169 mo
270.083 120.02 li
268.208 187.019 mo
271.358 183.87 li
268.208 183.87 mo
271.358 187.019 li
268.208 185.444 mo
271.358 185.444 li
269.782 187.019 mo
269.782 183.87 li
267.907 81.7695 mo
271.057 78.6191 li
267.907 78.6191 mo
271.057 81.7695 li
267.907 80.1934 mo
271.057 80.1934 li
269.483 81.7695 mo
269.483 78.6191 li
267.657 117.818 mo
270.807 114.669 li
267.657 114.669 mo
270.807 117.818 li
267.657 116.244 mo
270.807 116.244 li
269.233 117.818 mo
269.233 114.669 li
267.358 161.97 mo
270.506 158.819 li
267.358 158.819 mo
270.506 161.97 li
267.358 160.394 mo
270.506 160.394 li
268.932 161.97 mo
268.932 158.819 li
267.057 132.769 mo
270.208 129.619 li
267.057 129.619 mo
270.208 132.769 li
267.057 131.194 mo
270.208 131.194 li
268.631 132.769 mo
268.631 129.619 li
266.807 139.418 mo
269.958 136.269 li
266.807 136.269 mo
269.958 139.418 li
266.807 137.844 mo
269.958 137.844 li
268.381 139.418 mo
268.381 136.269 li
266.506 153.47 mo
269.657 150.319 li
266.506 150.319 mo
269.657 153.47 li
266.506 151.894 mo
269.657 151.894 li
268.083 153.47 mo
268.083 150.319 li
266.208 186.97 mo
269.358 183.819 li
266.208 183.819 mo
269.358 186.97 li
266.208 185.394 mo
269.358 185.394 li
267.782 186.97 mo
267.782 183.819 li
265.958 105.318 mo
269.108 102.169 li
265.958 102.169 mo
269.108 105.318 li
265.958 103.744 mo
269.108 103.744 li
267.532 105.318 mo
267.532 102.169 li
265.657 185.919 mo
268.807 182.769 li
265.657 182.769 mo
268.807 185.919 li
265.657 184.345 mo
268.807 184.345 li
267.233 185.919 mo
267.233 182.769 li
265.358 117.119 mo
268.506 113.969 li
265.358 113.969 mo
268.506 117.119 li
265.358 115.544 mo
268.506 115.544 li
266.932 117.119 mo
266.932 113.969 li
265.108 209.12 mo
268.256 205.97 li
265.108 205.97 mo
268.256 209.12 li
265.108 207.544 mo
268.256 207.544 li
266.682 209.12 mo
266.682 205.97 li
264.807 128.119 mo
267.958 124.969 li
264.807 124.969 mo
267.958 128.119 li
264.807 126.544 mo
267.958 126.544 li
266.381 128.119 mo
266.381 124.969 li
264.557 150.519 mo
267.708 147.37 li
264.557 147.37 mo
267.708 150.519 li
264.557 148.944 mo
267.708 148.944 li
266.131 150.519 mo
266.131 147.37 li
264.256 159.169 mo
267.407 156.019 li
264.256 156.019 mo
267.407 159.169 li
264.256 157.595 mo
267.407 157.595 li
265.833 159.169 mo
265.833 156.019 li
263.958 116.318 mo
267.108 113.169 li
263.958 113.169 mo
267.108 116.318 li
263.958 114.744 mo
267.108 114.744 li
265.532 116.318 mo
265.532 113.169 li
263.708 185.769 mo
266.858 182.62 li
263.708 182.62 mo
266.858 185.769 li
263.708 184.194 mo
266.858 184.194 li
265.282 185.769 mo
265.282 182.62 li
263.407 163.919 mo
266.557 160.769 li
263.407 160.769 mo
266.557 163.919 li
263.407 162.345 mo
266.557 162.345 li
264.983 163.919 mo
264.983 160.769 li
263.108 168.62 mo
266.256 165.47 li
263.108 165.47 mo
266.256 168.62 li
263.108 167.044 mo
266.256 167.044 li
264.682 168.62 mo
264.682 165.47 li
262.858 122.219 mo
266.006 119.068 li
262.858 119.068 mo
266.006 122.219 li
262.858 120.644 mo
266.006 120.644 li
264.432 122.219 mo
264.432 119.068 li
262.557 91.3691 mo
265.708 88.2188 li
262.557 88.2188 mo
265.708 91.3691 li
262.557 89.7939 mo
265.708 89.7939 li
264.131 91.3691 mo
264.131 88.2188 li
262.256 138.219 mo
265.407 135.068 li
262.256 135.068 mo
265.407 138.219 li
262.256 136.644 mo
265.407 136.644 li
263.833 138.219 mo
263.833 135.068 li
262.006 200.72 mo
265.157 197.569 li
262.006 197.569 mo
265.157 200.72 li
262.006 199.144 mo
265.157 199.144 li
263.583 200.72 mo
263.583 197.569 li
261.708 123.818 mo
264.858 120.669 li
261.708 120.669 mo
264.858 123.818 li
261.708 122.244 mo
264.858 122.244 li
263.282 123.818 mo
263.282 120.669 li
261.407 124.369 mo
264.557 121.219 li
261.407 121.219 mo
264.557 124.369 li
261.407 122.794 mo
264.557 122.794 li
262.983 124.369 mo
262.983 121.219 li
261.157 192.47 mo
264.307 189.319 li
261.157 189.319 mo
264.307 192.47 li
261.157 190.894 mo
264.307 190.894 li
262.733 192.47 mo
262.733 189.319 li
260.858 123.869 mo
264.006 120.719 li
260.858 120.719 mo
264.006 123.869 li
260.858 122.294 mo
264.006 122.294 li
262.432 123.869 mo
262.432 120.719 li
260.557 158.97 mo
263.708 155.819 li
260.557 155.819 mo
263.708 158.97 li
260.557 157.394 mo
263.708 157.394 li
262.131 158.97 mo
262.131 155.819 li
260.307 169.12 mo
263.458 165.97 li
260.307 165.97 mo
263.458 169.12 li
260.307 167.544 mo
263.458 167.544 li
261.881 169.12 mo
261.881 165.97 li
260.006 103.318 mo
263.157 100.169 li
260.006 100.169 mo
263.157 103.318 li
260.006 101.744 mo
263.157 101.744 li
261.583 103.318 mo
261.583 100.169 li
259.708 144.47 mo
262.858 141.319 li
259.708 141.319 mo
262.858 144.47 li
259.708 142.894 mo
262.858 142.894 li
261.282 144.47 mo
261.282 141.319 li
259.458 104.169 mo
262.608 101.019 li
259.458 101.019 mo
262.608 104.169 li
259.458 102.594 mo
262.608 102.594 li
261.032 104.169 mo
261.032 101.019 li
259.157 161.72 mo
262.307 158.569 li
259.157 158.569 mo
262.307 161.72 li
259.157 160.144 mo
262.307 160.144 li
260.733 161.72 mo
260.733 158.569 li
258.858 144.919 mo
262.006 141.769 li
258.858 141.769 mo
262.006 144.919 li
258.858 143.345 mo
262.006 143.345 li
260.432 144.919 mo
260.432 141.769 li
258.608 144.819 mo
261.756 141.669 li
258.608 141.669 mo
261.756 144.819 li
258.608 143.245 mo
261.756 143.245 li
260.182 144.819 mo
260.182 141.669 li
258.307 145.269 mo
261.458 142.12 li
258.307 142.12 mo
261.458 145.269 li
258.307 143.694 mo
261.458 143.694 li
259.881 145.269 mo
259.881 142.12 li
258.006 160.919 mo
261.157 157.769 li
258.006 157.769 mo
261.157 160.919 li
258.006 159.345 mo
261.157 159.345 li
259.583 160.919 mo
259.583 157.769 li
257.756 134.569 mo
260.907 131.419 li
257.756 131.419 mo
260.907 134.569 li
257.756 132.994 mo
260.907 132.994 li
259.333 134.569 mo
259.333 131.419 li
257.458 106.969 mo
260.608 103.818 li
257.458 103.818 mo
260.608 106.969 li
257.458 105.395 mo
260.608 105.395 li
259.032 106.969 mo
259.032 103.818 li
257.208 173.919 mo
260.358 170.769 li
257.208 170.769 mo
260.358 173.919 li
257.208 172.345 mo
260.358 172.345 li
258.782 173.919 mo
258.782 170.769 li
256.907 100.869 mo
260.057 97.7188 li
256.907 97.7188 mo
260.057 100.869 li
256.907 99.2939 mo
260.057 99.2939 li
258.483 100.869 mo
258.483 97.7188 li
@
284.907 176.12 mo
288.057 172.97 li
284.907 172.97 mo
288.057 176.12 li
284.907 174.544 mo
288.057 174.544 li
286.483 176.12 mo
286.483 172.97 li
284.608 103.419 mo
287.756 100.269 li
284.608 100.269 mo
287.756 103.419 li
284.608 101.844 mo
287.756 101.844 li
286.182 103.419 mo
286.182 100.269 li
284.307 81.8691 mo
287.458 78.7188 li
284.307 78.7188 mo
287.458 81.8691 li
284.307 80.2939 mo
287.458 80.2939 li
285.881 81.8691 mo
285.881 78.7188 li
284.057 104.818 mo
287.208 101.669 li
284.057 101.669 mo
287.208 104.818 li
284.057 103.244 mo
287.208 103.244 li
285.631 104.818 mo
285.631 101.669 li
283.756 93.8691 mo
286.907 90.7188 li
283.756 90.7188 mo
286.907 93.8691 li
283.756 92.2939 mo
286.907 92.2939 li
285.333 93.8691 mo
285.333 90.7188 li
283.458 154.62 mo
286.608 151.47 li
283.458 151.47 mo
286.608 154.62 li
283.458 153.044 mo
286.608 153.044 li
285.032 154.62 mo
285.032 151.47 li
283.208 75.4688 mo
286.358 72.3184 li
283.208 72.3184 mo
286.358 75.4688 li
283.208 73.8945 mo
286.358 73.8945 li
284.782 75.4688 mo
284.782 72.3184 li
282.907 86.7188 mo
286.057 83.5684 li
282.907 83.5684 mo
286.057 86.7188 li
282.907 85.1445 mo
286.057 85.1445 li
284.483 86.7188 mo
284.483 83.5684 li
282.608 94.4688 mo
285.756 91.3184 li
282.608 91.3184 mo
285.756 94.4688 li
282.608 92.8936 mo
285.756 92.8936 li
284.182 94.4688 mo
284.182 91.3184 li
282.358 163.37 mo
285.506 160.22 li
282.358 160.22 mo
285.506 163.37 li
282.358 161.794 mo
285.506 161.794 li
283.932 163.37 mo
283.932 160.22 li
282.057 142.97 mo
285.208 139.819 li
282.057 139.819 mo
285.208 142.97 li
282.057 141.394 mo
285.208 141.394 li
283.631 142.97 mo
283.631 139.819 li
281.756 139.62 mo
284.907 136.469 li
281.756 136.469 mo
284.907 139.62 li
281.756 138.044 mo
284.907 138.044 li
283.333 139.62 mo
283.333 136.469 li
281.506 92.7188 mo
284.657 89.5684 li
281.506 89.5684 mo
284.657 92.7188 li
281.506 91.1445 mo
284.657 91.1445 li
283.083 92.7188 mo
283.083 89.5684 li
281.208 98.7686 mo
284.358 95.6191 li
281.208 95.6191 mo
284.358 98.7686 li
281.208 97.1934 mo
284.358 97.1934 li
282.782 98.7686 mo
282.782 95.6191 li
280.907 135.169 mo
284.057 132.019 li
280.907 132.019 mo
284.057 135.169 li
280.907 133.594 mo
284.057 133.594 li
282.483 135.169 mo
282.483 132.019 li
280.657 107.719 mo
283.807 104.568 li
280.657 104.568 mo
283.807 107.719 li
280.657 106.145 mo
283.807 106.145 li
282.233 107.719 mo
282.233 104.568 li
280.358 183.97 mo
283.506 180.819 li
280.358 180.819 mo
283.506 183.97 li
280.358 182.394 mo
283.506 182.394 li
281.932 183.97 mo
281.932 180.819 li
280.108 115.769 mo
283.256 112.619 li
280.108 112.619 mo
283.256 115.769 li
280.108 114.193 mo
283.256 114.193 li
281.682 115.769 mo
281.682 112.619 li
279.807 112.119 mo
282.958 108.969 li
279.807 108.969 mo
282.958 112.119 li
279.807 110.544 mo
282.958 110.544 li
281.381 112.119 mo
281.381 108.969 li
279.506 92.9189 mo
282.657 89.7686 li
279.506 89.7686 mo
282.657 92.9189 li
279.506 91.3438 mo
282.657 91.3438 li
281.083 92.9189 mo
281.083 89.7686 li
279.256 139.518 mo
282.407 136.369 li
279.256 136.369 mo
282.407 139.518 li
279.256 137.944 mo
282.407 137.944 li
280.833 139.518 mo
280.833 136.369 li
278.958 122.619 mo
282.108 119.469 li
278.958 119.469 mo
282.108 122.619 li
278.958 121.044 mo
282.108 121.044 li
280.532 122.619 mo
280.532 119.469 li
278.657 125.719 mo
281.807 122.568 li
278.657 122.568 mo
281.807 125.719 li
278.657 124.144 mo
281.807 124.144 li
280.233 125.719 mo
280.233 122.568 li
278.407 196.769 mo
281.557 193.62 li
278.407 193.62 mo
281.557 196.769 li
278.407 195.194 mo
281.557 195.194 li
279.983 196.769 mo
279.983 193.62 li
278.108 118.719 mo
281.256 115.568 li
278.108 115.568 mo
281.256 118.719 li
278.108 117.144 mo
281.256 117.144 li
279.682 118.719 mo
279.682 115.568 li
277.807 93.5684 mo
280.958 90.4189 li
277.807 90.4189 mo
280.958 93.5684 li
277.807 91.9941 mo
280.958 91.9941 li
279.381 93.5684 mo
279.381 90.4189 li
277.557 138.119 mo
280.708 134.969 li
277.557 134.969 mo
280.708 138.119 li
277.557 136.544 mo
280.708 136.544 li
279.131 138.119 mo
279.131 134.969 li
277.256 141.22 mo
280.407 138.068 li
277.256 138.068 mo
280.407 141.22 li
277.256 139.643 mo
280.407 139.643 li
278.833 141.22 mo
278.833 138.068 li
276.958 125.119 mo
280.108 121.969 li
276.958 121.969 mo
280.108 125.119 li
276.958 123.544 mo
280.108 123.544 li
278.532 125.119 mo
278.532 121.969 li
276.708 75.9189 mo
279.858 72.7695 li
276.708 72.7695 mo
279.858 75.9189 li
276.708 74.3438 mo
279.858 74.3438 li
278.282 75.9189 mo
278.282 72.7695 li
276.407 154.37 mo
279.557 151.22 li
276.407 151.22 mo
279.557 154.37 li
276.407 152.794 mo
279.557 152.794 li
277.983 154.37 mo
277.983 151.22 li
276.108 99.0684 mo
279.256 95.9189 li
276.108 95.9189 mo
279.256 99.0684 li
276.108 97.4941 mo
279.256 97.4941 li
277.682 99.0684 mo
277.682 95.9189 li
275.858 122.27 mo
279.006 119.119 li
275.858 119.119 mo
279.006 122.27 li
275.858 120.693 mo
279.006 120.693 li
277.432 122.27 mo
277.432 119.119 li
275.557 91.4688 mo
278.708 88.3184 li
275.557 88.3184 mo
278.708 91.4688 li
275.557 89.8936 mo
278.708 89.8936 li
277.131 91.4688 mo
277.131 88.3184 li
275.256 178.669 mo
278.407 175.519 li
275.256 175.519 mo
278.407 178.669 li
275.256 177.095 mo
278.407 177.095 li
276.833 178.669 mo
276.833 175.519 li
275.006 185.819 mo
278.157 182.669 li
275.006 182.669 mo
278.157 185.819 li
275.006 184.245 mo
278.157 184.245 li
276.583 185.819 mo
276.583 182.669 li
274.708 123.669 mo
277.858 120.519 li
274.708 120.519 mo
277.858 123.669 li
274.708 122.094 mo
277.858 122.094 li
276.282 123.669 mo
276.282 120.519 li
274.407 108.02 mo
277.557 104.869 li
274.407 104.869 mo
277.557 108.02 li
274.407 106.443 mo
277.557 106.443 li
275.983 108.02 mo
275.983 104.869 li
274.157 152.569 mo
277.307 149.419 li
274.157 149.419 mo
277.307 152.569 li
274.157 150.995 mo
277.307 150.995 li
275.733 152.569 mo
275.733 149.419 li
273.858 115.119 mo
277.006 111.969 li
273.858 111.969 mo
277.006 115.119 li
273.858 113.544 mo
277.006 113.544 li
275.432 115.119 mo
275.432 111.969 li
273.557 132.769 mo
276.708 129.619 li
273.557 129.619 mo
276.708 132.769 li
273.557 131.194 mo
276.708 131.194 li
275.131 132.769 mo
275.131 129.619 li
273.307 114.02 mo
276.458 110.869 li
273.307 110.869 mo
276.458 114.02 li
273.307 112.443 mo
276.458 112.443 li
274.881 114.02 mo
274.881 110.869 li
273.006 125.469 mo
276.157 122.318 li
273.006 122.318 mo
276.157 125.469 li
273.006 123.894 mo
276.157 123.894 li
274.583 125.469 mo
274.583 122.318 li
272.756 126.969 mo
275.907 123.818 li
272.756 123.818 mo
275.907 126.969 li
272.756 125.394 mo
275.907 125.394 li
274.333 126.969 mo
274.333 123.818 li
272.458 123.169 mo
275.608 120.02 li
272.458 120.02 mo
275.608 123.169 li
272.458 121.594 mo
275.608 121.594 li
274.032 123.169 mo
274.032 120.02 li
272.157 169.519 mo
275.307 166.37 li
272.157 166.37 mo
275.307 169.519 li
272.157 167.944 mo
275.307 167.944 li
273.733 169.519 mo
273.733 166.37 li
271.907 144.069 mo
275.057 140.919 li
271.907 140.919 mo
275.057 144.069 li
271.907 142.495 mo
275.057 142.495 li
273.483 144.069 mo
273.483 140.919 li
271.608 103.669 mo
274.756 100.52 li
271.608 100.52 mo
274.756 103.669 li
271.608 102.094 mo
274.756 102.094 li
273.182 103.669 mo
273.182 100.52 li
271.307 143.769 mo
274.458 140.62 li
271.307 140.62 mo
274.458 143.769 li
271.307 142.194 mo
274.458 142.194 li
272.881 143.769 mo
272.881 140.62 li
271.057 150.569 mo
274.208 147.419 li
271.057 147.419 mo
274.208 150.569 li
271.057 148.995 mo
274.208 148.995 li
272.631 150.569 mo
272.631 147.419 li
@
299.006 154.319 mo
302.157 151.169 li
299.006 151.169 mo
302.157 154.319 li
299.006 152.745 mo
302.157 152.745 li
300.583 154.319 mo
300.583 151.169 li
298.756 182.319 mo
301.907 179.169 li
298.756 179.169 mo
301.907 182.319 li
298.756 180.745 mo
301.907 180.745 li
300.333 182.319 mo
300.333 179.169 li
298.458 110.869 mo
301.608 107.719 li
298.458 107.719 mo
301.608 110.869 li
298.458 109.294 mo
301.608 109.294 li
300.032 110.869 mo
300.032 107.719 li
298.157 78.0684 mo
301.307 74.9189 li
298.157 74.9189 mo
301.307 78.0684 li
298.157 76.4941 mo
301.307 76.4941 li
299.733 78.0684 mo
299.733 74.9189 li
297.907 108.719 mo
301.057 105.568 li
297.907 105.568 mo
301.057 108.719 li
297.907 107.144 mo
301.057 107.144 li
299.483 108.719 mo
299.483 105.568 li
297.608 90.4688 mo
300.756 87.3184 li
297.608 87.3184 mo
300.756 90.4688 li
297.608 88.8945 mo
300.756 88.8945 li
299.182 90.4688 mo
299.182 87.3184 li
297.307 115.469 mo
300.458 112.318 li
297.307 112.318 mo
300.458 115.469 li
297.307 113.894 mo
300.458 113.894 li
298.881 115.469 mo
298.881 112.318 li
297.057 130.219 mo
300.208 127.069 li
297.057 127.069 mo
300.208 130.219 li
297.057 128.644 mo
300.208 128.644 li
298.631 130.219 mo
298.631 127.069 li
296.756 129.119 mo
299.907 125.969 li
296.756 125.969 mo
299.907 129.119 li
296.756 127.544 mo
299.907 127.544 li
298.333 129.119 mo
298.333 125.969 li
296.458 138.119 mo
299.608 134.969 li
296.458 134.969 mo
299.608 138.119 li
296.458 136.544 mo
299.608 136.544 li
298.032 138.119 mo
298.032 134.969 li
296.208 101.318 mo
299.358 98.1689 li
296.208 98.1689 mo
299.358 101.318 li
296.208 99.7441 mo
299.358 99.7441 li
297.782 101.318 mo
297.782 98.1689 li
295.907 81.9189 mo
299.057 78.7695 li
295.907 78.7695 mo
299.057 81.9189 li
295.907 80.3438 mo
299.057 80.3438 li
297.483 81.9189 mo
297.483 78.7695 li
295.657 106.269 mo
298.807 103.119 li
295.657 103.119 mo
298.807 106.269 li
295.657 104.693 mo
298.807 104.693 li
297.233 106.269 mo
297.233 103.119 li
295.358 105.519 mo
298.506 102.369 li
295.358 102.369 mo
298.506 105.519 li
295.358 103.943 mo
298.506 103.943 li
296.932 105.519 mo
296.932 102.369 li
295.057 119.219 mo
298.208 116.068 li
295.057 116.068 mo
298.208 119.219 li
295.057 117.644 mo
298.208 117.644 li
296.631 119.219 mo
296.631 116.068 li
294.807 152.069 mo
297.958 148.919 li
294.807 148.919 mo
297.958 152.069 li
294.807 150.495 mo
297.958 150.495 li
296.381 152.069 mo
296.381 148.919 li
294.506 158.22 mo
297.657 155.069 li
294.506 155.069 mo
297.657 158.22 li
294.506 156.644 mo
297.657 156.644 li
296.083 158.22 mo
296.083 155.069 li
294.208 98.5684 mo
297.358 95.4189 li
294.208 95.4189 mo
297.358 98.5684 li
294.208 96.9941 mo
297.358 96.9941 li
295.782 98.5684 mo
295.782 95.4189 li
293.958 114.169 mo
297.108 111.02 li
293.958 111.02 mo
297.108 114.169 li
293.958 112.594 mo
297.108 112.594 li
295.532 114.169 mo
295.532 111.02 li
293.657 197.919 mo
296.807 194.769 li
293.657 194.769 mo
296.807 197.919 li
293.657 196.345 mo
296.807 196.345 li
295.233 197.919 mo
295.233 194.769 li
293.358 126.619 mo
296.506 123.469 li
293.358 123.469 mo
296.506 126.619 li
293.358 125.044 mo
296.506 125.044 li
294.932 126.619 mo
294.932 123.469 li
293.108 144.319 mo
296.256 141.169 li
293.108 141.169 mo
296.256 144.319 li
293.108 142.745 mo
296.256 142.745 li
294.682 144.319 mo
294.682 141.169 li
292.807 107.719 mo
295.958 104.568 li
292.807 104.568 mo
295.958 107.719 li
292.807 106.145 mo
295.958 106.145 li
294.381 107.719 mo
294.381 104.568 li
292.506 179.87 mo
295.657 176.72 li
292.506 176.72 mo
295.657 179.87 li
292.506 178.294 mo
295.657 178.294 li
294.083 179.87 mo
294.083 176.72 li
292.256 62.4688 mo
295.407 59.3184 li
292.256 59.3184 mo
295.407 62.4688 li
292.256 60.8936 mo
295.407 60.8936 li
293.833 62.4688 mo
293.833 59.3184 li
291.958 105.919 mo
295.108 102.77 li
291.958 102.77 mo
295.108 105.919 li
291.958 104.344 mo
295.108 104.344 li
293.532 105.919 mo
293.532 102.77 li
291.657 76.4189 mo
294.807 73.2686 li
291.657 73.2686 mo
294.807 76.4189 li
291.657 74.8438 mo
294.807 74.8438 li
293.233 76.4189 mo
293.233 73.2686 li
291.407 73.8691 mo
294.557 70.7188 li
291.407 70.7188 mo
294.557 73.8691 li
291.407 72.2939 mo
294.557 72.2939 li
292.983 73.8691 mo
292.983 70.7188 li
291.108 137.068 mo
294.256 133.919 li
291.108 133.919 mo
294.256 137.068 li
291.108 135.494 mo
294.256 135.494 li
292.682 137.068 mo
292.682 133.919 li
290.807 86.0684 mo
293.958 82.9189 li
290.807 82.9189 mo
293.958 86.0684 li
290.807 84.4941 mo
293.958 84.4941 li
292.381 86.0684 mo
292.381 82.9189 li
290.557 156.019 mo
293.708 152.87 li
290.557 152.87 mo
293.708 156.019 li
290.557 154.444 mo
293.708 154.444 li
292.131 156.019 mo
292.131 152.87 li
290.256 71.2188 mo
293.407 68.0684 li
290.256 68.0684 mo
293.407 71.2188 li
290.256 69.6436 mo
293.407 69.6436 li
291.833 71.2188 mo
291.833 68.0684 li
289.958 168.819 mo
293.108 165.669 li
289.958 165.669 mo
293.108 168.819 li
289.958 167.245 mo
293.108 167.245 li
291.532 168.819 mo
291.532 165.669 li
289.708 111.77 mo
292.858 108.619 li
289.708 108.619 mo
292.858 111.77 li
289.708 110.193 mo
292.858 110.193 li
291.282 111.77 mo
291.282 108.619 li
289.407 111.269 mo
292.557 108.119 li
289.407 108.119 mo
292.557 111.269 li
289.407 109.693 mo
292.557 109.693 li
290.983 111.269 mo
290.983 108.119 li
289.108 203.47 mo
292.256 200.319 li
289.108 200.319 mo
292.256 203.47 li
289.108 201.894 mo
292.256 201.894 li
290.682 203.47 mo
290.682 200.319 li
288.858 113.068 mo
292.006 109.919 li
288.858 109.919 mo
292.006 113.068 li
288.858 111.494 mo
292.006 111.494 li
290.432 113.068 mo
290.432 109.919 li
288.557 68.7188 mo
291.708 65.5684 li
288.557 65.5684 mo
291.708 68.7188 li
288.557 67.1445 mo
291.708 67.1445 li
290.131 68.7188 mo
290.131 65.5684 li
288.307 114.469 mo
291.458 111.318 li
288.307 111.318 mo
291.458 114.469 li
288.307 112.895 mo
291.458 112.895 li
289.881 114.469 mo
289.881 111.318 li
288.006 93.4189 mo
291.157 90.2686 li
288.006 90.2686 mo
291.157 93.4189 li
288.006 91.8438 mo
291.157 91.8438 li
289.583 93.4189 mo
289.583 90.2686 li
287.708 117.02 mo
290.858 113.869 li
287.708 113.869 mo
290.858 117.02 li
287.708 115.443 mo
290.858 115.443 li
289.282 117.02 mo
289.282 113.869 li
287.458 106.119 mo
290.608 102.969 li
287.458 102.969 mo
290.608 106.119 li
287.458 104.544 mo
290.608 104.544 li
289.032 106.119 mo
289.032 102.969 li
287.157 101.27 mo
290.307 98.1191 li
287.157 98.1191 mo
290.307 101.27 li
287.157 99.6934 mo
290.307 99.6934 li
288.733 101.27 mo
288.733 98.1191 li
286.858 155.919 mo
290.006 152.769 li
286.858 152.769 mo
290.006 155.919 li
286.858 154.345 mo
290.006 154.345 li
288.432 155.919 mo
288.432 152.769 li
286.608 104.969 mo
289.756 101.818 li
286.608 101.818 mo
289.756 104.969 li
286.608 103.394 mo
289.756 103.394 li
288.182 104.969 mo
288.182 101.818 li
286.307 129.169 mo
289.458 126.019 li
286.307 126.019 mo
289.458 129.169 li
286.307 127.594 mo
289.458 127.594 li
287.881 129.169 mo
287.881 126.019 li
286.006 92.9189 mo
289.157 89.7686 li
286.006 89.7686 mo
289.157 92.9189 li
286.006 91.3438 mo
289.157 91.3438 li
287.583 92.9189 mo
287.583 89.7686 li
285.756 118.369 mo
288.907 115.219 li
285.756 115.219 mo
288.907 118.369 li
285.756 116.794 mo
288.907 116.794 li
287.333 118.369 mo
287.333 115.219 li
285.458 101.519 mo
288.608 98.3691 li
285.458 98.3691 mo
288.608 101.519 li
285.458 99.9434 mo
288.608 99.9434 li
287.032 101.519 mo
287.032 98.3691 li
285.157 124.469 mo
288.307 121.318 li
285.157 121.318 mo
288.307 124.469 li
285.157 122.894 mo
288.307 122.894 li
286.733 124.469 mo
286.733 121.318 li
@
313.157 104.869 mo
316.307 101.719 li
313.157 101.719 mo
316.307 104.869 li
313.157 103.294 mo
316.307 103.294 li
314.733 104.869 mo
314.733 101.719 li
312.858 105.068 mo
316.006 101.919 li
312.858 101.919 mo
316.006 105.068 li
312.858 103.494 mo
316.006 103.494 li
314.432 105.068 mo
314.432 101.919 li
312.608 89.7686 mo
315.756 86.6191 li
312.608 86.6191 mo
315.756 89.7686 li
312.608 88.1934 mo
315.756 88.1934 li
314.182 89.7686 mo
314.182 86.6191 li
312.307 92.7188 mo
315.458 89.5684 li
312.307 89.5684 mo
315.458 92.7188 li
312.307 91.1445 mo
315.458 91.1445 li
313.881 92.7188 mo
313.881 89.5684 li
312.006 81.0195 mo
315.157 77.8691 li
312.006 77.8691 mo
315.157 81.0195 li
312.006 79.4434 mo
315.157 79.4434 li
313.583 81.0195 mo
313.583 77.8691 li
311.756 72.4189 mo
314.907 69.2686 li
311.756 69.2686 mo
314.907 72.4189 li
311.756 70.8438 mo
314.907 70.8438 li
313.333 72.4189 mo
313.333 69.2686 li
311.458 97.8691 mo
314.608 94.7188 li
311.458 94.7188 mo
314.608 97.8691 li
311.458 96.2939 mo
314.608 96.2939 li
313.032 97.8691 mo
313.032 94.7188 li
311.208 76.6191 mo
314.358 73.4688 li
311.208 73.4688 mo
314.358 76.6191 li
311.208 75.0439 mo
314.358 75.0439 li
312.782 76.6191 mo
312.782 73.4688 li
310.907 90.8691 mo
314.057 87.7188 li
310.907 87.7188 mo
314.057 90.8691 li
310.907 89.2939 mo
314.057 89.2939 li
312.483 90.8691 mo
312.483 87.7188 li
310.608 95.7188 mo
313.756 92.5684 li
310.608 92.5684 mo
313.756 95.7188 li
310.608 94.1445 mo
313.756 94.1445 li
312.182 95.7188 mo
312.182 92.5684 li
310.358 79.1191 mo
313.506 75.9688 li
310.358 75.9688 mo
313.506 79.1191 li
310.358 77.5439 mo
313.506 77.5439 li
311.932 79.1191 mo
311.932 75.9688 li
310.057 121.969 mo
313.208 118.818 li
310.057 118.818 mo
313.208 121.969 li
310.057 120.395 mo
313.208 120.395 li
311.631 121.969 mo
311.631 118.818 li
309.756 92.2695 mo
312.907 89.1191 li
309.756 89.1191 mo
312.907 92.2695 li
309.756 90.6934 mo
312.907 90.6934 li
311.333 92.2695 mo
311.333 89.1191 li
309.506 75.5684 mo
312.657 72.4189 li
309.506 72.4189 mo
312.657 75.5684 li
309.506 73.9941 mo
312.657 73.9941 li
311.083 75.5684 mo
311.083 72.4189 li
309.208 88.3184 mo
312.358 85.1689 li
309.208 85.1689 mo
312.358 88.3184 li
309.208 86.7441 mo
312.358 86.7441 li
310.782 88.3184 mo
310.782 85.1689 li
308.907 89.7188 mo
312.057 86.5684 li
308.907 86.5684 mo
312.057 89.7188 li
308.907 88.1445 mo
312.057 88.1445 li
310.483 89.7188 mo
310.483 86.5684 li
308.657 192.519 mo
311.807 189.37 li
308.657 189.37 mo
311.807 192.519 li
308.657 190.944 mo
311.807 190.944 li
310.233 192.519 mo
310.233 189.37 li
308.358 92.6689 mo
311.506 89.5186 li
308.358 89.5186 mo
311.506 92.6689 li
308.358 91.0938 mo
311.506 91.0938 li
309.932 92.6689 mo
309.932 89.5186 li
308.057 95.2188 mo
311.208 92.0684 li
308.057 92.0684 mo
311.208 95.2188 li
308.057 93.6436 mo
311.208 93.6436 li
309.631 95.2188 mo
309.631 92.0684 li
307.807 73.7686 mo
310.958 70.6191 li
307.807 70.6191 mo
310.958 73.7686 li
307.807 72.1934 mo
310.958 72.1934 li
309.381 73.7686 mo
309.381 70.6191 li
307.506 104.818 mo
310.657 101.669 li
307.506 101.669 mo
310.657 104.818 li
307.506 103.244 mo
310.657 103.244 li
309.083 104.818 mo
309.083 101.669 li
307.208 97.3184 mo
310.358 94.1689 li
307.208 94.1689 mo
310.358 97.3184 li
307.208 95.7441 mo
310.358 95.7441 li
308.782 97.3184 mo
308.782 94.1689 li
306.958 116.769 mo
310.108 113.619 li
306.958 113.619 mo
310.108 116.769 li
306.958 115.193 mo
310.108 115.193 li
308.532 116.769 mo
308.532 113.619 li
306.657 90.0684 mo
309.807 86.9189 li
306.657 86.9189 mo
309.807 90.0684 li
306.657 88.4941 mo
309.807 88.4941 li
308.233 90.0684 mo
308.233 86.9189 li
306.358 110.219 mo
309.506 107.068 li
306.358 107.068 mo
309.506 110.219 li
306.358 108.644 mo
309.506 108.644 li
307.932 110.219 mo
307.932 107.068 li
306.108 98.6191 mo
309.256 95.4688 li
306.108 95.4688 mo
309.256 98.6191 li
306.108 97.0439 mo
309.256 97.0439 li
307.682 98.6191 mo
307.682 95.4688 li
305.807 102.869 mo
308.958 99.7188 li
305.807 99.7188 mo
308.958 102.869 li
305.807 101.294 mo
308.958 101.294 li
307.381 102.869 mo
307.381 99.7188 li
305.506 101.068 mo
308.657 97.9189 li
305.506 97.9189 mo
308.657 101.068 li
305.506 99.4941 mo
308.657 99.4941 li
307.083 101.068 mo
307.083 97.9189 li
305.256 85.2686 mo
308.407 82.1191 li
305.256 82.1191 mo
308.407 85.2686 li
305.256 83.6934 mo
308.407 83.6934 li
306.833 85.2686 mo
306.833 82.1191 li
304.958 80.1689 mo
308.108 77.0186 li
304.958 77.0186 mo
308.108 80.1689 li
304.958 78.5938 mo
308.108 78.5938 li
306.532 80.1689 mo
306.532 77.0186 li
304.657 102.068 mo
307.807 98.9189 li
304.657 98.9189 mo
307.807 102.068 li
304.657 100.494 mo
307.807 100.494 li
306.233 102.068 mo
306.233 98.9189 li
304.407 93.3691 mo
307.557 90.2188 li
304.407 90.2188 mo
307.557 93.3691 li
304.407 91.7939 mo
307.557 91.7939 li
305.983 93.3691 mo
305.983 90.2188 li
304.108 82.6689 mo
307.256 79.5195 li
304.108 79.5195 mo
307.256 82.6689 li
304.108 81.0938 mo
307.256 81.0938 li
305.682 82.6689 mo
305.682 79.5195 li
303.858 126.818 mo
307.006 123.669 li
303.858 123.669 mo
307.006 126.818 li
303.858 125.244 mo
307.006 125.244 li
305.432 126.818 mo
305.432 123.669 li
303.557 196.22 mo
306.708 193.069 li
303.557 193.069 mo
306.708 196.22 li
303.557 194.644 mo
306.708 194.644 li
305.131 196.22 mo
305.131 193.069 li
303.256 105.02 mo
306.407 101.869 li
303.256 101.869 mo
306.407 105.02 li
303.256 103.443 mo
306.407 103.443 li
304.833 105.02 mo
304.833 101.869 li
303.006 100.869 mo
306.157 97.7188 li
303.006 97.7188 mo
306.157 100.869 li
303.006 99.2939 mo
306.157 99.2939 li
304.583 100.869 mo
304.583 97.7188 li
302.708 131.969 mo
305.858 128.818 li
302.708 128.818 mo
305.858 131.969 li
302.708 130.394 mo
305.858 130.394 li
304.282 131.969 mo
304.282 128.818 li
302.407 101.619 mo
305.557 98.4688 li
302.407 98.4688 mo
305.557 101.619 li
302.407 100.044 mo
305.557 100.044 li
303.983 101.619 mo
303.983 98.4688 li
302.157 50.8691 mo
305.307 47.7188 li
302.157 47.7188 mo
305.307 50.8691 li
302.157 49.2939 mo
305.307 49.2939 li
303.733 50.8691 mo
303.733 47.7188 li
301.858 93.2686 mo
305.006 90.1191 li
301.858 90.1191 mo
305.006 93.2686 li
301.858 91.6934 mo
305.006 91.6934 li
303.432 93.2686 mo
303.432 90.1191 li
301.557 137.119 mo
304.708 133.969 li
301.557 133.969 mo
304.708 137.119 li
301.557 135.544 mo
304.708 135.544 li
303.131 137.119 mo
303.131 133.969 li
301.307 83.4189 mo
304.458 80.2695 li
301.307 80.2695 mo
304.458 83.4189 li
301.307 81.8438 mo
304.458 81.8438 li
302.881 83.4189 mo
302.881 80.2695 li
301.006 93.9189 mo
304.157 90.7695 li
301.006 90.7695 mo
304.157 93.9189 li
301.006 92.3438 mo
304.157 92.3438 li
302.583 93.9189 mo
302.583 90.7695 li
300.708 117.818 mo
303.858 114.669 li
300.708 114.669 mo
303.858 117.818 li
300.708 116.244 mo
303.858 116.244 li
302.282 117.818 mo
302.282 114.669 li
300.458 137.818 mo
303.608 134.669 li
300.458 134.669 mo
303.608 137.818 li
300.458 136.244 mo
303.608 136.244 li
302.032 137.818 mo
302.032 134.669 li
300.157 74.0684 mo
303.307 70.9189 li
300.157 70.9189 mo
303.307 74.0684 li
300.157 72.4941 mo
303.307 72.4941 li
301.733 74.0684 mo
301.733 70.9189 li
299.858 97.3691 mo
303.006 94.2188 li
299.858 94.2188 mo
303.006 97.3691 li
299.858 95.7939 mo
303.006 95.7939 li
301.432 97.3691 mo
301.432 94.2188 li
299.608 82.2686 mo
302.756 79.1191 li
299.608 79.1191 mo
302.756 82.2686 li
299.608 80.6934 mo
302.756 80.6934 li
301.182 82.2686 mo
301.182 79.1191 li
299.307 133.119 mo
302.458 129.969 li
299.307 129.969 mo
302.458 133.119 li
299.307 131.544 mo
302.458 131.544 li
300.881 133.119 mo
300.881 129.969 li
@
327.307 77.5684 mo
330.458 74.4189 li
327.307 74.4189 mo
330.458 77.5684 li
327.307 75.9941 mo
330.458 75.9941 li
328.881 77.5684 mo
328.881 74.4189 li
327.006 124.769 mo
330.157 121.619 li
327.006 121.619 mo
330.157 124.769 li
327.006 123.193 mo
330.157 123.193 li
328.583 124.769 mo
328.583 121.619 li
326.756 142.37 mo
329.907 139.219 li
326.756 139.219 mo
329.907 142.37 li
326.756 140.794 mo
329.907 140.794 li
328.333 142.37 mo
328.333 139.219 li
326.458 185.569 mo
329.608 182.419 li
326.458 182.419 mo
329.608 185.569 li
326.458 183.995 mo
329.608 183.995 li
328.032 185.569 mo
328.032 182.419 li
326.157 96.2188 mo
329.307 93.0684 li
326.157 93.0684 mo
329.307 96.2188 li
326.157 94.6436 mo
329.307 94.6436 li
327.733 96.2188 mo
327.733 93.0684 li
325.907 93.9688 mo
329.057 90.8184 li
325.907 90.8184 mo
329.057 93.9688 li
325.907 92.3936 mo
329.057 92.3936 li
327.483 93.9688 mo
327.483 90.8184 li
325.608 121.619 mo
328.756 118.469 li
325.608 118.469 mo
328.756 121.619 li
325.608 120.044 mo
328.756 120.044 li
327.182 121.619 mo
327.182 118.469 li
325.307 91.2686 mo
328.458 88.1191 li
325.307 88.1191 mo
328.458 91.2686 li
325.307 89.6934 mo
328.458 89.6934 li
326.881 91.2686 mo
326.881 88.1191 li
325.057 59.6191 mo
328.208 56.4688 li
325.057 56.4688 mo
328.208 59.6191 li
325.057 58.0439 mo
328.208 58.0439 li
326.631 59.6191 mo
326.631 56.4688 li
324.756 74.7188 mo
327.907 71.5684 li
324.756 71.5684 mo
327.907 74.7188 li
324.756 73.1445 mo
327.907 73.1445 li
326.333 74.7188 mo
326.333 71.5684 li
324.458 63.8184 mo
327.608 60.6689 li
324.458 60.6689 mo
327.608 63.8184 li
324.458 62.2441 mo
327.608 62.2441 li
326.032 63.8184 mo
326.032 60.6689 li
324.208 136.719 mo
327.358 133.568 li
324.208 133.568 mo
327.358 136.719 li
324.208 135.144 mo
327.358 135.144 li
325.782 136.719 mo
325.782 133.568 li
323.907 65.9688 mo
327.057 62.8184 li
323.907 62.8184 mo
327.057 65.9688 li
323.907 64.3936 mo
327.057 64.3936 li
325.483 65.9688 mo
325.483 62.8184 li
323.608 127.019 mo
326.756 123.869 li
323.608 123.869 mo
326.756 127.019 li
323.608 125.443 mo
326.756 125.443 li
325.182 127.019 mo
325.182 123.869 li
323.358 127.019 mo
326.506 123.869 li
323.358 123.869 mo
326.506 127.019 li
323.358 125.443 mo
326.506 125.443 li
324.932 127.019 mo
324.932 123.869 li
323.057 92.0684 mo
326.208 88.9189 li
323.057 88.9189 mo
326.208 92.0684 li
323.057 90.4941 mo
326.208 90.4941 li
324.631 92.0684 mo
324.631 88.9189 li
322.756 111.719 mo
325.907 108.568 li
322.756 108.568 mo
325.907 111.719 li
322.756 110.144 mo
325.907 110.144 li
324.333 111.719 mo
324.333 108.568 li
322.506 83.6191 mo
325.657 80.4688 li
322.506 80.4688 mo
325.657 83.6191 li
322.506 82.0439 mo
325.657 82.0439 li
324.083 83.6191 mo
324.083 80.4688 li
322.208 118.019 mo
325.358 114.869 li
322.208 114.869 mo
325.358 118.019 li
322.208 116.443 mo
325.358 116.443 li
323.782 118.019 mo
323.782 114.869 li
321.907 67.2686 mo
325.057 64.1191 li
321.907 64.1191 mo
325.057 67.2686 li
321.907 65.6934 mo
325.057 65.6934 li
323.483 67.2686 mo
323.483 64.1191 li
321.657 77.1191 mo
324.807 73.9688 li
321.657 73.9688 mo
324.807 77.1191 li
321.657 75.5439 mo
324.807 75.5439 li
323.233 77.1191 mo
323.233 73.9688 li
321.358 156.47 mo
324.506 153.319 li
321.358 153.319 mo
324.506 156.47 li
321.358 154.894 mo
324.506 154.894 li
322.932 156.47 mo
322.932 153.319 li
321.057 85.5195 mo
324.208 82.3691 li
321.057 82.3691 mo
324.208 85.5195 li
321.057 83.9434 mo
324.208 83.9434 li
322.631 85.5195 mo
322.631 82.3691 li
320.807 73.3184 mo
323.958 70.1689 li
320.807 70.1689 mo
323.958 73.3184 li
320.807 71.7441 mo
323.958 71.7441 li
322.381 73.3184 mo
322.381 70.1689 li
320.506 76.6191 mo
323.657 73.4688 li
320.506 73.4688 mo
323.657 76.6191 li
320.506 75.0439 mo
323.657 75.0439 li
322.083 76.6191 mo
322.083 73.4688 li
320.208 133.619 mo
323.358 130.469 li
320.208 130.469 mo
323.358 133.619 li
320.208 132.044 mo
323.358 132.044 li
321.782 133.619 mo
321.782 130.469 li
319.958 118.419 mo
323.108 115.269 li
319.958 115.269 mo
323.108 118.419 li
319.958 116.844 mo
323.108 116.844 li
321.532 118.419 mo
321.532 115.269 li
319.657 135.818 mo
322.807 132.669 li
319.657 132.669 mo
322.807 135.818 li
319.657 134.244 mo
322.807 134.244 li
321.233 135.818 mo
321.233 132.669 li
319.407 117.219 mo
322.557 114.068 li
319.407 114.068 mo
322.557 117.219 li
319.407 115.644 mo
322.557 115.644 li
320.983 117.219 mo
320.983 114.068 li
319.108 80.8184 mo
322.256 77.6689 li
319.108 77.6689 mo
322.256 80.8184 li
319.108 79.2441 mo
322.256 79.2441 li
320.682 80.8184 mo
320.682 77.6689 li
318.807 129.769 mo
321.958 126.619 li
318.807 126.619 mo
321.958 129.769 li
318.807 128.194 mo
321.958 128.194 li
320.381 129.769 mo
320.381 126.619 li
318.557 80.0186 mo
321.708 76.8691 li
318.557 76.8691 mo
321.708 80.0186 li
318.557 78.4434 mo
321.708 78.4434 li
320.131 80.0186 mo
320.131 76.8691 li
318.256 110.068 mo
321.407 106.919 li
318.256 106.919 mo
321.407 110.068 li
318.256 108.494 mo
321.407 108.494 li
319.833 110.068 mo
319.833 106.919 li
317.958 148.069 mo
321.108 144.919 li
317.958 144.919 mo
321.108 148.069 li
317.958 146.495 mo
321.108 146.495 li
319.532 148.069 mo
319.532 144.919 li
317.708 57.2686 mo
320.858 54.1191 li
317.708 54.1191 mo
320.858 57.2686 li
317.708 55.6934 mo
320.858 55.6934 li
319.282 57.2686 mo
319.282 54.1191 li
317.407 125.619 mo
320.557 122.469 li
317.407 122.469 mo
320.557 125.619 li
317.407 124.044 mo
320.557 124.044 li
318.983 125.619 mo
318.983 122.469 li
317.108 66.9688 mo
320.256 63.8184 li
317.108 63.8184 mo
320.256 66.9688 li
317.108 65.3936 mo
320.256 65.3936 li
318.682 66.9688 mo
318.682 63.8184 li
316.858 98.1191 mo
320.006 94.9688 li
316.858 94.9688 mo
320.006 98.1191 li
316.858 96.5439 mo
320.006 96.5439 li
318.432 98.1191 mo
318.432 94.9688 li
316.557 162.12 mo
319.708 158.97 li
316.557 158.97 mo
319.708 162.12 li
316.557 160.544 mo
319.708 160.544 li
318.131 162.12 mo
318.131 158.97 li
316.256 90.8184 mo
319.407 87.6689 li
316.256 87.6689 mo
319.407 90.8184 li
316.256 89.2441 mo
319.407 89.2441 li
317.833 90.8184 mo
317.833 87.6689 li
316.006 111.219 mo
319.157 108.068 li
316.006 108.068 mo
319.157 111.219 li
316.006 109.644 mo
319.157 109.644 li
317.583 111.219 mo
317.583 108.068 li
315.708 91.7188 mo
318.858 88.5684 li
315.708 88.5684 mo
318.858 91.7188 li
315.708 90.1436 mo
318.858 90.1436 li
317.282 91.7188 mo
317.282 88.5684 li
315.407 66.9189 mo
318.557 63.7695 li
315.407 63.7695 mo
318.557 66.9189 li
315.407 65.3438 mo
318.557 65.3438 li
316.983 66.9189 mo
316.983 63.7695 li
315.157 95.3184 mo
318.307 92.1689 li
315.157 92.1689 mo
318.307 95.3184 li
315.157 93.7441 mo
318.307 93.7441 li
316.733 95.3184 mo
316.733 92.1689 li
314.858 46.4189 mo
318.006 43.2686 li
314.858 43.2686 mo
318.006 46.4189 li
314.858 44.8438 mo
318.006 44.8438 li
316.432 46.4189 mo
316.432 43.2686 li
314.557 68.9688 mo
317.708 65.8184 li
314.557 65.8184 mo
317.708 68.9688 li
314.557 67.3936 mo
317.708 67.3936 li
316.131 68.9688 mo
316.131 65.8184 li
314.307 79.8184 mo
317.458 76.6689 li
314.307 76.6689 mo
317.458 79.8184 li
314.307 78.2441 mo
317.458 78.2441 li
315.881 79.8184 mo
315.881 76.6689 li
314.006 72.7188 mo
317.157 69.5684 li
314.006 69.5684 mo
317.157 72.7188 li
314.006 71.1436 mo
317.157 71.1436 li
315.583 72.7188 mo
315.583 69.5684 li
313.708 75.4189 mo
316.858 72.2686 li
313.708 72.2686 mo
316.858 75.4189 li
313.708 73.8438 mo
316.858 73.8438 li
315.282 75.4189 mo
315.282 72.2686 li
313.458 159.319 mo
316.608 156.169 li
313.458 156.169 mo
316.608 159.319 li
313.458 157.745 mo
316.608 157.745 li
315.032 159.319 mo
315.032 156.169 li
@
341.458 14.2695 mo
344.608 11.1191 li
341.458 11.1191 mo
344.608 14.2695 li
341.458 12.6934 mo
344.608 12.6934 li
343.032 14.2695 mo
343.032 11.1191 li
341.157 32.2188 mo
344.307 29.0684 li
341.157 29.0684 mo
344.307 32.2188 li
341.157 30.6436 mo
344.307 30.6436 li
342.733 32.2188 mo
342.733 29.0684 li
340.858 94.9688 mo
344.006 91.8184 li
340.858 91.8184 mo
344.006 94.9688 li
340.858 93.3945 mo
344.006 93.3945 li
342.432 94.9688 mo
342.432 91.8184 li
340.608 183.419 mo
343.756 180.269 li
340.608 180.269 mo
343.756 183.419 li
340.608 181.845 mo
343.756 181.845 li
342.182 183.419 mo
342.182 180.269 li
340.307 71.9688 mo
343.458 68.8184 li
340.307 68.8184 mo
343.458 71.9688 li
340.307 70.3936 mo
343.458 70.3936 li
341.881 71.9688 mo
341.881 68.8184 li
340.006 89.4189 mo
343.157 86.2695 li
340.006 86.2695 mo
343.157 89.4189 li
340.006 87.8438 mo
343.157 87.8438 li
341.583 89.4189 mo
341.583 86.2695 li
339.756 53.0186 mo
342.907 49.8691 li
339.756 49.8691 mo
342.907 53.0186 li
339.756 51.4434 mo
342.907 51.4434 li
341.333 53.0186 mo
341.333 49.8691 li
339.458 57.2188 mo
342.608 54.0684 li
339.458 54.0684 mo
342.608 57.2188 li
339.458 55.6436 mo
342.608 55.6436 li
341.032 57.2188 mo
341.032 54.0684 li
339.157 154.87 mo
342.307 151.72 li
339.157 151.72 mo
342.307 154.87 li
339.157 153.294 mo
342.307 153.294 li
340.733 154.87 mo
340.733 151.72 li
338.907 55.6191 mo
342.057 52.4688 li
338.907 52.4688 mo
342.057 55.6191 li
338.907 54.0439 mo
342.057 54.0439 li
340.483 55.6191 mo
340.483 52.4688 li
338.608 77.0186 mo
341.756 73.8691 li
338.608 73.8691 mo
341.756 77.0186 li
338.608 75.4434 mo
341.756 75.4434 li
340.182 77.0186 mo
340.182 73.8691 li
338.307 80.8184 mo
341.458 77.6689 li
338.307 77.6689 mo
341.458 80.8184 li
338.307 79.2441 mo
341.458 79.2441 li
339.881 80.8184 mo
339.881 77.6689 li
338.057 158.419 mo
341.208 155.269 li
338.057 155.269 mo
341.208 158.419 li
338.057 156.845 mo
341.208 156.845 li
339.631 158.419 mo
339.631 155.269 li
337.756 101.27 mo
340.907 98.1191 li
337.756 98.1191 mo
340.907 101.27 li
337.756 99.6934 mo
340.907 99.6934 li
339.333 101.27 mo
339.333 98.1191 li
337.458 98.4189 mo
340.608 95.2695 li
337.458 95.2695 mo
340.608 98.4189 li
337.458 96.8438 mo
340.608 96.8438 li
339.032 98.4189 mo
339.032 95.2695 li
337.208 101.969 mo
340.358 98.8184 li
337.208 98.8184 mo
340.358 101.969 li
337.208 100.394 mo
340.358 100.394 li
338.782 101.969 mo
338.782 98.8184 li
336.907 108.818 mo
340.057 105.669 li
336.907 105.669 mo
340.057 108.818 li
336.907 107.244 mo
340.057 107.244 li
338.483 108.818 mo
338.483 105.669 li
336.608 90.4189 mo
339.756 87.2686 li
336.608 87.2686 mo
339.756 90.4189 li
336.608 88.8438 mo
339.756 88.8438 li
338.182 90.4189 mo
338.182 87.2686 li
336.358 52.9189 mo
339.506 49.7686 li
336.358 49.7686 mo
339.506 52.9189 li
336.358 51.3438 mo
339.506 51.3438 li
337.932 52.9189 mo
337.932 49.7686 li
336.057 67.0186 mo
339.208 63.8691 li
336.057 63.8691 mo
339.208 67.0186 li
336.057 65.4434 mo
339.208 65.4434 li
337.631 67.0186 mo
337.631 63.8691 li
335.756 70.1191 mo
338.907 66.9688 li
335.756 66.9688 mo
338.907 70.1191 li
335.756 68.5439 mo
338.907 68.5439 li
337.333 70.1191 mo
337.333 66.9688 li
335.506 49.8691 mo
338.657 46.7188 li
335.506 46.7188 mo
338.657 49.8691 li
335.506 48.2939 mo
338.657 48.2939 li
337.083 49.8691 mo
337.083 46.7188 li
335.208 65.4688 mo
338.358 62.3184 li
335.208 62.3184 mo
338.358 65.4688 li
335.208 63.8936 mo
338.358 63.8936 li
336.782 65.4688 mo
336.782 62.3184 li
334.958 64.2686 mo
338.108 61.1191 li
334.958 61.1191 mo
338.108 64.2686 li
334.958 62.6934 mo
338.108 62.6934 li
336.532 64.2686 mo
336.532 61.1191 li
334.657 50.6191 mo
337.807 47.4688 li
334.657 47.4688 mo
337.807 50.6191 li
334.657 49.0439 mo
337.807 49.0439 li
336.233 50.6191 mo
336.233 47.4688 li
334.358 73.5684 mo
337.506 70.4189 li
334.358 70.4189 mo
337.506 73.5684 li
334.358 71.9941 mo
337.506 71.9941 li
335.932 73.5684 mo
335.932 70.4189 li
334.108 74.6689 mo
337.256 71.5186 li
334.108 71.5186 mo
337.256 74.6689 li
334.108 73.0938 mo
337.256 73.0938 li
335.682 74.6689 mo
335.682 71.5186 li
333.807 73.7188 mo
336.958 70.5684 li
333.807 70.5684 mo
336.958 73.7188 li
333.807 72.1436 mo
336.958 72.1436 li
335.381 73.7188 mo
335.381 70.5684 li
333.506 82.5195 mo
336.657 79.3691 li
333.506 79.3691 mo
336.657 82.5195 li
333.506 80.9434 mo
336.657 80.9434 li
335.083 82.5195 mo
335.083 79.3691 li
333.256 54.0684 mo
336.407 50.9189 li
333.256 50.9189 mo
336.407 54.0684 li
333.256 52.4941 mo
336.407 52.4941 li
334.833 54.0684 mo
334.833 50.9189 li
332.958 89.9688 mo
336.108 86.8184 li
332.958 86.8184 mo
336.108 89.9688 li
332.958 88.3936 mo
336.108 88.3936 li
334.532 89.9688 mo
334.532 86.8184 li
332.657 134.019 mo
335.807 130.869 li
332.657 130.869 mo
335.807 134.019 li
332.657 132.443 mo
335.807 132.443 li
334.233 134.019 mo
334.233 130.869 li
332.407 64.0684 mo
335.557 60.9189 li
332.407 60.9189 mo
335.557 64.0684 li
332.407 62.4941 mo
335.557 62.4941 li
333.983 64.0684 mo
333.983 60.9189 li
332.108 74.4688 mo
335.256 71.3184 li
332.108 71.3184 mo
335.256 74.4688 li
332.108 72.8936 mo
335.256 72.8936 li
333.682 74.4688 mo
333.682 71.3184 li
331.807 71.4189 mo
334.958 68.2695 li
331.807 68.2695 mo
334.958 71.4189 li
331.807 69.8438 mo
334.958 69.8438 li
333.381 71.4189 mo
333.381 68.2695 li
331.557 70.3184 mo
334.708 67.1689 li
331.557 67.1689 mo
334.708 70.3184 li
331.557 68.7441 mo
334.708 68.7441 li
333.131 70.3184 mo
333.131 67.1689 li
331.256 68.8691 mo
334.407 65.7188 li
331.256 65.7188 mo
334.407 68.8691 li
331.256 67.2939 mo
334.407 67.2939 li
332.833 68.8691 mo
332.833 65.7188 li
330.958 110.318 mo
334.108 107.169 li
330.958 107.169 mo
334.108 110.318 li
330.958 108.744 mo
334.108 108.744 li
332.532 110.318 mo
332.532 107.169 li
330.708 80.8691 mo
333.858 77.7188 li
330.708 77.7188 mo
333.858 80.8691 li
330.708 79.2939 mo
333.858 79.2939 li
332.282 80.8691 mo
332.282 77.7188 li
330.407 126.919 mo
333.557 123.769 li
330.407 123.769 mo
333.557 126.919 li
330.407 125.344 mo
333.557 125.344 li
331.983 126.919 mo
331.983 123.769 li
330.108 116.818 mo
333.256 113.669 li
330.108 113.669 mo
333.256 116.818 li
330.108 115.244 mo
333.256 115.244 li
331.682 116.818 mo
331.682 113.669 li
329.858 77.7188 mo
333.006 74.5684 li
329.858 74.5684 mo
333.006 77.7188 li
329.858 76.1445 mo
333.006 76.1445 li
331.432 77.7188 mo
331.432 74.5684 li
329.557 174.72 mo
332.708 171.569 li
329.557 171.569 mo
332.708 174.72 li
329.557 173.144 mo
332.708 173.144 li
331.131 174.72 mo
331.131 171.569 li
329.256 122.568 mo
332.407 119.419 li
329.256 119.419 mo
332.407 122.568 li
329.256 120.994 mo
332.407 120.994 li
330.833 122.568 mo
330.833 119.419 li
329.006 93.6191 mo
332.157 90.4688 li
329.006 90.4688 mo
332.157 93.6191 li
329.006 92.0439 mo
332.157 92.0439 li
330.583 93.6191 mo
330.583 90.4688 li
328.708 134.318 mo
331.858 131.169 li
328.708 131.169 mo
331.858 134.318 li
328.708 132.744 mo
331.858 132.744 li
330.282 134.318 mo
330.282 131.169 li
328.407 95.6191 mo
331.557 92.4688 li
328.407 92.4688 mo
331.557 95.6191 li
328.407 94.0439 mo
331.557 94.0439 li
329.983 95.6191 mo
329.983 92.4688 li
328.157 176.319 mo
331.307 173.169 li
328.157 173.169 mo
331.307 176.319 li
328.157 174.745 mo
331.307 174.745 li
329.733 176.319 mo
329.733 173.169 li
327.858 79.9189 mo
331.006 76.7686 li
327.858 76.7686 mo
331.006 79.9189 li
327.858 78.3438 mo
331.006 78.3438 li
329.432 79.9189 mo
329.432 76.7686 li
327.557 76.0186 mo
330.708 72.8691 li
327.557 72.8691 mo
330.708 76.0186 li
327.557 74.4434 mo
330.708 74.4434 li
329.131 76.0186 mo
329.131 72.8691 li
@
343.958 81.2188 mo
347.108 78.0684 li
343.958 78.0684 mo
347.108 81.2188 li
343.958 79.6436 mo
347.108 79.6436 li
345.532 81.2188 mo
345.532 78.0684 li
343.708 57.7695 mo
346.858 54.6191 li
343.708 54.6191 mo
346.858 57.7695 li
343.708 56.1934 mo
346.858 56.1934 li
345.282 57.7695 mo
345.282 54.6191 li
343.407 25.1689 mo
346.557 22.0186 li
343.407 22.0186 mo
346.557 25.1689 li
343.407 23.5938 mo
346.557 23.5938 li
344.983 25.1689 mo
344.983 22.0186 li
343.108 41.7686 mo
346.256 38.6191 li
343.108 38.6191 mo
346.256 41.7686 li
343.108 40.1934 mo
346.256 40.1934 li
344.682 41.7686 mo
344.682 38.6191 li
342.858 81.7695 mo
346.006 78.6191 li
342.858 78.6191 mo
346.006 81.7695 li
342.858 80.1934 mo
346.006 80.1934 li
344.432 81.7695 mo
344.432 78.6191 li
342.557 23.6191 mo
345.708 20.4688 li
342.557 20.4688 mo
345.708 23.6191 li
342.557 22.0439 mo
345.708 22.0439 li
344.131 23.6191 mo
344.131 20.4688 li
342.307 55.2686 mo
345.458 52.1191 li
342.307 52.1191 mo
345.458 55.2686 li
342.307 53.6934 mo
345.458 53.6934 li
343.881 55.2686 mo
343.881 52.1191 li
342.006 53.3691 mo
345.157 50.2188 li
342.006 50.2188 mo
345.157 53.3691 li
342.006 51.7939 mo
345.157 51.7939 li
343.583 53.3691 mo
343.583 50.2188 li
341.708 132.269 mo
344.858 129.119 li
341.708 129.119 mo
344.858 132.269 li
341.708 130.693 mo
344.858 130.693 li
343.282 132.269 mo
343.282 129.119 li
@
37.3813 5.59375 mo
37.3813 226.794 li
348.381 226.794 li
348.381 5.59375 li
37.3813 5.59375 li
37.3813 5.59375 li
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/E <1C60D8A8C9B64EDFE336C703EA12FABA68C9F5D15F1A9B67653505BC29F8D56A4237858E054C3198877A> |-/b <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 32 /space putdup 65 /A putdup 69 /E putdup 98 /b putdup 101 /e putdup 108 /l putdup 109 /m putdup 110 /n putdup 115 /s putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 28{/.notdef}rp /b 2{/.notdef}rp /e 6{/.notdef}rp /l /m /n 4{/.notdef}rp /s 140{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf182.871 22.3418 mo(All Ensembles)sh3 lw
265.221 20.5781 mo
265.221 17.4297 li
.75021 .679683 .670222 .90164 cmyk
@
263.647 19.0039 mo
266.795 19.0039 li
@
263.647 17.4297 mo
266.795 20.5781 li
@
263.647 20.5781 mo
266.795 17.4297 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 83 /S putdup 97 /a putdup 99 /c putdup 100 /d putdup 102 /f putdup 105 /i putdup 111 /o putdup 114 /r putdup 116 /t putdup 118 /v putdup 121 /y putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf62.6182 35.3418 mo(Sets Selected for Sensitivity Analysis)sh2 lw
265.221 33.416 mo
265.221 30.2676 li
3.09944e-05 .993988 1 3.09944e-05 cmyk
@
263.647 31.8418 mo
266.795 31.8418 li
@
263.647 30.2676 mo
266.795 33.416 li
@
263.647 33.416 mo
266.795 30.2676 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLB+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B6079F6D8BCAB13EAF1F64F3C3ED827606376F9F4A528D2C08D43C9621FD70D4EC5667AD384CAC91739649352B61D94F> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLB+Helvetica-Bold /Encoding getdup 65 /A putpop%ADOEndSubsetFont
/PTVRLB+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C 5{/.notdef}rp /I 6{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v /.notdef /x 101{/.notdef}rp /fi 33{/.notdef}rp]PTVRLB+Helvetica-Bold nfPTVRLB+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf.208008 12.0381 mo(A)sh.5 lw
1 lj
410.385 227.358 mo
410.385 7.88086 li
717.229 7.88086 li
717.229 227.358 li
410.385 227.358 li
0 0 0 0 cmyk
@
441.055 7.88086 mo
441.055 11.1904 li
441.055 227.358 mo
441.055 223.997 li
410.385 227.358 mo
410.385 7.88086 li
410.385 227.358 mo
717.229 227.358 li
717.229 227.358 mo
717.229 7.88086 li
410.385 227.358 mo
410.385 7.88086 li
410.385 7.88086 mo
717.229 7.88086 li
410.385 227.358 mo
717.229 227.358 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf431.006 241.294 mo(1.7)sh502.395 7.88086 mo
502.395 11.1904 li
502.395 227.358 mo
502.395 223.997 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf494.342 241.294 mo(4.0)sh563.783 7.88086 mo
563.783 11.1904 li
563.783 227.358 mo
563.783 223.997 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /.notdef /six /seven /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf555.764 241.294 mo(6.3)sh625.17 7.88086 mo
625.17 11.1904 li
625.17 227.358 mo
625.17 223.997 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf616.374 241.294 mo(8.6)sh686.511 7.88086 mo
686.511 11.1904 li
686.511 227.358 mo
686.511 223.997 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf673.709 241.294 mo(10.8)sh717.229 227.358 mo
714.153 227.358 li
410.385 227.358 mo
413.414 227.358 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf394.666 230.926 mo(0)sh717.229 154.182 mo
714.153 154.182 li
410.385 154.182 mo
413.414 154.182 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf389.08 157.84 mo(50)[6.67383 0 ]xsh717.229 81.0054 mo
714.153 81.0054 li
410.385 81.0054 mo
413.414 81.0054 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf383.494 85.5371 mo(100)sh717.229 7.88086 mo
714.153 7.88086 li
410.385 7.88086 mo
413.414 7.88086 li
@
PTVRLA+Helvetica*1 [12 0 0 -12 0 0 ]msf383.494 12.5371 mo(150)sh717.229 227.358 mo
717.229 7.88086 li
410.385 227.358 mo
410.385 7.88086 li
410.385 7.88086 mo
717.229 7.88086 li
410.385 227.358 mo
717.229 227.358 li
@
421.97 227.358 mo
421.97 12.2407 li
432.883 12.2407 li
432.883 227.358 li
421.97 227.358 li
cp
ef
1 lw
0 lj
4 ml
421.97 227.358 mo
421.97 12.2407 li
432.883 12.2407 li
432.883 227.358 li
421.97 227.358 li
cp
@
.5 lw
1 lj
10 ml
421.97 227.358 mo
421.97 12.2407 li
432.883 12.2407 li
432.883 227.358 li
421.97 227.358 li
@
483.31 227.358 mo
483.31 221.476 li
494.223 221.476 li
494.223 227.358 li
483.31 227.358 li
cp
ef
1 lw
0 lj
4 ml
483.31 227.358 mo
483.31 221.476 li
494.223 221.476 li
494.223 227.358 li
483.31 227.358 li
cp
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
.5 lw
1 lj
10 ml
483.31 227.358 mo
483.31 221.476 li
494.223 221.476 li
494.223 227.358 li
483.31 227.358 li
@
grestore
544.699 227.358 mo
544.699 113.207 li
555.611 113.207 li
555.611 227.358 li
544.699 227.358 li
cp
ef
544.699 227.358 mo
544.699 113.207 li
555.611 113.207 li
555.611 227.358 li
544.699 227.358 li
cp
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
.5 lw
1 lj
10 ml
544.699 227.358 mo
544.699 113.207 li
555.611 113.207 li
555.611 227.358 li
544.699 227.358 li
@
grestore
606.039 227.358 mo
606.039 121.979 li
616.951 121.979 li
616.951 227.358 li
606.039 227.358 li
cp
ef
606.039 227.358 mo
606.039 121.979 li
616.951 121.979 li
616.951 227.358 li
606.039 227.358 li
cp
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
.5 lw
1 lj
10 ml
606.039 227.358 mo
606.039 121.979 li
616.951 121.979 li
616.951 227.358 li
606.039 227.358 li
@
grestore
667.426 227.358 mo
667.426 209.761 li
678.339 209.761 li
678.339 227.358 li
667.426 227.358 li
cp
ef
667.426 227.358 mo
667.426 209.761 li
678.339 209.761 li
678.339 227.358 li
667.426 227.358 li
cp
@
.5 lw
1 lj
10 ml
410.385 227.358 mo
717.229 227.358 li
667.426 227.358 mo
667.426 209.761 li
678.339 209.761 li
678.339 227.358 li
667.426 227.358 li
@
435.575 227.358 mo
435.575 157.123 li
446.487 157.123 li
446.487 227.358 li
435.575 227.358 li
cp
0 0 0 .25 cmyk
ef
435.575 227.358 mo
435.575 157.123 li
446.487 157.123 li
446.487 227.358 li
435.575 227.358 li
0 0 0 1 cmyk
@
496.963 227.358 mo
496.963 224.417 li
507.875 224.417 li
507.875 227.358 li
496.963 227.358 li
cp
0 0 0 .25 cmyk
ef
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
496.963 227.358 mo
496.963 224.417 li
507.875 224.417 li
507.875 227.358 li
496.963 227.358 li
0 0 0 1 cmyk
@
grestore
558.351 227.358 mo
558.351 193.686 li
569.215 193.686 li
569.215 227.358 li
558.351 227.358 li
cp
ef
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
558.351 227.358 mo
558.351 193.686 li
569.215 193.686 li
569.215 227.358 li
558.351 227.358 li
0 0 0 1 cmyk
@
grestore
619.691 227.358 mo
619.691 196.627 li
630.604 196.627 li
630.604 227.358 li
619.691 227.358 li
cp
ef
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
619.691 227.358 mo
619.691 196.627 li
630.604 196.627 li
630.604 227.358 li
619.691 227.358 li
0 0 0 1 cmyk
@
grestore
681.08 227.358 mo
681.08 218.533 li
691.992 218.533 li
691.992 227.358 li
681.08 227.358 li
cp
ef
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
681.08 227.358 mo
681.08 218.533 li
691.992 218.533 li
691.992 227.358 li
681.08 227.358 li
0 0 0 1 cmyk
@
grestore
449.227 227.358 mo
449.227 224.417 li
460.14 224.417 li
460.14 227.358 li
449.227 227.358 li
cp
.172549 .992157 1 .086275 cmyk
ef
1 lw
0 lj
4 ml
449.227 227.358 mo
449.227 224.417 li
460.14 224.417 li
460.14 227.358 li
449.227 227.358 li
cp
0 0 0 1 cmyk
@
.5 lw
1 lj
10 ml
449.227 227.358 mo
449.227 224.417 li
460.14 224.417 li
460.14 227.358 li
449.227 227.358 li
@
510.616 227.358 mo
510.616 227.358 li
521.528 227.358 li
521.528 227.358 li
510.616 227.358 li
cp
.172549 .992157 1 .086275 cmyk
ef
1 lw
0 lj
4 ml
510.616 227.358 mo
510.616 227.358 li
521.528 227.358 li
521.528 227.358 li
510.616 227.358 li
cp
0 0 0 1 cmyk
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
.5 lw
1 lj
10 ml
510.616 227.358 mo
510.616 227.358 li
521.528 227.358 li
521.528 227.358 li
510.616 227.358 li
@
grestore
571.955 227.358 mo
571.955 224.417 li
582.868 224.417 li
582.868 227.358 li
571.955 227.358 li
cp
.172549 .992157 1 .086275 cmyk
ef
571.955 227.358 mo
571.955 224.417 li
582.868 224.417 li
582.868 227.358 li
571.955 227.358 li
cp
0 0 0 1 cmyk
@
.5 lw
1 lj
10 ml
571.955 227.358 mo
571.955 224.417 li
582.868 224.417 li
582.868 227.358 li
571.955 227.358 li
@
633.344 227.358 mo
633.344 225.888 li
644.256 225.888 li
644.256 227.358 li
633.344 227.358 li
cp
.172549 .992157 1 .086275 cmyk
ef
1 lw
0 lj
4 ml
633.344 227.358 mo
633.344 225.888 li
644.256 225.888 li
644.256 227.358 li
633.344 227.358 li
cp
0 0 0 1 cmyk
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
.5 lw
1 lj
10 ml
633.344 227.358 mo
633.344 225.888 li
644.256 225.888 li
644.256 227.358 li
633.344 227.358 li
@
grestore
694.683 227.358 mo
694.683 227.358 li
705.596 227.358 li
705.596 227.358 li
694.683 227.358 li
cp
.172549 .992157 1 .086275 cmyk
ef
694.683 227.358 mo
694.683 227.358 li
705.596 227.358 li
705.596 227.358 li
694.683 227.358 li
cp
0 0 0 1 cmyk
@
gsave
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
clp
1 lj
10 ml
694.683 227.358 mo
694.683 227.358 li
705.596 227.358 li
705.596 227.358 li
694.683 227.358 li
@
grestore
410.385 227.411 mo
717.278 227.411 li
717.278 7.88086 li
410.385 7.88086 li
410.385 227.411 li
cp
@
PTVRLA+Helvetica*1 [5.76866 0 0 -6.30382 0 0 ]msf409.565 229.62 mo( )sh716.462 10.0898 mo( )shPTVRLA+Helvetica*1 [10 0 0 -10 0 0 ]msf574.603 24.2856 mo(Entire Ensemble)sh542.099 25.2842 mo
542.099 16.2007 li
571.6 16.2007 li
571.6 25.2842 li
542.099 25.2842 li
542.099 25.2842 li
cp
ef
542.099 25.2842 mo
542.099 16.2007 li
571.6 16.2007 li
571.6 25.2842 li
542.099 25.2842 li
542.099 25.2842 li
cp
@
.5 lw
1 lj
10 ml
542.099 25.2842 mo
542.099 16.2007 li
571.6 16.2007 li
571.6 25.2842 li
542.099 25.2842 li
542.099 25.2842 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLA+Helvetica /Encoding getdup 45 /hyphen putdup 117 /u putpop%ADOEndSubsetFont
/PTVRLA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]PTVRLA+Helvetica nfPTVRLA+Helvetica*1 [10 0 0 -10 0 0 ]msf574.603 36.7075 mo(Sets used for cross-validation)sh542.099 37.6177 mo
542.099 28.5342 li
571.6 28.5342 li
571.6 37.6177 li
542.099 37.6177 li
542.099 37.6177 li
cp
0 0 0 .25 cmyk
ef
542.099 37.6177 mo
542.099 28.5342 li
571.6 28.5342 li
571.6 37.6177 li
542.099 37.6177 li
542.099 37.6177 li
0 0 0 1 cmyk
@
PTVRLA+Helvetica*1 [10 0 0 -10 0 0 ]msf574.603 49.0356 mo(Sets used for sensitivity)sh542.099 49.9507 mo
542.099 40.8677 li
571.6 40.8677 li
571.6 49.9507 li
542.099 49.9507 li
542.099 49.9507 li
cp
.172549 .992157 1 .086275 cmyk
ef
1 lw
0 lj
4 ml
542.099 49.9507 mo
542.099 40.8677 li
571.6 40.8677 li
571.6 49.9507 li
542.099 49.9507 li
542.099 49.9507 li
cp
0 0 0 1 cmyk
@
.5 lw
1 lj
10 ml
542.099 49.9507 mo
542.099 40.8677 li
571.6 40.8677 li
571.6 49.9507 li
542.099 49.9507 li
542.099 49.9507 li
@
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLB+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B6079F6D86D2961CAF81439F91370DD118B66018550AD01E9FB9B811FB259D586568107A41A9FC4447F7E941703E573C108ACEFF9EEDCC441475625059AB6F9DE01EE73B9E3B5A59D72DF9A62E0B93E3EC5CC78FB4B07333FEB5838906C427072CD8963E0047555D77242142A6A1CFE1F8DA50B582E38A720E5C3B2BAF84E910386279078C5309261DF084C30054C5F7785118231EF63C44D47C5D3A0E12F0CD98913A840F49DFFA5D> |-/N <1C60D8A8C9B6079F4056A67B07AC214E11A0833288A2EACF147312A351ABD6E19454B2E6CAAB3689D4E14C> |-/h <1C60D8A8C9B7D8BE16DE7D2CCAC882CBB80CB178347C369D563E16571825BCD460B33CCABFA0F7B274AA5CF07A65EE1EF72867ED85421DC089AC207E67C133947186A79B8A5C81238F06C0DA864BA9120A2DCD3A471A0D9F04FD06E68C51B5CFD9576960343422EA29BE26808C> |-/p <1C60D8A8C9B7D8BE19C9920B65BF569755CBC7004398C5F3E07B367F0E7B21E557936DCBD9EF9335D9341C63852CE0C6CD4F49B90122A57276DE63D17D21D54F902070BE3CE79ECEAFFF0AA566ECBAB31BF348C6D8C56B9E07D665CEA291F28872C6AD93B413125AA4075F806569703377C307FA20494A67837D4FC26FAB7DC94721A0B384A23590E20FBFB60312165FBB83> |-/u <1C60D8A8C9B7D8BE298ED182A3F33DCB7BE539E6C3399DF0FB84931D328A058718BA576345AB2E09C6F45BA11DD49FF63E46039F6DCA1460946638F085A9C4202F8E676A0955411ED6C0E7E9A212C6F8002DEB99D3B9D78F19BAB4F5709645F4B6BE5E366BC1C978> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLB+Helvetica-Bold /Encoding getdup 66 /B putdup 78 /N putdup 104 /h putdup 112 /p putdup 117 /u putpop%ADOEndSubsetFont
/PTVRLB+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /B /C 5{/.notdef}rp /I 4{/.notdef}rp /N /.notdef /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x 101{/.notdef}rp /fi 33{/.notdef}rp]PTVRLB+Helvetica-Bold nfPTVRLB+Helvetica-Bold*1 [12 0 0 -12 0 0 ]msf435.031 261.894 mo(Second norm from the nominal parameter set)shPTVRLB+Helvetica-Bold*1 [0 -12 -12 0 0 0 ]msf378.032 190.212 mo(Number of parameter sets)[-8.66602 -7.33008 -10.6699 -7.33008 -6.67383 -4.66992 -3.33398 -7.33008 -3.99609 -3.33398 -7.33008 -6.67383 -4.66992 -6.67383 -10.6699 -6.67383 -3.99609 -6.67383 -4.66992 -3.33398 -6.67383 -6.67383 -3.99609 0 ]yshPTVRLB+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf361.208 13.1221 mo(B)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PTVRLA+Helvetica*1 uf/PTVRLA+Helvetica uf/Helvetica uf/PTVRLB+Helvetica-Bold*1 uf/PTVRLB+Helvetica-Bold uf/Helvetica-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Anirikh Chakrabarti) ()%%Title: (Para_S1.eps)%%CreationDate: 5/5/11 2:38 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3.9fC3tdg]L<'isP(j/Z-+'m)2I87g<B8$Ub+CS*.h=mGBp&<+m'#h&*e8f9D[Z1T/K3)MqECkB<?FHLj>`rjA'AP%IUY%e>-W2M,\6!IVuWirFs@f<&nZi7GZ<ZJ5t%'Wo="%D+^f/UC(n8gT[0<;pVSum<7?/>d(i,bl=u;aWp*mHE?28m5XO[ABqG0O.d^C%\(Lf/?/,0`GNooY2<R##k[+gg6I6P)<m.JseQATPHg5IImari;CKR.'.&7#_'W'Ph\*d4V]8\o,>>*,-Nm7,H62Rqsp]BaUR5XLk%.o*QgT*""qFfti%D=#Vfala&DdfEJM1<@3-dIfem$.-io>PN;Xhq-U'cg'$9k05)SdW8V%bBnp$!rSrH19abR.iRe-gPqM/F_i6-%d888+;H/24RUGi:Aahr:JV?,6jJjITBh:,2Uo'UM>ntVk/lThV@ePkorGrFd<2hf<DYo!jiNupb%*X$gMu*I(,GLn<!e$n.k?Z.%%/t;MDV*2G'd\00KeTTN,P!?\A=SIb>QlpXM!+j?c[l^7*Y1#hj!:kL@OO0]obP$Mk:0MhIls:9_=#DG+-lOcI\WIRp=\`]=Hnaas%!cl?RQPK<HSJu4YH2%H6"0#4\kD<9TY;b&MHM[#h=0Df`eto0.?O-gL,P5X>5Dgpeh<EQdL,p_gr[=.(&CO&bFFiubk[Dr?"3X*S%81I(AG>o':V-1#`(:"%rG4!&-\R-@V4TYQ(1;7KA^7$C_k4?5cQLS7HYud6r=-dQ=WJ%&2-r!&W9uCn<L/==n:mtE7nMs;W@8%>C%9_aC<9bX3o';=n/^*6N?O&5X7Nm-[k-_Enr;@.\C,u);)V%WKg8otK\R,Ud/Te"Pt*6J(h:g8<9.&7/V&IN73PgVak#[\/J.Df/^%Rra1A7@N]\^EH&@MDJ*nd@$+@HptX:*F"XQ>a'2lY)cCM(VV(eWJ#+n5);5\1$'V@'#)eVP]DXE`LZ!X=%CKFN&Ut=LJUM`^>_gc%Js:$(7jWoY#_hnj#ue"RYt,tNi]!Znarat>k1G9h#_hp0/!V=/'$=:e5-DtL!&<[5_du=-UKg;;au@T^8iaj30rK9DFm7+T?5/"k%6PuVZCF2r7UFFa#([8h=KVJ=&oMM4,Z1s2186mFY24O%TauR$7eS_P->Z\GD+m)a&W%RRf_.?77:9gR!Vs@6p+m*#RS2Q6d6LiUj%luYAWVuJ1-FD"KgVD>'^TehqS5H;K7DPptW.DB#=S]1C=kW[O7Y4mMHiTNO^peD?qbde_7!AWT(`6eTE33F6.^+PtCNYFp5r53_n%'h.glP%[Y\:B.$V_LKB`rKg'S.W#LKks&IOhh-.LcS4R,_r,;LlsDYDH\-J<0:/HkK6R/FOX_&Y9CP^V'oV^2n4ruir]b/D;0M_,%j\!;ZDtG(6PE`_Sl34jt.L9dgPVqq@s5WQN1\s7Z#<*C)+B0fd]mg0SOhB^f\fSMQYWdE[)Y>i'KtmB[_<<%*EW1QtK0N?[4A\As%R]OirGl"2[T$^DkJme<HnTWJqr05Oe2cZ/c$E4h@8X0kir(R,!L#QPid&uCjN$]):QLMR)L('+OEtVYr-Pf*XS1<JKF;=@ROhS^M%*I8(,>R\I_SR\fpP)_,g9]fi0_KRdQ!E="dPC?"/<=)/?O!U@EW=gb$05%V#^bqWPdS"[g$.m"3M%m\PYrE9>`$IlSJ5<_['F8k.%.aa'T),[q#/sc8oXr)QXp"]1NMsk,ZR\V`S-*BZN5K5bnfF>:(PRs/-_ql,#,NTiX1--_/9r)GEjWf..O`M5"_Jn//R$TftM/F%2%@X1<\/Q+->D5M4aPrkC,L3Jh[J?;5r#/u5a3eTHT'k5Y(Zfu\+CB]9',4.a'bPI`>QtC\j8Z[A!cnYC;oN_o!:G3@H6"ha5$q88]%f7G`RJh4cD-J&Vt$3$]8nJtDNK^ag4dC[%ldL?'&<Nae7Y8E>AB9RhC]YV"\"a:j,Nm(dj$:HL?+7jM*0+#kbPphsJqBFa(N<1/7%=j_mCU?@<bZTt:b]Xa!"hY7Wj#>.)C#_"\<8riKF7N6t?JfLR)".om#S;t7McQ^*E2/H]J;N8h_Ni0K5Y`]XaW_"psp`u?Pj#>*u%IkMT5CgjrknWA4B7-;[Tq=%0L?KZ@u%f^6.-(Tb8)u`25EK>h:UcK^aBQYVbnr1e^btDXaAjjWGjHE7`7^WPBjEmNCD9tE^`\sX7%j?(e\Vu'#9:M*X(El^$d+)Z]:(F,*?S4.dbZg1'Lj1,G6I@[9VVXpM<jY?JQR\g+\238qK?*Gec$RNlrdNBP1%5<1!MVbld@@UBh%[>Mn4q%DXKbc0Zbqi$/1r6)B:3f^?s.us8CJ^3EKa>FXo"PG8^Y#3GP366XeM#)3g$g/G58k*KdQMbk:J''Vdj<<S1pg,0>ds)S6%+g?N;khn3$5K6cd!,Is/f21I0\cuG/k1&l8Ua"Is8rl+GGoc/N`>k]]HR+U>Fs_R[(eZ7f3kPD^Fpl?_fu+q87$;I\!o4LkNE=Jr%0H,'cXF#bWD]uE>-HoeH52\6\\#rU9iQjn4,oF^#MRgbYYuiaG_6PE>9#Lo3-!===pK8V[Lj,dN@JJ2l@3:$];p_t9(+'X1&+WJ>%8RPK72EJtsr`NXrPUeTiU8+-A.Yn78(:`BiG9pP:'"NYP7@^kVja2j=QI5QQ[@ij6e1-3_;W<gP+=4<7iP/uVYG4-RAATo3nQBV2%a!5T,2OGR;:5s52f?uo[%)VB_[8^g@F"4Gr=Ginp+kE"&Kj1je%h!G*LuN,Tne?;`%Pcg:Rms2`15h*7daV:XLmcMeA?U$Ejn:te%fJ*^EJ%EBl3n.KB#^%8F3%",tV#3LtNY*)c/ol@R2;`k8Q=P\S?HEg/&R8"=dE+K/&7@,G\0L`gM<sZ)Y6?(2Jub$h5T%Qk,N'8b%6V81!7ID%mVWPE*+IZlYJ$@ZbnAEa#B:3]---Q!.O&K2?VTQT!9f8?YLje&'OU'Dig&mHMZaHa&H/Ho0[8"du`!80D,^[b"F"5^h%-=rV/SB:E\jBNuFcrkd4(&%X?4-S\jGSdVeBLu@&l16cKZNO`mcmRoF3NVsc&P)aT$Fq.j,CYI`p*)B0@B,0]+(:VP^[u_gi8\Nn%heUOT[c27qVX#3tC0Lrs+I:(U-BWIHcjWi2npi+dK6Di"(c[C'l7cr\I`e#JE`g*T8>V(G58.PSBs/?6nZ>V+XhA8C#IttR*q2J>%%5N!""mdN4O'kVT-)Ltqr=#'_*&$3Yb#G9!Vn&,_S2'LRFR=Y7/e51R4C=u_QKjoFTH**a7;P\9a3Ci*jHc!=9YDR,cN6l5cSFH<%ch70UEFr-:(4o^!8h&jXP<q![HY?a(G6qe@)X;5ncdnBFH=<=rG9/OQRi6i%qI)(9&]l'@E^Y&;eX6]/<&5BB`?6h.qi8t)iN<P>%-a$0"C6R>R!(VVCgL5fni>Pl#hc@!%LM!i62H\_C3_0js9=_9,ba*RS%;<_*c)4D"p+c'i*)d1fF1I&]Wa7cA,8p3Pml?:)MIM):%@'7qXL*U@u3Ml1uBT/6i&gXkOqMsHQFL^a0CL:m?YG171^X?j+EfsI.OQRI?;YU5^Lp)307r'FS3Y/G@%Z<B,\KK930l-7eJ^VM#%3Qp-E,T/h2E#sn%[;_YSX)*7G;]5d-@tuHHqD)DfZ@Ts(7=fZRA&0lY'\il)"rMq+_eldC(K<s=.7<VKNBjMf1MN@Ha>pD39!77,%\>Tib)*ooF<W!e691P.9LK+ceK6nf.F6YU!-)4RK`p8[&*Dp$-[4g0$]Y50JAR;:.Xn^0t8_up@Ggo*jc=dVs8u'C6:NN-pGt:0s%'l\aLX%\W_.qDuk[G7!Z[&QVV7/*^A>Vl<OK#ZEk-j9Xk<9jT8WSU$Y>[.AV>`CfRlZp-<(&e;,&oF="5K7V!>hPiVj':[4ct^u;%"QC33C<7uke5mf!]])T]Bh]9;71R4NR_3sg1kTL#_'TuJVTDRbZ?OZ!e/%rdH7g@h$qICIC<.8nX"7'Ul0M@Vpl16`\0`=LahEb-%rlXIK,;fB+Yptn%@&8HA@d$30<GY_+8j*':G8kdEU<TmhT6d[#hU=[g1[2HS45Ers;aNAuhn*dHDV(BPNh&#7be7ZfYjlIX-<mV,%*qZfq=V&)"q2/I[4-#RT>*X!Gc5_&n:=[X[E3MamdN;mp&<"buYpsn"dV[JRqlbqn^sMTeRCpBa\&l]Z`hl,jcqrI=>,Tj$.82l-%;tj^hAGS^6V6DS+F[NC9&*m+m\eMME6+[/2,1H3nX4I6_m:E;JTP\<k_!at/@s\\`dC(QM9I+]2FWA#WBiuKtT_4Ct&IkdD]lS]s%*]\!<ZW/dr\+RqFh`l3<*RCb>GhOK3EU];f2r.6ZY%=oXbXpQog(+M)WTA6VNI%oM!:fejFu.V2p,4;pi:sqM<GOKd<H$Ud\RDlr%>mJ,`!"7N6lJK3s)i:Z-5FWPfYDQgIa@FU[HGso4J3U'r\00RU2"%suC:iGJ*4sc.^/7YXN`0j>jmA@6YqoN4N%@mcp/]DIW$BP:%TTl]#jGbQCYaA,,^X,!_\"K9M<pN!8W$":QI%F^BT5'rd-!KY]0#<e='H_8aND,\[eET:Q;\)tjdt2_t.Ok^dFg03[XL@L@8A5(;%kJ?Po5t)ESCe.!QU!HlA)+>XX,%]"?D;P`%l^eWo7tFD`cq.n7:A5'K\>0\&iFsoY<u!%3DV$\<d8UYdX5]heHSu&6.V(on/PUG2%,4j/uhHO<qiE4nGlpJ6r5@uA\N(]CnjM6tjIp6f7)tmJ+(cpn)0Ogo:c&.F7rRR.@dGo>^Vs?NXH2o]`nFWMVq'2FMllhu^=n]FM%q,b`\+-Y&s^@;!8dW&=d,\eMZ-:q($1E[D/He3;rMjC>$CTo6L^Hu-F"[N.(;VMte(4Ji2L57o4/5E*\3RrGXQ2s#bj?R(LjgioZ%"mf),B'c1%L$9%&F4.;]X^jaTeI7fegq?;,e2(,5#5lHE0TAcBFuiZ%&f%id@&s=RDVj,>8J)NdJPC65nZ-Zm3k$"'*hci8/A).P%Sq:S40sef<$[[ie;l:"/4.b2Dm58Zs@NerumqcAB*r3EDT%n_rPId,d?k'rMMf-4<Vlb8\ETBM6a7ARBm=`=:.t<%pFMY,j?6^:^%>Dp`J[c=e_e+tZ#JWoOSYP%P;ViK<7]Hh4cB0NDLmle(/8&<tH>Du.Uc9jAMJ6d!gF4.8>q.SO3o3G>bS=l4mH/80]ZL#/_5AddN%T:Ij'<eR*(2,;8Dk"1alW.-)td(<3,lV-(`!'P]5ka^_eo+j<0&eWYEK,,<Nn#o.V`_e9rM<aItTMM8I;m_c(a1h<PYukMcCrd&>%_c9N$@WVZfh*qcJUF.]9XHlTClo^L<jFoglMIo(hqGpZffL.$RCPKEEcn'f:>tZf3Zg#uR49-"%.[mg-/LH3pJG#1j3UhuaN<H$a%7EccE\PfkHQAgu5dRn7G.ENm8,aO*mWE:\eMYU_aQn=aqUSo!:U0:NRE`"<D70-;S@\HW>(NP4G_(6E0aBQ$'>#5QH5q7\8iZhgS%(\7BLNYJp]]UmaGC0i'[9//*\9"AE6ONZg-\STR8)*'jXjj]f`PB0VsbR',B.9k"3ZMA;hRjD&N4f`/EXHJjT;HD".!c/XsJseQ=%B%Ae5_phE*<)(>r:!")D8;)ts;)%Q1%['c>0G9+XBSL7ML('KIBL$H/%N+=#S=\8*h9[=MdT'T#A]Ur@*AUs'W"l\PQIE..W>V/-%Bpu%NR]K)LW!Nd<U__L4RTFQF(335=eQ#=D<J?qH&lhJOQ(h/Qnk)[!.]-Z'\tUXRU+!;k.AA$--+PE?jLh"HZWQQgaL\IpWiX:I%/BOV;80t5`'sR*VAL19lP[),]:m*+r&g]gpM++Zlk/EjX'i"2l3^aIXW/.`-M4uCD";%@/Z4M$X0MDJ8"\f!8"INE/F,4$,+dopd%H(Yhe_/h?1,um'i:AQRUWS;uP\MbBO"RS>s,!>pu/,8teof/OXT0n\$$rCfl!NXFDH`#LA<BIp`p8GTjL+/B"q]Q(rNfo_O^B\D<%/6;4V;!l>*QsQWs/T<b(6$lTKYucV[HSr0ce`#7em27&UA6YjB*5XA?/bGQNX[DQ\8m^':Rl1C9^kL`qYZcF?BPBc!bbV8:;(7:Y%h#e?;3N]9TUo48@MePNljJ6[jF^5tDfl5T83Uu7/iUVkJO(.<4nO&DBZ<.bCOS<!N);@:M"Le'5,`OY5$B_t-TG;KNQ8Ol@"57%4%]#aTkLL9-.5(*84NB`V!ngO=u7S$QOqhK6;MpBr\>5706d+#BuUlC?rm$eAeRUi,`&46udZ^TIqjNm#iOY0CRT,'j_;KZB\.SHW^%iOr)rU3%*(!6V"WA/\#?WCh2/8fKHk,Ldp[n?,Ce"nEPn(t;%5_+%fOSRk%oGs1Lu%pRaNKZQPa#(mE-GZrZ`G6<_%Yf23OphM(`%"f+[5e;1-#e$3ZA!(60aJ7B<G%IQTA@)^m;o^K,<g.('$\+mpT)plUV%c]:B/NgJ.Q^ihgR$JIcqeb^Cr6f^CT!->lL>b(IN^<:I%iX9[_N$TJ4D[GI?`slbc>A2*T&]%sR>Bjs;5C9h]R%5GdUF&V@]]kTZ&4W+IN<E,'JAma\O+@aO9o#F>0M5Su#.904lt8^s`Bf`e%&nlrm-i%Wf8C8QOdSM_&*MOH.8QA([hU$h(M]s"P+E/H+-Rri]'G`/?3N.oFWGckO["ZO1g&Qa>OcLO4(?QLTAPcTUCbI<V7Qb.2%5mmg`Cb:_i.YJ-@XH!aa!)09flsWlRT44%'TD/J9%3t3D[hhG*,U9DSLq\Ufg$8>V0R1#U=4Ao=@HANJi^':U,dL9*0V\D[,7SAq%j2/hHC("kuNllmLnAo$1d;LM+fO%<5@>d3>0uGsZ_J9/JCk_kS50Fb[j$p.k@u0N4(Fr>]#_n?IJbkK\URBVrl>jh\LQ(I?5n4P&%!2I`s$HWF&O>p/R"d=g5-S9om6#IPU9UO<qemXZE#4QgF$P<h7_A%dCMa8L\^G3N80,$eS&e,5+Ik14NBFcOinp)!'Rn]ql=-KAg%#jFVjr]^6RFQ'u*6p3N$-IMH8,f4S*1ei@pJ81kp'fXI=+t->m2'N"h>7[L25cgt),&%N]0r3KpUWK`%n["WRS6#mI/$b1s,)d\2%R5T]PPZY7%L6+<.MU!/@R%H:*MTI5B+?[`O$$6gpS2<S]d5tSK61&B]@R:8h)ANA@"<T7a.YG^h+UhC.70Y7]TYU^:a<t^FrCkf.%'^Fa?YN>^TY!LM<ka`$l:0UD(/in5;1V&UjALj$`j4s$`X(mR7'`_Ko5D"Rpet3V,,mqX3a:K(XB$H'"nUO)m;^WD;CGQ^CD\G*K%T\0I6;Nq?;1-u>s!T=i51fW<;f$kd[pu=@_XD_c%CP8oN3KSc@O?#(S\VW0$,@c`R6<Q4^\PbIr__[6C*(ClIikUA-Ql6dS"?:I)%8Q+aT0IoQ\]MXiT"#9QUWKTS&3n#rd(M$"+Pa:h'(fXce?V4Gq@`[e-p)lD[.uC3mB!RTXc%=hhW4nW.AO'b?lsVK"mh\Q[3%)Q;%1JeA`*R.pDK^atXJo+5L<TZE!E1'MK_h(+h?9qO-,BSM&0^(AmCdVgG"!9sc;/D+N@kR18PKg-!D/#FCj+<#nU48dj<D^f';pqNi%.6_=37MSFI.)Xs_eg+ud'YqfN_DE!Bjcm,'a^"<jTPq,JeWd%r!JF!T%'rP5SNoVfY4+od/SHpW?'@1!%S7)[&7pk&\+:Mk^Dnh%%(2gQ;oXHr!ehiM,9Ht!T*l@up$Cs$=@-M7RBUH*F_ugPhoh&?:&K(aSgSShF.JaufV]nX,("HAk;5HAXek1\BrJr*WA//Am'.EY2%+l4V>T]BVbBU0+-q[18*Ra,:A$\cEse>ju%-FXC]&lliA+M^7hW!e5IePlg_1?]q:]bo[!XARTW^p!9Rjg5A"Aicq!JkB\+d0U62%UOQ$/($)R>g]@erBqm-qbV0kpoh*SEYW)Ul(Wc6;^a^0V1K[)-Lb^HQ<edVC[i0oGd*9"fWCT]#!>b<"V=TQGeKnlc"?J'c,E6Fd%1hn@;0F9;5(ec(:FC$Y7R`8b^`a-M`fD,O\a>:C9KC(#i=Y8iR?C`PuOGd0qBHpVTPr/oGb*Gp^R>DQF_#glR8WZ@F9,o]5=-/C%%!-\BpJcl0"E#`DEJc--Xf0r/`_O(^C792Dj'dfKFUiG9<q3r!9%>BX4'b*pATMs/?N=&a.>YJ,p#u$)(XpT!X_CS,(fS)d\fDY6>%Nu(!0-cq417,B>+aakH,#>M`550.7a!h.0I59m8,OP:s#)AWZJQ"pIF:6S$)aj\*4ER5,CSYI`40*dI`jIVmR3["urC(['q`jhf7%$"VrY'>H+T=:cUm$;A%I)Bf5k=MZqG4CitY]V&(kW=f$R6"No*NF7>qeqiIG:&s%@7:QV(8.8Nt\TiWH,&>\2BS>?'DYb%1WiYf(%lM*oF_9k"U?_C9V=p%B2:fd_C`6pDa;e=D(Q\Z&S;V,=jpkFCa1<4qBA(3Am0;`Ik6VD(.(%OUK)6jB6Zp"\obXiq%ZWVF2Q6lcW%%E?2:jHj()L99`&,7+gL_AX`qbk9?D'7dtWpq./])@SN3\;[`67Pqt/kE`-krWKgNbli]*.[qOlH)P]g#(k/S]P*ksF;]Cc+qE3,%60HZrFY5CCo3h_q"EVd1"joh*;L*BIF"k\QJCtiNJ1>?Y$Q5DWgc73,L(\Y=[*ated#nSId"n%V6Z.i4JWATJBp$14<bO;kY*_%?%edNI$:`gh'b`+opUiH,7Ob(M[AXtKOA+2c''f-,TA^-i4d:G$h05L3$EX:"h#pc+$q>r?ujVDj2kmUJ/'T4,GWk;3j/mgD_'nGL>%2S%:<9f`;C7)%.%7"]GDa""*^nt92u[KN%1TA:Jg*D6PuTeTEdBqq[)(/ElBZn@*5!ertj7E:Y5jC(9a^afViYdb5J:1HF-EAY4g%;co6WE46Na9(fk<nQ*"op0i*0Y9Hl=c?-koUD=lN+sMpP'hEHa?!p[BDQ0-,pp;_eF>RqWQ,IXg!HS`RIgE1ZW>`hYalb1'U4SXa%`Xd]2@lWTO^L6isnK\KZQ8!u&PPU9-Chf_60L/_BL"`:%,F#$#Z*"`bP]3;,%T.(AjkETd--fW\\Y,(Q(W&MQ'UVR[0^0nn/>3r7%/CMKG0Y/Ii(7(q"191`I1.)<QlHDAY.ZLQ%X'jA'a##KT5ScWEU)>HKDLg_d5,L:P<B!c?:ss$-3YDXQ,5=<,@uqsn'ICOtO:Zbm%V2/Zh"C[%YY`bhJ"%H-C^dDk<OVSj')=&5V18nXD8IZ?*2G9>OFciaMPH\'s.j)36I\`rP###837@aX`YdR6l.^!WoE([sXSO+72%"W9/7J[?4e/=f%X'NQt+/7]BH99Ou-6DIc0TX?@K1pOn_a+MF1iINCl=G.oDR:uk]39atGl/7VZ^BUh1C!tK*9M3<MjKc^]^b!23%"W8(0=<f1#--*ZX6&URfpIpBHA6G\nb='G0G4?1F>Kag64Ol/KR)LC0GQb3[$Es$.=K8HTDoI#(R6[S9;HNca<t"g-e7d3$g8qRk%&U,_*LB7]'cs`D6&ZH;kWKpPOB@=%)9I;Gfjr&<GJ(2t]k\[hJ()2m>+NYOGmQdo3XRJITe;r^(0S(kO#2$uH^iDer3t"VgM]&ni%KV"/lI;2qC\@:!kXW"5TEh?uErEL%U1(B'P-/u7`Bd95*UQ?hj#p,V(rWFRdp5E%?-(V9SW:H$?'5<2ZPoW:$Jg6K>.`d4c?tEL!%obs.M6)1CMMNL2g.$bM@LhTfl0_[8H#t9tj&I/siKdnF&Bm@jR-T[F1lPehn&N56T8ckKt"NS=sq5f+(b_r#1H801$U"Nh)#Zs7?%VcK+.qP@p^A!Ug)'VN3?)7:[B$/-d6K$P7!]q>\`3*N=(?4"CKM%tgDn4(3V&;0Wh35L[:A;h7Kc-#\EO0[)MB[e;q0h0#^N],$2%/VHUc/="-Zf`#$/?n`#DJTM@\!>kg]oF$hpU9C?k)Vc%T-m-WYMS_&D1i<[l[85]mMB_R?--u9qIsYY":BKm)_ll0,'fO%(+V(+>%',4J>P>.I3,:-&oXrIi]-UIJo'H'RtXm;XrAMH=b<eD/E?ikdO6)H#"3"L8$%66FkRb4S82*SeO$J[C1P=KMjjC>tYP=`Ro/KI6s%'/3>LA]0Ir>68\^c3)IY2,9RT/%#H%CVVgdFgN[=E'o_SUZ<RbW73>-I9.<*E7HVLaF87@$ad4U-BKqoVN&4u#E@XiJdM?/c&cWo%TYI(=rK#KDd+Be[9IQ>2]9nJA:%i'qY32J6-4d7Jg#1s"E:(:M9a*JMguDds-h8P;`8e_A;.>s&L0%Qri?C5@U@+Ab<.Pun4X>9'%ce:`Qje#u-A\q+n/1*ToLJQtKnnRq,27up&RL]s[P"X]OAi4Vfql/o?P41E5LXV%iN#S43O<<ga_7u^3>7Z'aYpcD=m&Du`5H'R&%DY@?;pHd.JWZoh0N!^:e<G;0&(aS[,KF5/r`i#"lpd,$Ak"Y%X2"JZ_OeINH563!$dgQ9V6;fWK.7GfgPYDS0,Chui:tB>L.^V/l%6A?X]UVP99E/0R?:IJW&%-u/KFB70=i$tK-0NM5#:^scq6kt@QeO.(cM0/tF%/V7]ALkeE+omX?T;8^>)b4>W54Kd'[-Q^dVc7kJ%RRG0q#l?:HiTTd`XkNP)Z8%,XX="h`C,erO=p;:GqH^R?[rI2?hY+#lLrr*@WHpJU_,<%pfB`WgpsStlpSFu;(.:GZJH<8sego+k%m6DN\LZNV,m":;lZ]Bj\*K7da$O:%,A=@tuX.>$u,VeLI:/QCbI`82Gf0n*X=)9qsH3QF9Had.UojHU5ETsH(6Z.&Q,ma+_8TDk3%oV!@&MG$g+Qnn523jE62)7's.U.I)'SZ[1gFmN_ZNlrJ)1aZT)3mU&k>^ANEh0%]rIh)J@9h\_ej3iUA==N3M1-i)6%;4"c5>Imd%Qb6q>EDl%'5OA.a1d'i['@q7Y3qZ80$$RB9f-\l>o3q.qN/WU'JVF^[NZ_l:Tat:$],W^VUG3f5Kg.,[$b,G%llGp6L=gsY)-\rj%k(K5>HLluq(El7o#&9ahG!Lu?Z9>8KHEdb`#!CYC+ck/eP6Yqe\S;$P"A&%QjP$#R>t_?HZFri*BpS-\-66$Jm4#AXmlus%ObZ#%%cEUSlcgnc+chCo#@&>a9Mf!QJl/!uIS#(J<FDmK5c-eb@)C[<nh&D!Dkt(PLV3dA7NC1h+VgLN%L[A>/=B5+Y^N#Z[HEn\4#`oJi%V1\kn:A5&r3.6W[lo^utW>=hBF`tVPFs%eHoP?7uNn&!UlW,f3"ZS*=oJl\*l$LIQe_50opKucCebIFjqAe?B4sBIVM<_9Wh"E*`%k@P\4=Z1Z>AQMX<:[I!'g[,It0R/\ci]=6Op@EiIRPA+30.24VQU1Xk$=f]\Bm77Z<O"2,ei6Vt#!Kk8^Y%%ercT=*/,n(>Rs$U%%CA&29o2L`CADV1344\<])%<%4ggjD!i84paT%,PdRI'Qk<>n@Ys,0Ups.1qL3HaZ4c64^$4\%Z`^0k1<OEmuXMMK31+XT>tqQ5q%%UgHi@TlJrU,0?VuK,8fEEGQ"Al/od\GK>gQ^,10J4/@=i@hXKfJ,\M%CdO^93D>5gd1V;NB-*[TbJ]ag',A)4+j)SP@X7Xl6N_h<%G31lYn=A$l/!"&I+5>sBP9>p&n(pN/:/MQZY'YSRZM=/*QlR(@?!mLBNspjum`<`l;O[6PB5Bm]]B#C9]?RsjPOiVfJ$H1%c0c62%m&'J?&MY='?>TPuc>J#qE:E+jCef.b-9`U'pk1cMVMn6j[$5%"FiTAhd<up3bTk_T4h-N!s(dKiP8@o`?ApUsJ+q*=)m^?),N?q7%9r'K_j*%U4htc<gKJ:MP5;jh:ZM.F5-Z5Q'T>/m&p;bhZPA\0F8!Oa+^uEDT;e!Oqp`]ZZ5"-Xg=m4O;'`&-+4[idk^;htc'7[IT%mYR]%;rigF;_fr--oOBYnSVERVYa>uZ*2X<+09)'FtRUOY)H9skTBT?M*-iI%I\LtllZ"=I]-(][iDGX2sb/>aD+G31MU#G<U<A(%;ir*>2rp1j?H7E&i$>q1fT]'f9+mEc^LZ4l1%I%OjlBA<!1\[+j&&Cgoo?QXQkk$-`h&W@lOZ.-STsH3S!%Kj%e9#8rA+sjR?ZN/%)s\nOXmS1/S/?:<6.3#<\)YI=SD7a"`,^<1^RfC/OcA"u]WlW(L&^`GMG7%BWDi<F$SgK#aJiX<Q($koipRigr9#<'fRgZO+&.Z#%<i45nrbfL'VECNq?iHGN+-XR5;9r'GDT9-D(B/PhpZZ0!@Ic`Pr]"bd9bR9SjAi8R:Ar3M`;'N73,).$Bj7i\oVkqfjiFRDV^r\S%9IYhKX>d4nHSk*=5)8R&j?o1KEu65f-.A"fXW"O`0[H>:^!+AJ@r2$62de<$0MHjdVT")!r1B(0s7!\SEL9$<\_1tiR/qe'a'gGN%ju?%^8uBQF`=AbXa'k.;j"Sg;LM"S8#0>u<ntR"B*2`:9Nl/f5A6N6d'5(]ba'g=EhMne<-J^_qR,]mj.@Ct;0PSR9-MmSboUP%]%A'9jI4J#-!e+hG.1!TgFV!tQZiST!Na:np=ha?=i(8(S]2J2]$$fpOs\)S4o@Kf0Kj.bPbrhebU75+3tq6T8FbUhHb(/=ZZ>I<&$%cRdeoU<P7CKNkgX#7\!ND._-Ah4WH"W&&cYZY+:EfdoCXfs@)0S(Y.4[qFZX3k+.?5BpUK/N3/!TkenZD%gR:kl9a]':\dM[[D!%%e,!F[F6ZlBDTBAUE=u'PW'XCAIFsI8msL)c?D.s\S@$s&+iV'W^>V7uA,LF3lfFs,,"7Ij.#uE!7`nANXGE5Xf-MRhWphJ`iGT`#%_tuK:,ldPT[""IqHF%A<lHOYQ9.-=eZE6l1%(-M'puD"coQ.>D`/H$]p4/N[KsZ"2*t]0QZBtK>Qq<..?JnU4hMq,:itHl>IiMXh%jfJH_?no4S@'%$tiHF-<Y:<9EIIh?OjgH=_4m>/8fr*.Q4Jbs)IDIJ\,r\6siHMYG3Xion1!_\EKbsK*\(CgH5&o.(6k"\Hq:\\^%6Co;[9Sb[U&rFAC*hQs"`0\OYf;HN>.*k/7jjcF'%D*9<f(mYgd-8*ZnQT%BFp$Y^#g=nKrtC`_a*Y,Q,aMVGQ]m2e3P1eDQo24n%ag914ZcgGmm3l:;QA"q9D!L@"o'@"[+!boN$$e!R+jYUIjN7%;)To%C>p5eF6D!OinE^eYjI1^fF:#K]YLU5SJ'DNP9u34X9T(ca%rHPnsf;h2>F>;W>b9MWdpHf7!s*1n>`_8"!9Q0N?Ze_mTnMRUjg`Ip6QgHd#ca\'Xp%sLSoWM<b;89BXll@u7]$6+Ms2&Z%8\]?D%dY_qlcE,oM[bY2D#g?VY2llUuGPt%fFmRDbB33\jcYD=WhJ0B3ggjCE`pjAAP2*,apFIdT/'1Ld%PA[)YI[j9X#IV\-[rWZXCiOP%O/nZaRjQm@04U8p66i)(hG^A:/EIEPrc=Wd.F=%<O?&j\;YcYYG&"MQ$MZ(="eP3"?Zr\$5'9Q;`P5RfoScYrkTBR.a"PH/EpUqC%s1i7QfUf&(cK[<o]$7<o1TT:.c0>I5BkZ=W'lce?AlcC/eSSo@Rp"QZ<k%lXeSQ:lqnIs9#.#N'X9eK'3*`]KD[NOA^JVP0oO?=.%]Nb@==4h-2d$QYbn03A=@,.N>'5nMRHKWeX5?4JK5'mk@!=';;m#:_#S=&eYB>g.Xm+E8_B4q.OIHS+@H.(O2D^>\<i]:_uSXNO8%3IC2Db]h?[kB$OGl++Gk[RHfOF(uZtSn[^2n][tj#HR.hHi^uh1j^_$m-+RIdP<D:EpVu(c0iZF*KC%[7^H-2gDpuYB33-Z$Ic;E%@fHjOoa-Bc5-4M16kf,A4s@\4EVl@>h>;+9!5H:p?=G68.8ost<t_Dr+LBR6i_hR0(/f-Po"feOTNar=3V]5M2Ce62qH:"^EIs09%s)Eos75Ztln_Nc>$)]%tV">XX;Gbl1rhjGUMAigq`fmc'9.Hg`MAd-I$I=SJe$P<tQVu=h:WTW90l_)T<n*L)90Ok@b_d=&>1C@;%XCI60[Ukbl9m'oGo;kR)EfSt%r*(-(i0^%n/,`nf.f\?kSj,rkGVtWj^-=M>-.<Lg$gH<i5J"2TG0.)*GO8ugI\baTlHe(7A"VIk%FrMf:8UcWg.$!eY5>GA1^$*s-PpZpkiJIk,Qg;p6"@gC)P?3!S%m(EPZ%#*8j2Q:\mPBsq;P2_9U)r&'h_EVC[h4,a&E%32`VO.1%]4_W94F;1tB_#br0)AX?Rm"@HhlPSbjfWgZF^Xr>;]Tk:b](F?g_]e-Q.^4Mrlm#VrM<OlG_,%u`h7$,cB#rBB<k<o`M[5*c]/1S%qY#cXctA[ogm<#KU(`R5?HbhFV!@',`.]"6'9@PcAl]Q5-ZJF8pak7u*G[B&pgsii5J1W@$/[;mqg10E'#)J`A""%EfWjNhiLB+c%n"lUKH^Q<ilmElKB>taW]NN65bP5Zeh^mgRVe)1aNK:j_aS=7$R.6/%dr],JX5Zdoq8T+=ij6AnY$8U6XS=\sQL[amb4d*02.ir%%p*]e;SX9,iMqG#bm"lOb-XQ`<47Q[8-$]73n!H8&F;,nIrVV[?I8#!Xhnu&XSNdlEe$@YB%\t$8GK\V+*38Y?Sto(ubGs&R^XgE'%E47pDSG6//)"b.OV@o'f@e\;M`!!jLFIl(-N4-k"*V1r+oY(0qB3*<L1jet[;P8#Z5^1)i_3j:WM[bJj^o#r\C0&<fW*&)u4-;gY%rn>>9dMe1TaI('qNTk<:D72OW;nk+,:AT:WrG`I"5)f"3!XCB>62t\YO>0.7n$$LUTG-*fbgW:S3OUBBr`=#[a10L[_uF_N[+N]'%Z5r]q<j=YAin7eB6CesK6ZspU3DL"`%`D0aZCO+9p86qqT4]=q,_S^n/JOOjnZS85[)[tJq?Kc5[)?r)4'_%m3/a+M0j^<&9=&U%%592@^0LI^On^;?o(m?"!]uX^30/s`;Q-:W#.(mW2K]CY/-f-+.p!0O:Ik%%]5'mi&@!R.Zd7#3f&9MqKUrOi*_h<gZ/WogTk4(I?%9RK0u333`>7!Su'/?doUB\6hmaN2SL:8V$_FLV'M$,Xo/5*,#gmr9]0FiHAi'CIpA94[0GB<H<m>j(b/TkD-gpn*M!VEbps*Wf99%#VYjJ6ne$gfumki-?r^Gitq_ph:XI+boX1_/EXWS_,R\3a=n'XI=*P)l#qI[L:3^<75]L*>tbUl^HnLiQFLIh:[tOk#Cj`]cZ-WC%^&b.N@_BLlkp>6;2LEB_jDLeY;Y9b%1nD;Sqa=LmbgS:I@qSfJa(%e8D"huEs5[O6`6(2?<doU\Z(;utRl&U`45)UWefd^cm!CUf%AIF@bJ+e7*CsP625I$P=e82<fp\t-6d.CR=mT=]'ANUD*9dptWiW,\NC:l<(ABaX.MQ>L5S558)H#[#RerrGk^S,:%1Hg(S4VRiG%jt-737ncIZK=@/54fd8=`V:1)ajKk?$#1eM;#ALaZDO<66:q&!&a6;;nfP&jOHX`ga-l$MIrc"Cc>&Al^b[Q+f$?RWZ?r<b>AR@=%T7Oj+'jGR:h<$.[5ort18t0nqID$Nd80#+[*"))EpsllqS]&CU>top(h4KU^DB_'/n_k:3fnU*qT]p)e8KK0Bh$D+P[!ju1X@dM:%<^e_lb%X^QjCBJY8_Bd5/VeeuC=)%&)q5W[2$k`[n0b#+pbPl7j=u/f5[?2T=ERV7/$c7FMViRoC)_\]O;7u8eFa)P(n701B9\B(%g&p&\Kkl5.Gs[%\OGsBa0mNc2qrbnmhG3R(3!Z,)dt$mu,'=9jW=uPPWS7Tf/GonCX'@8]WH9*BDTAr]VJ]g4h%H_P<"iGU@57T:%4gYV?*#]'D*c;F#9&0t$57G.B"s1j;&/'V"_alWa&N5HeKkqE,J-SFYb7,Io&G[#&K^CYC_2bla*gs+RC`Y:'*tTNHj`LV9+dpH_%XqQM'@T'\aX]MLV@@3Hf1;<FVG3a?GT0[g!SM%RHOC,(]/7bgLSXmuMh=a5,aD+oQ[[0,HWaM/`pEaNdhK#._4Uq9+A/Rq],Xim0%lD0Uk@.#fZ(79Er"EGTIO>a7.n.J!Q/Vk4Z&qd.<7si%%&1h%K9EFJYat+mgPW[koKXcN!8OI/s`1tR@Z1ncbL];K3s'M&LMb#u=%W=/VAA-_W7E!p@S[>8DG9_,KGY-nZsAs3'V`&*[2(QkJPs,B?nHq^7Ymm0DUrXL\no?j?sJE[7:>XLT83G>ugS)atDIV'QTa+,+c%#f/:oY^(/A,T>KNec0X3L&?R'D^HnuM+'F\FbYI/\EU$MY/?RG$2\AFkZF+j0kSL0m<U'@*17^p]L4fN'9<T-M2(^h]%]6S.kYZ;%.X"]D`doCTqnE)h)aoP4pX&C^R7Jr`-KU@3huKHX1372US]N"\2nBktXn8enRs1@PDS6^=ck3T,"3+0=Oo3&+!q,[aXDp)ui?Gr)%k=*\khX[sh(Ot)^PA54G_a[InF6mN3T-Bau(=4(_aFLj0peX!aRGqRsV2Ha`%e^:?rDkAH80Plm;/`f]h_6dA&.HSq#.ZV^M8`3^%3>^;=BCQB#_^@6a0Z$T)jnEha`4mt"5AO6?It-=Hp/4KB\Us"QP'dq!_l6m+5RNjdl7LXB1en-dRr+^MaBY-R^%4(1KJWh^R<.,'%Yf^c^&9f_.(qbhl@QUM^h)W_ppj8k)OYNn7)U_SCkeZrk7k0Xp[NDqJ8u8Q'>H4"`\2[;QBh;=OnO\H^U]48'N"H3jp,Bq@XuMpc%.^>:>pR_),s"QJ-$!OI6e%(=o%d5N+pRT2]dHY-&5dCVc2hKiDaTU\SEbrhm#nj.[$'D&B$_P9>Kc:`MLN]E$2/ue+dB`85497KV%7"5H3"`M3qC!m-Dq4m8.jLJRhJ]$m,[c:a%'Y;5SXrYisRspD0lH0(3G_[.#aC0dh0-BUAZL7*la.e"08/acPU#frd'SPQ?V?s4)%I,rq7_b'nC!7!tdBKFcSTF?L45T++<.$X!183g,W_,\B,ZJ)c11dr3S$eS6oUJQc\O$!Z164D\7"9oKA0<Kt;eA3hb"@uT!![5Qt%+qMstKC[NIj?+_.Po7?b1'KQBSNb6XaP,u4]"B*HLI%4@dY\QJ#^gb@%&bP1p]Z..!f$X?,:3O^80QCgTL;P+i3.uZ*[(R9Rq`3=%+XNDfK]&f?8I-cE!P)YF\Nh[?1(1ps_E\s+Wjo,7nrSLWA2PnKMID;J+&7fq-6ZHJC^$V7MC>%<WE">r_hBCi<5O_(P?42-Oh`G+%X.o0meNcjNT,-F\l>Ih?#kLmSJ/ZCY![A0n!Cke.#eC?F%\]ruTKYj`$@8)94plUhUG>?U#iR<2-l<PDq<E'/K__:?HqVXk@%GCi%!7ZX,VM97Pd<:/T#9;3@%!2iF]CYE9mK"O$Ko9gV4S"21lQh<Q:L;T?S*2gIPMF`Ial%>O0q#Y/)03:+LllKsR([$1m:=mE(9@1*%:Da*RLb)iPK&D6*Uu]'dX]s)7'+YrrT\0]l=DuoZ2tjn#(s]aTpY9rHDC8TGI5*JjrU3Zug7)WRIgi_5oXm$c_5I$9s%>9s[frE9%@BZ4[9_bOX_jO@U*M<h9+3]OmBfMU=&#Mk5<!4.jSCRen&"uH9j<</+;(u\ip2Uj@*.kj<"VZVu0D9oFK,7Ou]XSg#?0MpR\D7pe%*q<HNUP91rYY>3U9fI2/:@3\_Hr!GPZlVFO2@q\J$G-q7!qof>K3L/eA0_VL)dgUGe!qM5nlTt'o(O;\S)LU*07!0n]*.]6Y/1S*%X7/*ns,1->n%%4B!JW8G#Um3JD?BsaK%7-q.N\Ub0&U;e0'J"LZ1N5M4Uj`\%FXhjs8E`4_#-Q[D$61S#9DSjh(Ho1gUBBuYJ!-\%G_U^*"(8CIrPUE#+-Um/gQZ`Vkr+<fR0b[hE@[+D;a7ujYi(TncV)kq]ibM,`>Gt5Ea77f@m\,_oS'"=+n>S,:5h6DPe)iCIiY`F%a&2a^V)h<iII0PkXcB(#XO0RFV;(FJNT[][s.1:7[4SJ&U!J?C(0;OVomLiMj<G$2,UtHUQaUZo-eKA&o/:8DouaYr@S%Bb\tY,\%El0S7+7'iZ-:Y5tOO%]qFjW_fRUSHLf?\c.r+=cKA21m_V92Ji\tM>We#tb'r-E6a1s"8PodO(9H@d)Arjcb50:!%lj3I$W3,iQ_%3[\84T%ka`,ZXeQ-G]9fRn%CVaPk\9BD;A_Tq33WL>B,7&.8AA4NtQsa6P4U4iGaN&2;dsW[b(K.:P)IH(@%Knu>:P$`loSH0;@E%5"R:Pq)$46-KLA.\!+J&-*@iQosX0g*?4.J8aaX;&7"is%$']J6h9#IGAOJ^5B7o&H#CO8DK(V>Pn_=WNjJqffQLM%O6=Bc&AdD&%gM$[gUG7lt1O&?Vd$EeP,EDkXH8XBYs3H^^7DS%5,n_Ei8Q_TE0d;`YcYhLo%m*q&s6:kfeU#9IX#p""040,)=Ljgk$X41rG$E'U%X*NU1md9)7gZ%3&:G*o.%Ml4:[[1h#A_\B9f>9"@]3de>"$hj9HIGW4!3OXIF3$7"`mYt<>]K$\?jW\_IfW416%!L%*cNbf_BVrc%rF&bg^rJO[Z,lNTEJP7eGDQgF*I$)BOFbM@qhORCN@?>k+W\9Ii%_iFl8fDfl':YD!>js2L:fH-N#;6rgY&tq0_Wkq=:Wn@g8'4[%'C]E2<SQ7YKH\7hA^":r<F7A#"6:HVY+B,gG@cI;5cD0Y[YFM;L^OT5qu2&bEIjVBG,sr9rEZf"l,^$Y]8b22]'6u+DNHcBI#/H#%mNdFj:G4MPSHCm[IB;We*S4^4d.rF![d%R=(ApN\/Z[U;S(]I'e"b>#X8V6<3kLa&FuujF7J]`XR;Cj@FKcL>XqSBJ,g&rB#"%Yj%L[P!%#0qR5/*kk(4Z1li-k!jk.$<?&P2uAC,UGfQ/#m;u@T$9<hRZ74p"f)RaS"-mZq]'>Sf3VA(LQ$6rik)m5"!n`>5ts*O77H+%"%>,ZR;BHcI7`"ZA>?JXECVEY8?8O3LhVMhL!9sUc(dGD1OF.+baoAB.eq4&2'f`:+c5tW$GGJ&eN.G(?;75UYfG]jS.lusf,O8"%#;V)Po\Ml0ZTq2":G:_uJ-$6o69jfCZdoq$CE;OP"cLVV$9g)OkbtE4on;o+c'8Upn4][@k0D9>4P3t^Rgt"N1k%S?%\9oUo$Xn6%3.*K7WR=FP/0FqX?j-5@Kb@PE*"!G+iYMrF%@C-ihYg%^4>7l[DTV>f+2jVbTHu'NQja3,,;PA@#Xh!3L?rU/^:AGbh"iC?]QD&n%Nl9eTVHrXS4VE#E_ogB$0GKC,4H7\[,i"FmQkQ-Y;u&:;m0HC^fcJ+1JE]<9a92$b>']"M9Xjg`aq6=OkdI(5WIVStNcM8T8QVI=%8-Zr<]6BbpH-f1NZkLAg"*&%Qn*7F;7tNSbHRnT[6\$Y(ZU:nINIZ":oMASdcU@HA[3)KMm=f$(JP[2i2XP[k9asJgeOi=UfKm^c%(lXW5,7X]kX5Z;DclPJ6!N:1^$2Jn%O5@ZYeH9u:S!@([JO!Ga-BI$cGM!/nPSFCd*bafTAbmUAHuInnDhMB)Rf'g;nc%VAo4%:2%J-XHnGm:`Yk?CRt]G*aoG+GQ"OTW_#k&qcc-;H/Pdei0FG9$$I83FjSfb;TJ@15>];4KAC.WWgK`^Zt.NBK9:Rm04rLAAK."7fSK%'"(Isa:>[_GVf.d82'I@\iS@(;HR,rHd[,Lm"sLnGg@G85+\K5XP3(<IFIJbB(Q-;dGD.6hl%D!?q>uA_HH9<HDb22YW2t]@D&0C%D3tD1qhqp]?s5Gi<J:!CL-'F+IABe`4Ua-K-^G"Q)OO?MHUj0(p-Oo.Ud*8m>88i6XObkJ#(mj,+V8R-PIphSm2tVbaT`*J).sA6%XFk`J0O4)mfc[Ce:tX3`'L\_4_5OhNK@HBu&`/:nH(hhdSdIV7=h_5Tp'BdbE=D32OF;ocm$ieJY[/U%I0r#O-FBK)%Ej*78$S'T%lsh%<2M?2]kV1Qi':B,ch6pU./#;Yh@MdMgYiXEjk,?O"U9Xu,OS3@qJ;DD:7)LGdS.,g9]O$4Yo$]mdpMikC7UOYc74OoSi+Us<%M-qa;is,dM1hL32Ilk/,c`4oc;9<kBA>Ds[DLpHD=7q*QXC`k=kB2Cbl\Blkrk@60lmsZ+nZ,qkQA57'JS:Vj9"2J"^#q@\@OGCk%CYrOAnlCZL_!?H^4](cuV@1I*lqRjDmi8ISE&h<g"p^AUX47P'7/`k<;u?7%OcpDSEjReB2I]$>=_XcR\jl3Hd[+g?kWh.m'M>A`%@Mq;(NkZMM<;&f'j+R<fVa9oj$YMUDq3E*fQq8DHfm0fc/3ZaZ<)B1RjNe(CR;?(lcqRZfA4YcQoOpgsNQq)J;cpiM8<lpOeMnkf%7OS)pG*=LKUQTLNBiDD_9@N.nnXeT`A>,86/ERI[Jln3W(T44aaZ:kN>"Qd2L"FU83LkDL?=R_o.h@Hm?F)luZsXf`=q`^t/7d22%"j>NPa_p\^DcKJlG1'X&0Qk@8\"3jm,!&jJQ)siiJE9/>HcclT`a.&n4)oAkC3Le/\uOLLj5P)#Gb6/3E%4.IKWV.)0R-!:,eEs>%bt$[#NE#V!i*$WUbn1*ihZeXGg`%-RE6*+trWrI8SBV(XTE)j,a7DWR%#Mao^p7$[i#;(%<PR/n`*%F,2s'(0l(qCmT0<qoO45Z;%oK`7B)LIX.,'f<K@6L;e\PT(Wg=?k=a"hgkk_kJOXF_B1M>?@nTeY6DDW:V;4L/5?WrkKFH,9i>`5@q!LJY&`'k&iPe%D@]J_)B@%SPr\o60,q1G5QqhO6_FIH;u1tbJ:pDG>9E9/pV=:I*PO>HOP;m^a`Rd/'*@<9"s_UgN4qVYcJjYI.%f-d++6A'X<ZoN04<@l9'nX%gHAS9P(o&]a9M$?9d>#Jnp78j0Kouq4FHK,I,eMk+3Pr&BjaWh)tF's*5LI:LO3#dU0antQ]Xc./nu>8auU.FB.KR#B6=]d?T&E@%PunASd.oh=1'`hcb5)Y/n9A.s'K1p$jsX/T'lprUT8K*`.LVtlHd)nNO$+G#]]F00UtW'`dYu\cSuk2:apg+DJJ&C%()$L$f#">(%R/d&KECbT\=m@U0IXeHkEtI4OQuq%&aP=Bie);2<?Lon.pD\ibl\-H-Ta5$tbp@pe]D'sp^3c2/Tj?W00=a-a/pi`<gG@?2NRVI9%o'U&fe+1NUc+!#iLR!:5ra[mqmHl_Of']#Kqk^igKt$lhQ#=@a/pE6-la?-'SZO-uh:giN[n#1Z\"]4HdZKY)($2hGZjYaupFF+M%mI`-sV<s8-<dVH,+Cu1bmIe@WNs"cnEqd1YLYEc*I?C^ODH.&.o\98WV%0QXYb#/LV:P:"4.X6tS"0%hFX>d]&)5dNMpB62QM.mo%.O]5lkIrrph^;<UR]q9#E3_F6=jsS"5(1_BoBE=7Mh^3ADRMJF9/kU@m;ujKY`e:;(3Z^c7#E\!oG)1aTm$$6cT0b*LUC=RTp'uQ%5Dg%rI%;oi`5D&u)t2XtVt0o2mJN=J0.qX@s'F?Ym`jioNGia@(TXa/'Sd3"[@9^Th\MM.`JSuMOFL)Ef/KuaH%%bt]^g2j49,#[%Pde7t>?C^*+4_qWlOcA3Q]&8h#J.2hA1ZQ;^\PHAs0?"V3N74@=2!_Ah<a+>r--)/EI3-65u+5_orFSLCpW]@Z+P@hT$\LL2s\&H%C"MFI=4n7R+4io1`_'[SI0FH9hqIpR=fALRo,.qs.irO[XKL297mCie$Ean<g\JOBfC+VJVV26bm![;gDs;QAbOWYQp!]@Op\KV<%]@BRU6!N'kCD=l<mCd\o6p>JL*Z)4aVOCT:6UAA1I8n9i)tTo:jc:IcU1)(Y1(++SUkH?]HOBS]]N*ZnT/POB%k)[OV>-<N-='8k%TXl4ujfPZEMH"hE^WGV`^U^UUrHA*m8CC!Fju^\aC_ZrmmJ@1E":0ekS*(&f/#5n1b8"n$X!'-BVe@0[Dj>.Ln85^4b8bm_>1VFe%3UQ8*Ch'qn]9Os4<'&^]2jL.S=cu)I=oILZ22nM`/:RBjY3WEMC2H@5^H;^a),Ao?jT<&;$akn%Q1,Ha[2,+<?E_,A'#L%MWT(%i%I$IVom$G.Dn)7/I4*ppe8B=WnSd*&9>$9.]k*KCT7L9UsSb%[F(8jd#esA>-$`/G"k(J/*%:4423h9nV]5tI5bFM_fnp[LkccR;#%LA9$ts1t2B[PHL?n*,/,QVZFYdk35r[heQGgA/eKSZo@uYWZnnYYR40I7,JFHtFAdA8h32U2:jM?V@n-&(60FDn8C34r(#9n\&q(%4o(7&.ckICL*.Pm<D3.&j-gh2!A`<L3SNWm?uE)f\G7kg>CO9=K0pgd=P,!TS]?s(9:]pmKoq)Cg3^:NgKqAsHs5e$ZsMRVk46*(%gr#9I]s_.gf@tEWXl\iG;ebdphJPU/]"L#ZJ=V)%M!B,i]Xe&^T.bNj)=3_!]rAoGS^))[OhLP$?c^_U(J8e$g=omb><[)r\$*r$%<iKc&I7U.lQA+=2T,k&nML-n>k-_T-+S2a=X?:s(k6m@\i`O\ac[U7f#j--uD>)b!/VW0/XBdN0D\`6K@4@a1\@uW';BZ_!qerse%qYWqan9\;s\;[9[67r*.9>h(*QV+`FEt<p4YdmII[Zl*ie'"PJrJqOd',nOe:3=N.Y*:H+^r<YSYd$F*=l.l^AC?s\=P7TSlh.S6%OuA(<jhejMmV6I2W%O6>Uud')8\rS?gSp^L0;MHGT7[$@)t3&bb4a@k7R,]l3Z%8!>\<*n\Mlrkn]dE5\<B/4`_Tg3io6hChlXR*%<u1Aqr3i^q.QW;NOuE6,6_g"r"3FX3i_V\RhG#cZ?QbDH3BC/`A$r,5X+bWZp1(.Z+<+^P&KD_sr_b`Z3Y(;GX5J<O.COZc\,6j(%"9bti,q'?FJ/4M"92Ru1.D^fSEi4k5lX[;/'f&32M\+u9Mit9&@lWL;PaQ(+3qa1Ah?C!V^k`ul@e5'Ib\+`qiMXH57Ym?qGZuC]%)d<k:@S!;@"@:'NZ\#^o)2(d_G&.ekK!/]7J*!4$LI<UAbH4&[2c:n8Ab*s@MCofpV)gM20k.'b![%8<"fg"OZ]pcLbhAkWP+BMD%Yo1oI^aFc%g9X]k.A)<`4_4CO=c6&F/rE@e(e]1%(1hLmp0C4!,#[5([$C\:-aEi_b.<YmWGantP#>IUKTBZt\?$2!0N)6`b<c!G%7t9s/5mEF4k&8N7e;srhEbrX#JDb[T)<0W^q*`p);lXV7ko(E.D_gp2B""*jYMC9c=F&9YE>[C"eNpOK/W,UGe4scA(3lQ+BVF(S%H^<A6h0-q6gZu`@giDrM__-.EX)C>`6msPKc'#q_TZNQ<d-q3Dn8]p7'2;#"%W^9-#lPN'%F(dBooFm)XShj*TB$#MJsJu[O@U8W%^7Z9D=)(@di8&T']LqVCcCQsJ0!c@b]gd#;0XD>XF\:D#Wl:0Zo>MjJU'p=9.Y#d9jE%49_m&@)&Rc)YTGWAO.1HG"qKh8o4KEtg%5;2AM94%ouOB$LCp9FqlcQGtpQsHR1GM4FQa$RO./I-1jF5"q\d\Cl=d?t)+(HcoWa`RLP`]bg#cIs)&qWT@5Ru?1q1u=Op=._r0%6UOeG6n4]8"WE8od1#n>p7t[_pAQsWs/'AYCQ6h,`4&A`n7:jcY+Jd$6uFl<O'!6GiS4Q7JL7_F?;bC//c#'iXht&%i]F`eRCr2-%!k"6$q1n(tI&=Wc\]/.pj\mE@Gm(NNQ\%UBlr[?oVn7W\Yc.I<M[,#:kF$@F&/gd5b\p?A%lV5fXok(\&H>7qrt(peUOA4/Ju["j%YI@_J@HUgt5rr>:"DL@dlCIWbDXhdDP!X;maHujO<iB:Vmspr]'r8f`OmYJtWM0nWWT!]Z1&j4L?g4C?2bU>I`FekFPVO0^PQ&SE%S'36IY8lunc;(j"QKuOF9CTRFWU/=.`DrnA=QLQSZFf^[rn+nG'b1cB>!\2(>B>li5([&1&"i%9QFD$TDn0K9Ud9UsKA>M715,A!%[:%=`@AW'YmSV].$Te2PJ?W'k3!).'A*!@(T\9Dahgi-7l'5tYF<'/KXn:<;].<2/?_FK=Y9.#aK(SSA/ir_up0srr%HOhZ8_]SQ%-BS=k^udsbZ;K^uU]]u9]8(Qr#h_<BUC+&LZ!`H0]6N'Cn$^h$hkib01.cUpXk1.^hm2?:lP^O@F+i!)D&KS2?1k=@DZM)F17aS4%)l>?a%pA&,2`t6eh(+72MPKpL+DKO)_OY.C4Lof+Lu@^7#>Hg&SiZ26K)/>JhR^F(lCTe#Q62Rh0XQ1JLUReIT-0IPD80:GT3#+'%f8dU/qC\eL]dbo2X>C4*\(^]HedIlVle@r%Dsbc$rT,R#Zd"Td.;UaIqL2@32_X82-X5NJ,([e>OuqpN++_u*mGd]"<XX2S5jqO7%Zo>2')r#/s^Xq(Q]6F#(CEH1-WMme5\\!-R8.gorZ#Zu6P.<roRm@AhOJd:P+MX!'"hSnt8AY]#oqCppgSD\Pq<1h_]RJr^QGLt^%HW.QlRQ#q(\PPqpMC\*l2lgh/58>]Hc=0SZ`%$uFWCJY@jt"-93PNY%&%?NtR]HD.D_,^OX(F;;HChZMX+)j=+S#2!+I>oL6f$.%%"uPI]#m-@;Q_iI0LJ702dan-s#l/peqtn!_*H[sU\ln'rFe9FnY?"aEL`#-Vnsf*KV$5IUm-,/O%elc,$K&TBb/^PCV]jPT?QMFH%>AGV<gZpFilmIe/Tj.Rq2pU3TTg/`kX]iF8h@K0s[31hYhj3iAp6[EJ/2?<)Y73d$q-Mrb4#qA<^d8g6:Q*<eM9X1u:U"O?8(mM)%p@j$lGhpZs2il\ICSd8l^!f13jH&n6n,2BGA,\pSW)l.tp+#7'3T[s(knEu]f5ok4KX9+DrjtO=pN*=OJm]qD1aq(/[XR]m>:\LD%^/=O1<]UcM:jjd[MF;kP=j;+ekrrr8^.I.TG&J)`1*9`JaI?XNPipq/P\sjS?N>MtT8R'jFXj0kg!A!8:@TsG[#dh\*A,I,ZK:ZT%>XV`OmJ53PZ76SfMaM64q:Eq['P-r\.A+;)&93'c"5'lq8m1h&L(mk`0j?2AFn>Of<5.K55\*V,$A+;R_Gk5h[CK3/__]BNb#e$Q%[l:a!n%i'd9jrLd'R&p7D.c)2>edl*h>F@eNC>9(o-1LlUd*lhO*ep/IMCW-^=0MroS36FlND6.q)+rR+3e2N2:7dQ/hLD%G-VA)%@PtOVk.u&F:i2RMiG03Zf`G:OPK3R9r_b!-IXP$[44V)l5n38QZ2:Y"1\[HWh,6CI*e*c?8m/(fMNgJToED%OQh&^fo9mpYK7f-l%%Fq8\Mq(^&X=][fZKJF$5i45FjY(8Rbu/^8VkmR3@F&slIJ1]A>m0$>S>.Z1(Cp.FjhY+i2pfQ:p[l&(/Tbkrk0:NdgsV&c.I8@@%0dYI4nlOIumu5W#o$YB!9eQ+Ere4^kg.k)?^+gt9QPT95=nCVDn`s*3o]W$6C+3OqhV7eZEpf\8lpVZo_5AEk,1l=iqShcJ(B/Kd%2ceCc"'7d]q&M"%Ig2R?gqUm95A$17ggtK!I<U<u7-nKNcsHN=,QJd-om5gO(Pb"bYuVo*L%oi+MCJ-_epTM\$>3,/Ft-@9T(.e>%I)#IUM-L3L=\/e_@d!>XC?NS:I<k16J3/O_)j('m)\S$iCQoY`CYM@5oZ>!?88G]A't:QW\=u8+Unf,ufQP?T`c^%;>d6q@gAYZN%dVoNPSQ&d"GnhUoI6&-egT>4mZuE6ZL4r<Cp$D9clu96HGHDe.(+&@uIBN+_p_JaO[Wbs5q5t/($X)T)]OC'jB.'V1MsdFkmncue%Yh,h__/89PJ>&a'^)j,pi=WlIg;Z-lm&57*HEao)9OX<+VGb'JG?:De/'kuF.9^*Q?KE*Ko-"@`FY"5T]K?)mP-0SCg\4AWg37t0%U-kp9Je3-m^-fuTGK`3*0q[@9[i\66h3OU1\iIiR+O^h^j929`@"8DT(S0?jDl;?D^$8auYeRD=_TSU!oX[oNYo4lE.X'tKk4m*r%?&6MtK@e",&M+<"^"696]9Va9dOf^b8ja#Vj8Ejcf_`%^dBao3/J+RSb%o%)m^f6u?_dnkR-\0Rrtne59fj.Hs1$B(+&]u9-ZBP;%((.JFen_C/d+Ku+3pB=KQ26i4H]U^D8RMA#I"Bn%Q@%^;0/dAI#S\ei]RB+7iqn@%f%=\\nCR^DFF2SomIoOp=+u;*S*pN-j3+Jg%?mOn7Wdp#1[D70;c=h!;-hD=Jj&ctXX52U[D<GN=[/JQ.7k_krA>;s/_\7Z$E6[.<%gK,EZEs/M."<l+Q*]oepZd.>a*RQ9Mq]f?%92dpk6rG;98>O<QaS`rRNUN_1l#pk0W82TkV*RiQ/t1sW9&=kF/CcNkI7#X@`K.F?U0jK;+;_9B01tGtXK8[qIYG1k*FcG_a%eka%jfc:a;PBR+QR0s#icr(=-oJ>$i'5DC\]=B&<>M8"b]jX&m\3pg"p[)c2.VoB]um=4V$u"]l<<.1A1^r6q).1fj5";?gcbS8D1,c=%%&_=jj4rCK_rAg5%e>$BC';LY_CY2iTBj:tXm\p[Kt@lh3UF2Vh4<ldelQ<*rTuCoo=f0GST#5NphK'$k+1nRK@&d%R-91k3J%mI%N_3pl*RptrmIIWQJXq+t;G)cRO>if&Y8$]nC-n9h$JZ9%X7*GIE=&JkTt])6[grm.<gs&5h^m:4Rq5JY)HaadVESX#Fh#*59t.iI%%mDTaJb8I<^tW=pqs')ZZ7D89H"DK=FLuS$ejG?[:V#]_\F&KB?h="&V71^"gPDNh:XIO5ZL7I1##BH5'Q33fYJXGB!s>d9Dd=@e%oLI?n1PgOA8oJoOV;6lu(.!QEr_9u.^\h7EYO$Af'J"AX<BN_>?@'Xq)mAC$n@'7<D+#l02u<7EQdou^SC_[&l`<F-SQWA+DUpED%aO+/OL$\[0qTWSHDsin0_Ti%="Sr%NZ^p'=J\=%F_Z$TS!5XdoZridS3G\l>Oj\=Bk*;h2fC--<lLdZH34G@"4>a+i)tX'B#Is3]%@ubS=^-;;U/aShcV98Oan7K("gq,V6?P4M0BY8q9s71%4/#OgnrkC&b,[L$j>_,#$NuZ[#c-WS-;5jImqn_<-H6-/=pAgk;ca+4<%6'_BNr4d7?>&_*\_etYWr1jAqLVK9p2=F$T>=PjjA%d$J=NqG%4X6>,iurBr,sT6e$U6.fVd><PZLAGLXG<L%#;rWD*BcYZDc$YB%i[m$];j:`nl6qN%&"nhEU*pT(HG=u^T4!TVqub52Ihi*@o=b>fp)7fdGU@KW9DtkD^Uq)##aseLAaluG)*^^8`n?gIGF\K$8B8=>%Y2%,b<k.b2qtb]hK"ZWHjnDBjS*/MCgqotc2fgK>+0H9V\`HH[FDaMsjhZ_"q`)(Sk0jBTmA/i2':O+,k*<CQk):i%g[=BnYkrSC%*?o-X@mpRUbB8`d7u-OV".[!]]nOLKVQK8)X)mhNY]Vo%=4c,2X`g01HLsD9X__gDMG)V[(\[@X)-^Kb1)B!-c+2BKgN11%E<BlW%4T9$>XZY+,lYA(8\(k9$5["M9X29uEA2^V-#T7GUWI7/G,uhuH6T2a+2a3Db?K@Pecn"J>g3M$!g:RN]Y-a5`[h$^VQEe'l5$`1n%.T](-o1,MDZ#j8(D.Y^W5apO<Od9?[3f!A<[:)t."<ktGOH)^Y!d*)g]_-Fc(0T<(1<RR&=;l]mgF.3IUbD/r]MP.8aiZ!I[,-eh%hLN.r/e]T[4HT[_)*<`GIJk*Alo6]q\e&0>ZZgK_q/#Pp48Kb9D=:,Di1aT8*$:>4;3N6JP!ueT_+nb7U)S.]?<^*KK,6Zc5:`q5%[ABH`@23%UrH@:9FV([RN=QEJg[!kW7?tj<b8\n.?qOdk^*p0<>7R5X*C-Z%arP:/=]BbHVWf[M%U&H#MbpDo?h>lVX3bF%ju2A@%rS-nY7<`pOnrQ;"*U2Tbq(#S^FRcLNQ0EYaF*A"+JRoYpV7LUtIr`Ir=B';;<9[6#YshIG^?o'&<?&ELSjeJ_dq*I2RtkU$aJ.FT%VO-.q!uLq,md'\Q7<dY1$gXDuWPPrZbh]X55M5.O(HoqpDLI#`3#o<ho")09e[$Z,KrNMK]8t\oK,7OjYD&,g*"Q<H<U!h>F5E!R%"t_<hDJi(N.gOP']hU^KO7L1([=k*9Y?->mh%?r2m03GL=>Z-I0t?h$jW.RtH?Gp:_=*DLc-LLZioe?[AC6GW_P+[nihB(oMsf:O%A0:!cWW^N1X^50A5CKnn/?6D7+024k_\Og07nYdQYUI&3_-_BSqqCa&n+_:gU)3-6je7SRfGChIAC42RTZJ"ZMm!?6HE_0,J,6[b%0Q>F?\'=fDMdAN9ID$"(`O\umfcB&:TX?M!d6fp:=k_`b*5#s#s4,Ib'</%eSQD@j[%7Qlh]3C807(!*]_ukoF#.d_S!1n+?r<"Y%FP1TaC:,m/dEdPddrnas07*PueMo8mH-i9.QeT4(k"o6peA_"6O@??+Kjqa#5B'K[GkKVBp<@=a(1$g/8G-/_m]Cr](;5nJHT'..%a$XX!/1S?h>1eg4H74/H>0Gp".m8e;;D@LIn(d,FHG,6Fh>'dRB]n2l&#F?>X\XjsdG2.>(H$jr?MebY%Mqj'g1HCGg0<[Gju\!g%E;,Ve(O[YPXS2G=Q'QGa4cTAO/Un<_$FIUSD`l@WCZ;Wdc_@"t[9]rMqf=oY[af;3bgX4/4%o=PpQ]ND/X&Wnm%8F$7?Q<;SH%TO%;4fqCp\IR">Rg"IJ-\'`mHG'aIPAHhq&uM!#4p#`(>%3rCqZ`J1W8$'lYSj)ICiBm5.p_GZsQ&R>PgOif8u<D^CK^\YeIdC3S*)[%Q0(;3L5nH&DSD<hpYMIjepD]FNbP[m?<-E:LQ"-7kBAj;gU+H`p:K!6pZ6Fd#H'HLeQO'80(8KeRR?tU$HnLed,+Mr]?K("hTpn`%:!U!ErEiK1oJ]--J*WW5G),cT?:h]6T&)0A)NU_s0>g6]gtB8"[!,kT[QY,e9r'8`]8OR8rUY+%H_6XZp(ju)GP9D?IHfQ<EB)"E%F4-Ps[3;<q?(nd=`+`O^=RYK[/t]Q/Z/0kSUN]f-QG;i=A]+Jhb'>fGb6uk0TCP*u9f^k\@Tdj<<i)Z@kI-H9Vhc@W3c?^mbg3EZ%S(Ea1IOjGO)V[l*.u!RW^:Y!I2pC-WNF;'Tk;dGUr]bO4\s5h8,^]dN6_gCBe,g=,ZEJk;[L7sC@bYY0l^=/*F7!=&/lc%C<D`qp%c-1IZgQ)Q+94VRL)9^'XZEZ8X0RaLTN_(<CXf?V?\"Cdu5YFVW&ZM>Vb6HV(_f&qb/*enHT;"O,C?f5C*!,K7dermS:*r[$Q;,N'%,\$!D$s/rU]8Dp"aF;S0l'^S-+@I8^M`rKUPup)-PG6.1FddCr:7D0q7OARtkd7nVg2CE'PP+TK@oB'"l]\=aoV2&_n$N&>1hl$8%9WIDgHs2Qg/]D^-UA[/I$MGTUs-K$Cd7Rkp]s-6A8+:0FGuE/k*@F;Cs0&,WRJ0kn-J^$9D`CKaF:-3ejArR#;5ZB1Sa'LP:JZFK%#8*r-9qK%Gn+-AO7D/L-hor7;?T*[d1Io[eATYu&71Js<?B+2u+1/tGX*Yk97dM*#?CXpZqh$Vip"pM-NDD^=(?3=uV75sTd,InQ%]g[fsL<dOI-:=$gS[CtnMGh/OC&m;*C#[@:M)F8aV.PP^'An(H'+bo2ij+3eOSc?V7_`L(4osE=V>f=/6M`nOU;kE)ApaB@)`UJp%gb/?t"[]HSUB(AGd>RN8jk-8Q]>`A,3uG&g&ZC'3@*-i?-57[(+@2TdXX(MI4ls;!Mdf>jqVD5#h2*X$AP)Bd=knQ2jiYPdX[bN"%DFhftf](A'^.d>>7aQR5JWR-2pCi5Oqn4c^r)WLh7?.8&[MU;?:gT2fOQHH=?4Hbl;J[,S>R$Ce[E"Rph?.***K[[sn5!0k?1GU)%b%dQ`c\ZothEe\41[pDEAq%rS[Boe>#L3mbV(BK2oY65VZ_#@;RJ!NHX9[(jkqnjlh%(*KqN=PY>c4[D*d<rFJmRD::9Q&%N737n%mc512gmodDNbmJ7<YBnPmFG$6k1gl=@UsOpq=noA(96-&FnV83]9#M+DHBMh)&nb,#0D"2qGV4;$*tVdqVRBg_Z9(S3B%XkX'\5V%cEAJYYde,ZiL&VCo$,lXa$>P*.t&R1EgG.'?Xm<1EWeu]:*'5JA7'slL,*WeIH?;\hn,ADYC#G[lY]aXhu)n(SE6aj5Eb(%cR:,&%;G<2VE5lk'kBNMMO0/#'i'7`Ao^kk4rL(3hBs>:!I7_;e?nYl(>IiXCdiX'#D6bAAI3#/]ZnR7[+]#6,28OA[PP-OZbU`")b'fGV%OLM#7_;mmp1qjCPbim5M/?ONTkO!ZOLm-,Sg6:Xd:YPZ3S<1/MC'\.4-%2&f*G+?h!F(U$Pn'+5.\6O$oV9<R!hl#0#Ze[?@c?;D%(f,n*^P(B<d/3XH#LA^0"<GMV@)$']Xt('P3LEsBbdC$0Kai4jDT)>'jHN]S#fa#2QA@7O8+X:52mXUg>5O[B>e`n'MeL0-C-#>[%ZS_r('O"]AXji)TKC8#I5Z"]PDrk&GASJWZ2LJm'B.27'fP0^1P=aY`)air_Ln3"[Fg&f?JK(qm"NRX&jdBuhHc<4!`tYWLAbIjD%5!>9XQA(]4hq1h=Dui`B1$P!]PAWA_-Sqp=`A3AY3fI30h074g4n<$F(Z)'BN:baDjl1?O'HGir;\s/^l!jc"VZpgd5o1Q]Q@1_t%OR=[-"-sYj\u=.J(kBm`n]G-bL"sYQ<sI$Z0E;XW^@V=^]Q.h04H(</Vf`/EWjUC<M6HBQMiW03b93h)Qe]7KCg/k$O+jntHlQsC%T`)X*0C_NEUQ3FdGK$,sSk&EYpq5T5A=9X2\s@h<R4n=n\_uiH?**JIhBeiK'lP-+2daG1eKo!:btOJ*+Y01obo46I;*<SZ$X;Ai%Ce_S>*o/*r(mhJebIrI-P'&5.he',ULYi@#i*A&qA3,-G)m[Uc2ntEK'RS]Va5,3ur'#q&ftKWX.rb"0+Ek&^-s7*^k\ICNe,6dX%^9+Cld(p-',+E/P1>T::d_9^Vk>KqC\Za&SImGY.BcD406#A>`K!8n<K]fp"L&Hf4<4gS(cQ`9\Y<:[Td;M1KgiM9_eR5:(*GEJE%o]BQ^jeGYlU6!QUQn&\BqGkloF`#\I3u1+@9+F\\ZD(,$+0.<<p^Q!n^q:52qlQWX>_httkO<bdp,r9?..-Y.;9r%"0USoUe]uq7%aHLTt^R&l]?@kg;Sg\4BA2d[<Vrg;+"h]e(2C.Hf%?2Ef/:7Qa.-?j''2S<XNnJXA=mh]Q3q^<_080=XW7`a4pMW29VYA'V39qh`%FX\sPFV9)Ehd>0ATa,RiK.0CLDgW$e"NGIO4eYbM58cuO;Tu5TU[X(5EO=%>gBThO*6malW<6TZmu)4n,7@!Tm=!k3mDpeJ$d=&c%_SI#KBS=8C^FoHN8l!WnU\VIt0[?1.c"+SNE>I_N36L6!Y@JW>f:[@?XM<bj$m!?`%>[@7psmW@(7u*(FVGVTA].f)bqnH#8(^]\%@+!igGb;g,Anu"$\EA3GNgH10`kAZ\)!j4ARkn07XR4bXI?E^urA#H6[PXoCGn^rP2+pc0djU0m\;]H8[<EUET)O<b&@`W[KA(Qq%T0851dG9k1fmNP9?q^)kj8NLU(7P"85SFOkpQS3e<Xq;0[ePS)^:[Tj(.W(`ia9HEoYKNpMsL-#muF^#LD7X)S("2kFnuL3pN.+U%/=]@jO`?o`Hb3-sho54I^8.Hl/3JE+pEt<SL0PL#9tq>D$mkI"U`o:Nk;Y#W@RBRK&P1rls/QZs,8!cjp[J#;*%pTY2MT(OQ>sP$%\t&2sA$!'G`]U64-@=*rOpg6EVgIk&H<LQ$*Xc0/4Q1CJ-+QqWHELMVQW5`iP6n:P#-a=>]@)=>;JO+kpRI@]e+Pu,9Q==*hodnV%>[Fch%d*V2A!/K$!pX2JF`"J:?\X==0W+YE0ha5&k**GMHLeo#_&P*)WGD"*5S4%#Mt0CNp6Q.s8+Gj_Ej:k^H*Ob.fGS)&Z1</^%9YB_!"lmXic![9G?=MbrdkQJ-&6_g=*KsqB)0A?fcsf"WmMU,BVTKNlkj0WR1?e)1"m="$F3gN>2,tF:TsL6<aIk=?^;Y-Vgb\/=%[c!l?FRC#gp=Y&sF6I)9)0G5!GMsN&\*maCol>*:gb\/50?_G1dmpdiTX/C;1BN_FdbY0I/OuSf2?r"u'?DfY`P[k?T&.KR_!S)0%I&WFN7\2]I[UI^8D4Ldc4M@ME=k_2AFS*hP@1CkV)c)r#'=jQQ7<KIip6#i-pNUoK!D`nW3SH,GR!Tg=p\cB>+hJc?Ys400CAPYh%?W:dc,u&#9cL>)L/]f_Y:<_dfAM&8g2,1\Z&=^c"=UA&7r^0!</\X7$`jT)=Mfs9.g5N-[<^!DLJ_A._k"*S(&eetRPm'=jR-`u3%C_Q<tWl"\@)>:',K*15$:"NbaPA*)$$u+GWB*iS<*X4EU@*-kN2Ikis<p$/9SorMNp&%!joK'qaJ68BT6KpMLoO_Z)%QF]9q6]Mi%=cRFR,e)LaFlq[CI*0-*ga)Bu8'XE,ra)\[DJGM2(79P'VED)NC7"*G^@,2Zn36F<`pWXUX423UR^oB0EtXE:<SA,h^TmHUeS.kq%]+e!&o:$U"n(G02Bq%8QcKF@6O"^5^.jnpU1$I$L37uY76pE4O1,a%dIKoC7nX_FHadH9?@l)S%]l2=s$GeC8b`6&,2EX^$"._Jr%\MIiGbaU4Hjn#%Wm.s^HYkMAIcBkjI0g3=9[?AU1k+ct!>fuif[Hm5JGW#1s*3>X7GMhq,lo>P`M,BdQLfpQOpc3EaW#\WFkKhF9%TdsicI,QQ7rO'ET2ig]<f;pef,>KN]R5o<)X`QsdS)sbkRT8p3S;T<hZLBjharbMKGr7D6.J^77cb8A'HpfJ^pi,[]B1./.8opX$%=P)/a2m?hjO$.[b\TaRmm&UdeF5uMg(JfYp"7Jnb5!:[M9B,cgYUIJOqnlu:2OE)sMRhXom;#:R*!R5@b9LM#P1_(D[&`$Q]Y,#?%bdQJmR6O:Q1uU<q*Z;Y+P>ceQ=s:GjYXaH%qqI$!&A\?TQfno$BkVR7AAi<#`B>uDL1]V2Z,oP-Q(OE:muamOq7"&7kKHWF_%]%]%iERhb>PK8JlB'64EmLI2gW#5";3oc';/Fc50fX3@\"8)IN]ffFp,?7S0YX&<YdHfB7SL"P1pf[QfU7-'">]//<^+sPlpDSjfn-R$%lK/JC2-G;PYKfqVSl8sd20ID4;g>_a[-(Vgb'JE6DWr(>2jga:MD.8H/eE%39NkmhS?&93C&)_^lAs2\%qg`NAf5U3cA.lBcbaTa%S3pQ=P4RXuO=fZ>+3n+'e1leq_0e5uhIh=*1ZF^k%k%-\KT*E0hqY=/E,JYWQBr-&?`ZAC>0`HFB=5^KSol`ND=Phr'Q?^n,fie?%0p+B*V3dRjj&]#2OgFKTkEEKU)Gi?o,SnNl-f`-.XCfH[Dgf2.n3!`pnRJ%]aQ/eIA8mBVT?Yb;\^&kOk)`>GHEX\F4E%l&V]q]k%hIdg]h:ns#[qBrun22K58&cjNgi@s]#_UAS.hhDs%8Yl/>sisU*:Z1I]kA_!j\u=/j32LkVXopYS>@JtMU;n)f".imQNVK1VWAM(%4^A\FAi2CaYI*8tN5VWB=I=JJIXdg4TVe8_(((W3.<S"ubQZlAWAc>/*g0&WAu+:bN'4c]SCE7Vj^b0Y^FprZ'usH>,F.DL/Y8(3%X'&%a.ZWPk%()Qub7`Ds/r4Sr<8Tu2OT[aoo/.L?k8IN%iMQD&O/0YWfhXF%K8ZSC=jL[S,H5X'q(9i.o3f1WZRZhdKjuurN+BF?%8VJsI'kV*IcBeksjWF(0G)(oMcALR[7JL!uGq)(rDaeoW5#tJ)0T3RJHJq[<:EDq8%V-Pq7V+[M3m:QciOL!GBK#^da!Vk9lFapT%*CV$;ATi+#26ZH'YoJe+DubgB7Q_O^(V@]+mH.nk5Wa_hrGDQr^:A![:;34"r*&3fF]]P=/#f_3HL%f:SH_EVD0Y*Bq,+,7ZA73-%>4T+.YGHP")!pu9(It0Kjs;gEP;sH&1$aeliZ'uAS`TPQ"-L7?a_mTWHTRtn=dV&;2]=.M?_&t=d\fIAA@G.QEDicY=EDZi$gg+D%gc-Ul?+Wea:?7+#XgqPffVdY]ZR3;\LO]2IB0o5ufLjdJfhG5q9rdsJgO+1eYfj2P^1Y4,SW_euDOoORh)"D(%hB[.?16\LSN'>i%kMD8<J*;\rWOY**4%u+/XM(R%=&+tIRksEPWPX@#$Qq[=>eIr'l.^]+e+%d9OSI)mH/I),l,\C(O,;/2ej^85(Us)9O(>)T"KIs[%fL*`^=bD]r[^ucV\Na2G>u#.\lj-Ulo?t11e[sEZdFSMf7El07op"QnHu-?ajQr1CY,UEs]/6jXS6%B!W%g)_g1*#d(\:tnqE-Wt%ZX;.f(N+dNEc1c\oR34ZCrGZ=B(m55N:^8$7P(ss(?ck'rP#Z-Ai(^;$[;9oJBlQk4*NTRDa2HNflZpo\7K=%3U4^Zc).i=#n$E<%8_J3/MZ4ZaO#+*+m!S>%OnK/qe(Nj2=mM,#SkWiVPh.<sn(Dg^-1X1OFA?bXbKZo*Go9ao2P",+h<`c8^Y*^P^37BhQ^UW-ICbV#%o!.:ge(H0/H9J+$A^f>odS3f4?Sn7tZm:r1B<*I5PYGegS6A(hMeCMlSY'&?=[k<?>qV[H:Z;,Ul0O-3KU/0'k6YW+B@GPqdObK0%1DN9$N6R\`BD7?ohmlk!=h_6,V?cl8%*[qOkWbQ^3WS<j_6$s_2P&Z>M4l@M/"=i7H<j]4Sb(%G1:-4Mjic)Xko>-39?j??6\aGF%EG=*JG$:\I5JG)G^kBZ,jSd&FQ#:X1ioSO_;WuBa1%FLVen#Y[cb)7r]keJN=!oVWGH5fY_p$l=cAk*5YG.&%qMK.ba4#.%39Fbs%<%L.p^iU[Pl)\OL72\bhQ/:c^?#HYKm@6f^ia<SAP=tXQ3tC;V.$qBcN[tk1+VTV[bM/X)Mb%-s^H'=VH1fD?I@8dPDW*Kt[*Fq,%O7D"Bmd.O.9f9MO@r(5,Bf;Aah@f'8"\?/D-X.MFc$`XJV`UZsN2r;fH^d)UO.tLpDU+1D;2=\gk\f?;GI)>I]KI=Lop/G;8hD.,%+a4.K3R=G/Zk0(CSg=A]Sm3>hg/c.Y(Y.r=#920<M`l0U:J@P4NFsUL]Ve.YcOnFI<Af**5o`)Z$OboL?Th:-'PPFFHP0"[`r3=-%'6UHZ2lugC=>\R!c7QGtSDJVHKBGZ9]6H.H&Cl_aE6lp.0\">A1!e6D0US2_mMRi^-bO@(R?)mcJ3/8O30&&?E&pV,j#GnB]/iH*%rEdJQ,bs")Z<K,=BBQRa_7V/HP+g*Fimu'%h_3H8[D-(7<tu8O>>?DQ*"!q%SR\U8AX=Vk%inO3f'h-@L,qBoUl1Xc%M@2cQFKj%%p"ef[;DM1pQ&klZ&uMB!hd1Ct0,^8K_-k7rZ'W(PjM+R"IHKSLl3&-H/ZR:?3(p1_5f[$7>;[G?F9sN6%fOAH*dLIjnG:!@M:l.O%A$:^tZTRa#l#9-:,$]HLq7DAV_%h%`Xe)<*SO;Q"U=[c?iGR%<H/A+KAp2=$8r#KsQ+#m6SCQRncV*hl+#8%q4,89gHB1/Xk0312%kI%<MAj7l==F:$b;0*MO4,SZ9<-&,I'qOsj71sBibXZIB`E\gl43m*;T'KXDETZAP@Z:X5B.<YH4'(sp_%rM#NcQhS>nRg1m;Y[,%_KL4=o@rXRU=lRq15P_T2(XDn*/)?X-LCWl-]Q5;EgrPn?.rJV</PrrA(!:r_foi5MJ.E5BhX5b-\'EXZ^of'?>cU+ITIIm0=Ee5%*-UGjIhIr>";,fVFHNs0'Z2*;iE`*+^I9kNg*h]R6nt3/[E2X5CH^oe<K+/6J;lg6kt(!Ph4q;?G.P>0O/KpEm%L&*QQ4UUpX3$T%FI;Trs)sIsENg_=F-.GDSsFZ`3U:s6N[l[&F4R[eG[MR84G^^`59Eu*0]T:AFkCr%la>798RqF2qfeeTq[M>$lh*<)KqI*%Rb]nb%DbZIUdRo-!*oblgI)kS$;\Ir)q*:J"PRmN!H@.b-q(=4HfF%<!WC&jS`&S.mj86D1>:(X5e$HugW)N+kG'-M@Lg2nciLRSlrk5:C%)DgRU[9(\7*%0S+Ng'34IFoa0e21nbEs*"/MD2"i2=5HP>;uBaWg53V8@UeYkLAY^+qScf_n31urF>'Y'aG54Alh@ah8ZiW.I>$,%i%(-cgM9sT8_a-CB+C-f3e<AA[F1LuGMq%BY]oFrBsW*71.?B&ZtoG^>lTX,@=C_U;WcGPpmtZUgqUo#/#DQFU$?()=Q/qRBo#@5%o4cpYFR"oEL?LH<mY5j#5Huj)4GHQ3;DSpF22HH2o,'GIZ_>s9D.8]uLVu2!aW\%6ECgW\VP;VPkL:j1`26='rNWn#Wsjcd@pi<P%X!an*+gfD^kX8V`-MZsU"O/Oac5]ro864H'#Yb=m]G?(A?rM&KF2dj7]Y"!N/5@k?5"\JX0:n<o01lV=A6\;si?"oYDb9/mEU'"/%eh\$[CLL;ho2=*9Ghoau1!e<)"iftV."+7r#CG-/<q42Y7*reZk0HMcm9]MUb&c6@\.UC`^tY37o:,+/nmq-qY4Z@I&^Rah72*!-%(G,aV==_ZL?Yl%Y10lDJQ2ri(+#=.]fK?Fq[/BY[YiRR@V:ipK/LuUEs4&&%mTd-#>$0+"nl"f]OCdtRHZ[pI(c-M=ddL*8"AcQ=%8"Z`l4u1skBk(rBr&EmnO_h%i`<'o04Cg3mc*>FgWcMQROs+0ZD)^AB9PrRl,\s?mW/paK"ajMFR```/-'qTH=Y5WHS0*$%T<r5Y%l?FW[]=u9c\aO%4=^?-&TdY\9)9a:)(;neK>TW@'[!B3P+(I,(l1i+t5CMrRfMoGdUNQo*H%@M3Y;q,>lB!u<!IE!tZF=/RAc[5&%!Ao-nrFQ*$0@.cA$nRVHkVWSVCNRmp"m@fK;"4,&OTjr+#LGi`qok;Gff=S/Nn%B;J6m9sEL-F,!2l/oT**0k/*VAWGI=6DI%EC)%/_lSOm\Tfu:&.2\_Tt+$F6UcS`27pbHu*Lkq#]D7i6>4KS<mdOO8NK^q/#pQ0>/glXT"KC2!#Ca$Fm%9j.b1PAu,^d4B.5Er>)CB%[CqOQ:k&9;c)M5\SA'G'HZ/H.:p,6F4NAm&eCRJUo-Mn@EpDuRmM21r`96LQ2ar+s[@uaMlfUUV<4d+/Q6Lh=Ts()8A-e0L>.h&2%_ff0a5?FJ?O1p)2-Q2F?cungCkIrg+Or*HMVe=hre[\knYFk]H/.nn'p[p<aPI7IKSGAFKIJqqGcE+FHkO%RoFaHj)7jR)3$%;d-%]D=**.rD.ffP:Yj=ag8(9jMNKoXoVN/D.C9]t+%1/Ks<5IpYG';,H=*Tc]n^#F0h+E>D;s(G\l)lKdWieW4icO;@6L-X9$.Y("q_%,kLa&F4N[V'Uo\5kHV4_HWNH%<\DhPcTU3TAu%'9f?_.2T96t'=C4;eLG$VP;4i:8SC/Z_Dm.\4qtdjaih[`hQbIoTqXH/of?_.2%T9!fKWP3hfnfHS\D=?WPlfY4gPHKA`e`Q&\lXqH[O/H=tkKDcR)P:Hj08oMrF+8,ZUBhY%l_e7IelnT=+5\&()RfV>Q>h8r?2YQ(%a6,I>aea=$FKC53<d`JWe0Xb[j5)ThY'r4N`j88(P&0+.e^%;tRS.!PG;X$%`ocUQkHM+oV1S+tVTXhJ/DSqWp_HY[-iNg&k2FTf%NN6d\V]Xgo=h"[FSF5]%Ikn[EWummDn\0J??2\T>SB]U9cZ0IHQ,OcVE9?et3HLeYHqK=iolKTek?&PGB4&Ear0CrRc'e/[D-&@D%f8o)?g3<4Z-[O.BYFiF98BtcQIJqq96cYN]T7-ZM8`]"*p!Yj6gXT*La#mG/ZK^]<BS>]cnR_@cRuO[ao_%6iU%T!Vp=Zh`pX>tB%T=]&]b2W'Jf?[GVUmM@%((Y%q3niGQ@hDYu1eR/M6:F=1<W^e([HelYDb4.i;%oi^j7T:Vod77]W7&\_$Cd-=Ho2H[V=s>_3^.a^%Q>$<ij$WY?)[HU5XDA,OUYRdV213j9QS>$]\@,?$-Dg3)0QfI'9<0.a[p,\Y(]"$)BK5N%fr2U9UsApVFnP^FQ49GC9N:fO\e<0H%2EU4dHg_3-pSZK&Q:[rl"/4LFCRFH75D#;P4+1BrGWI<MId^fCrZ9q`B&8TdGCS1=Wf_D`ETQ\_pJgoh*5:9p__:I[g3`%Ynrhf<%T'Vb%f$nY#)u;AUFsGmo=%DN,o=G&a=H_>DQGq81n)Ie2G$,,$p[?/-U:O3a>.%[2CAk^!QJ1$bK9))ZI/)_XGLHFp^!)L$1ZQkJ%:B`k>D5@jm8[Y0tiG!4kWK5Bs=)9d]?R6]1`m\_G0ASbV?fe>tqeo#`H4*:1-i&0BLSE<kJ(kH9"<"H"YP!qeFY+F9\aK-/ph&Q(%Y^1\?=B^(I8@@$6o_nOL^I`BrRAAS"3AgLOInT6>]\:X=a[lnA>DItWC$fd>YedBJZLOFGqS:YdFWkJEn@&a/"1DfsLJg$0s)+@7%mY69(BqSVDBHIYh]Cj9<-1t9nY,"6/S#uVRe"Cta;(hre0;\BWj5G9kP7<O\SE"fW/FA--Q=E]/VD=`L<]9ik&$i8$o5"B4g,h=*%K)<tY*d7$cf^Rg+&sIM!e>t<7:-XQr,c/5l(l`M-76,?;PMG(\a^O0j#)m4L?Ufs:XC#?ph)G+O.o(O>;Jbt+J9mCY@4TlC.Q]X-%[Nia0n^)J1h!'"Dpr;4Sk3^WE?:pKiLq_4D3Ehb.lOPp')*Z]1#p7s(e[NU)aC.^6K^k1&4$+q`^ZhVS&(J#3q^VVR:Y%b?P\A[r%p/][nM)2X,TYUsWl#Xa4E9dN<;:t,Y%!N^h/j:A.!O`MLnuGqX$Gs!!MD=f>EPVXV7IUuplhdj)4MAf>F3*NbJBU0lh-_mil&ftQ%i#T>Qi.qd\<S-ff?h!AP:$qk-;W4eiA$OHsE>:]t_$%km.<X?'cuRBD\]uA]c^lF$WLMmniVmEKW)[Z2*sE]W$+i@U(KF[$Mb**q%@@8ck19>'65\Q9gGs45+2R8n.cfa#ab/W7GUH@-916-cDK[],VFJp&KUdY2fXYP2`]h.N\\:Ieso'GS[HO3%4N/5ME.7X$kTd5]r%h$Ep8P.@JL283$^q5se^2SN&a:QmUQJfXF2!?!UX'N+XJQssV+1m7W0QNl9*6/)!)Cc,!%<M6V%EZ%i[>$$h`:V#>-&!=Pmj^MNF%AV#;!;0MQ&Eti3<+]nJC%n;Ggl!P^CEK!5d&R9,4MG1[JT$$iEFtipp[YGs?Y>o]XN:.0:_<Cd]LEQLe>H]Ga;sUs`0XDCBf5Nq_%8C],'8sju'43H2Llh_dD8gTS',r1-W5&&l8m@q2n\P=N2l$C[S6D6K?';\X$o1*L?7PVblN775@L_<!u%B:mF`m!/M#Rc.`emiX$%A\&MP8gHc!MngRc@1;6mU1FoH(HCS+ODT[4k%17-@23gHd3L_s-X90aN-iY(HV'@C^"&t!G4AS$k!(*qSfSrW+W5r*$3#607a;I(%[O/I:PA&A4-3tsZp0/\OdDF,rl0BZ.FT*`Sr6rrKkE0e-p/mU?oc$_oP]]^&7e=64r&q!OMKQjlh)bMZ0Pbh9QW=XYe,rrQ%/Q8T%<jq*^:5M+-$F]Z&&F#k+o5NI\"grYsZDju3Mqun#l$ZcAO6g/j0NXmJ<K>WW%=17@mk:Zrd\s0HYKnmjIp2qgq^SQ1a3S6WrEb;>%=>(FOWJC"l+.'Vh\*Lr+4FZ2O1TQsU`2D:hW7cqrHuCO>mXp\6*`[at+0K.=lXl?8lIf8BL*L>8No*'fjS$48;qD@s6/$dfDZRij%Te*n0E%TA9AF%_"&rH5F,Fj(9CW+UA#0">T<j"p>L:or\4Q:F`5nn3:M6R'XcaH^^RB;4lgjHhY7l<a-c>,D#'[]<?Z]TPN>h502%,(4(lLCmB(c1d'7ZG]?%/TK78d0b97^SOu7*fH'Al[HErOT4p+"21[+gL$]k7S%BZo6!9'Zet?=4/Q7WnpBe,T%\'9d7O<8,B%#I%<EcL?2rG0'S%H\9jBS43.Ol"[+1YbO85s5T=Xf>_6lJlJ@G^<;B!3Y-ZMc:,kIV[/DsHL)n[`!g(NI>1q0"$7X=Wf-H+ZLN[VM3]%B\@?M!8HnMPfVOo]\<TQg!fah%H*2+]CKfJ99\Dp;-C$h*q"A$B:,NXQrH%*LGeP]4?b5d^$l<h69MB)->O'^g,$.mWV73u%JSrW%;>AWO3G4Uh1tshS&@'3?E5(b<M_q=)p>LBL]\:J$/GmIBPqO6ohEe!M)]pq6-tk;U'^i0Yg%It^lR9J_0YfsV&Y4U2b>fj/41r#r%.>b";4oq'5(tR7&nRN;/HAh.IS(pMtj6C,CXlUe*B^qYT[qCN3n_59Zc/&==jl.e\_jshma?d]/:0Ej4'p.6i"6FiMEoTneb4Wlo%8a>cF<e7B,13+b,V3khOTu39*[0RsKA@,2;WdR5YhNc4,de7X-4HkTEIC/2Pa%;i0M[54*_E=$^;AHnS3mmfA>+*T..!aBuopN]i%;_9p*c]#1EZX*OdWErG=bUgdBh'/jgIE.bpQn*1.c#Oa;d%dJA6e5o,:p,Ei2.L6_@UAT\D"`B6&">u5!4fjGnAm23>KX4K3lnp*%1bHa$T95o;n'C.<?+&DQ@Ii_/VYY^POAn+Y-ad!LLa^le9jfs><Y9/]LFD(0gE\L!IO<=^M7(Zu0e&+JF53fUBfZ(ugFXDiB#fsB%0M(o;6jC`Afk8Z?W%@JU.]sKiKN5B.D%F(LWLZ6lfGG-S1c*F*Va/?H>.\0_4nnG/5-$M$pD"5a#IQR(hTZJ0Fu.n8n<Qr6liOdk%=7L,M.rDaQN?OjG8VuV'?6WFKStRYRE_!0QV*>+lX?V)(,/u6R5i7Uqp1NBsIj2qp;$iNL"tHf:YZ:,7_#DjOoZ#!7l:6Y-Z@:RZ%@/Id&>mJQA4MKT$J7_jJc5+&;H$k+K$-`5]/tA)&62cO8,,8toO@/5eEKilKE>\mtXTuf?3sOo1Mb6BqB)LDUGk\mST]B0R[=QqY%>S)TP!HsK.;Bk"^)>5FubP=/R'$3mVIhR3tL+=hJjAF)1a-I.Gk=`Aa2JH&Q#?F$Ml0V\RqK&1JH'7mglP(aYaf<eAYGVs97B'@M%cY)!AQCXW@MiK9_"hd1CQWo!08XF+=m3F5*>pN9^;\)=lP>*T_n_RdHOO.X28lG'>^?I/nHKMVHMX;S6Q$RQVrp\hR^OC"!ogjjo%LdT*&R[*t`osJhhG^<6(q,::X@Ka9J;C]/P8a*#@nZha*'lV4E?2\i@eI!0]89ZSPP\#C(E)>'iGR-+-O1Tnqs-SEK>t<02c%N[B%3Kes&2<*h%U@7:K#1r#t8RWF-="821EA-(sQg)1nFbB#k:;<a_mi+\>NCT\pk3_"83WW=OK2Zi^bRNTh-<`EdhXHl!/VQF+ct\d]%Yfnrf0_d&\1pIS^fKmgE4,B()ko$9]8*a'QFVWsP61_-n2?/\[`M^l-p^=uA/^blN(^L^a?6iSnNrVt\(/.?UDM-R*lBmPY=BR^T%a"B86J*SLB(K'Zbg=&nal]V[G5:.L]oV%;!>,;E9l=Z;RJcrY'&I$mD,79N:;C"Z^"=05tn#moc$o^?u'%j"]%OaK'fdJ!ApmtB*%>#j=(@Rs>0AWLqp1'i4DHqcII$9i4&,6J+#:jBWrE6aSRT``kpLTW^<$sq\NP3W,?)!L42TgkLpia15%Eia)481_?3UbP+W1uC2:%&#Wj;_<t@D(T$A@gbJlgr4Xis:O:ZJ>1jFAf`3tm4`b`AF^0+BL0%?o'g=m+eMrIPk]<TVX.-hkMAkAWHVl^,]V+]!@Qp=Oi\VER%Pf?TJ)OkLJH#Xa\/4sDL7iLt]7)B=_L]b^i.ugA@4H6j]2ZU[]f-+$uY,g@YL3GK9RJ/_D_$QA13=tb))C[<uhJium:JNKf)C`cK%Pt\p%DStAfYZZSk#VC9[;X3U+FPuf#G3UeC`()8ORYFWSPlXK^ON>_JE*\)P;-DIXE(fLHOpb0@+t,C$OB5"a*l@W.40HD[>:QrS%=0kk'<$RQ$R]KRSaa:?C]Kcm+P+'A5-t)E$i%#afNGT<pQf,hPK?&(a/OEqL[SF^c2?:,.C7'[^n,S'tDgL2-Be.3JO55We*8Y$o%Z:KLh-&,@cOSD'XXRaL9F&$_hj*)9.7@r+VPU3etNo.fZ2m[ZmhY6^4$B/N2[+#p%EMs>M8/smPDkk2YY5$#oX$DJ2@dV;@W^P!p%9cRdZlVAMMr[%$.e\UXFI\YL(r\i?#=%BI#dV@0A#QE^GX^%p=#I.0S?WO=*rfkLa&=gp\@d@8Xa(tIqWkgZ-8JW/bh#l,nkSS.U%U;RP7Gh7^+f2U/b^d!PB-4<%'^B#3=MQGnbA[$34Tcu4CAc<JkU.:'hE&,k;aRf9:h%5kU`A9IcVn.>r&t!Eh*10pQWO^:-_=8"l%+gHEVn!ni:Q;'4<1mZ>d`]D4!KuB0'iHnJ/lnM3T"nWX5M]mIBfi5+l>:D[e.)'.JjP0X.lfkOBk/gGiOQ8>g$`OC=<,H$m\c_aN%;']5'7Qg/;ITPWSrMY;.PtF3H7h);7]9bD"r;-rZO6<;YR2iDc;ClTK?/'15>@,\+p$5?db^-MIb0#$6N]m&No(`2j6D&Z^oro>b%X0kpdN`l1DB25ij8H!s2(4jhaAUNP8RT,Qn6,%t]CXVp$X!%'n2[2)ml0d[`D2ph1(f;t<<XMWpge'_oM+%5>6G%TW"&#-fE+RH0%'0>,]\Di-oEo$(u'@RWonG/RY%fng&fr9B_^pOG+qgb79F_SJDC7.qu,,2F=p<$["Q7se7/PHbtdi[4%OJs0I<f[I:DuNGW#$s+9%<NpjVn0FhL%shoSb'D)%1ZOe*6cq!!<jj4ub`@7M(F.n/JWLI<j=urKaTDF+IR.?P7drB1Tn#qX4Rnh$TJrHLJafu_P'Z_k+PQlW%=<V[^)_>0tPR\WU;8fMc&WWc98`<G%>t4hCs(5J^[=>a;S?N21.n6ZPH$"KP*4;SK>t^pHHN6G3<T0j>6f=7XE#"f^N?"Z6F#C\X%+Cuk@;?XJg1aXsZA%l)[a&sPP:g2D[WbSDZ>4(DKSHfV!mp+ceK2X8g88'"C)^5o`PUDYO1Ue`W9tBOYnVsaKnZQb^*2D:[RRc/*%Alm#54Kucr#7Y4#Kp^ueO_Q9(P]?N;B8COg%kAUM(gT>]b0&6[d3D`Jb+12WYI9Ff5noT\Z1=o2<.Yp;&74NU8pR9SZskSDPW_2A%(/>bBTDB+OIYun2R5`:9[e/agU*phM:Dob$F8ebr.TlINGm>0S[t^ug!aP.!3*ruI`]'P!^(@`Km6RF4R;D\D[q?.KLeJFu3I\WG%8!pAuebO#igdQESKsB#/53QnS1:*P9/kKF/$!.bB^?FB,GS8d+9hUi)@6KMFS62to%07IdPqC-73(lD:19R6Q%(866U>qU06eLJf%XsTl`DutY%>'7NU$=$N#EP$3[dg+>t0@Y&,#_lYBKmD<r:oPn5_hP]7QDu=KCf$uGXl_N4^bob^K3-&OJK<.AJ:r;[18S94:p#fD%N'Q)WR=;,`'Lq3PILk+A>S"6,FJ0^6.7Al6pUJslDJAHf."SeT=>Rr0<T9Z([SOc'(lWB$hok)5YSb7$K$7^MK:>;RH]RR.qMrb.%Q*kI.+Vc-UhBkFZGLY@C7Rg\`pc-bL15X+*!/E!FKn<4fkpU7ZeFo70nSZp.reVfB^d`/DiWcU4:L>#UPD6n,$BqgeWNL]>'W:B=%-EHua?Ab+Vp=9s8&El2*SGmS(^("pq)jOY(Grts9(!#-E^1kben^4!C1TQ='dXdQ0C8d-\+"7\G*=81[6l@X(<>R2imDF,Q#Knn@%#OIRp%RQV5eaZce;)dJE[)\/$adt5rDrXGgD>&OUSL2=DLJQPMqd0oFP73E@Kk)9c$ulAnT*lVR?Oa'OAr6b"J8,J2D$*/3drN*N%?cL_T2QRTfSkU4niP$f?#p2%H"#I7,(?f.(#=m&>`l@tj9dII\2+Ro:J4ca2:L-\^d%G>;rNK_IdXD[\]Ujce:0D9+kL0W$#&:@F%*@.dmQPSX5Fd>Y]#+c_arja7t1b"',SX"LV[M09L3<5?,ccW-53:#R^EA("M.AS\:m*U'Q[PbRuO&&bG9A:G'427obDJ><u_)Z?!%LrIqg\$XNj[gZKqh9lddQ=F^B>M9+9XW<hYeeTfRT\l9YdKYYU[C&SS.Z:Dl^-=qik@&n-:KBgr[:?+'$5.VUHDI)Ial<.4dN`2.%;9IBcO0m@[;2VpKOiCrkZmXob6dggK6kP6FnYol'Z>sNH##q2dM>i9N?WdV'3SETta."KMrt._7k^VC3(=++d-ZMLG1jH<[XL/L8%V;&f(Oh;[#5o[KuqlI#B5B*JuSgtu'%9RP+)%a`je+5q!K8gY5dW/IA#pWAHC]gi4.)g_QF8[Po($E[q\JSFLbrnt,#BMPU4Domn%6*ECIXEA%!"]+Pro(r5C]nk,lYW+0*^^(6BT&k-#f]brqb<i;W"!\5-(1r7AS;oF%g]o?W][Qd?*<RjN(&g8\3N/RQgQo;le!kMK%&f]ND7iC\onI@uU#)BXSW.6k[[R:KXZ(k5J:HkG(RAC8EeLA='0suX-_TC7U+X=po_ggs4M?>BI\)>(Oml^B!62`-9:\rOBCBD7t%m#n.Y$sK\6WP"o?)9K^f_[:Fp1p,>R54.*\ACYF:XX2$F'3Y5[=O<mnP;H1(rZ&,l6/VV$^$Z;m_grbi>A:tcZ,(u5Id#&diUj&D%ThLP>:^PkG(0K4C`tl((i0$RBBSY_J#W>Q,Qo=uL2*OReN\6OJ:j:fYMoO#H@BJu"6T(c^ZF<o5<)1YgS;`8A/[oNa=l!s"i]DQ7%cFjLC(hMRF3oO!L(uXV11($\d2f]SI/>Q9>fJ[N"H0erEe8@07QXP2F/k02nBK./5!ndcuJI%N>7Z(e*gW*C'_k_Nss8<Ebj8$c-%AQ(Wr1Tc4?gE/+Z4anfQSm4itdAt\rY'8aN8i,,sNKJ<s.c\K5`KL_TKuJ6>;ZPnn*X%fj>(Po)WK5>lH=MeX'Eh%H0T1t8ggVqK%J%&Hf/dSfR\9h02,(FBla6/V+FYK^ZD<57`9^4VIC0aX/Al?rh:rDO%:$TRb$SeXR`h"Co/uJc;;gUQl'+AVXl[8qIDf;+c3Ad\6%DJ<RdiHpZsdFp3_Z[tah+_khWYZY<;2=lfS26#aqW:<pb0WF4lW5U/u6^^orBfWYY120T3aXkV:-7u5CX_YUlA^[;FlICEOX%Z\r%8\?]@TM/Ng8Kg.N<gcq18,`F7:.O"(]<L7V+RM,\4PY4-Ut'ei)'3L28C[KbMFSR@#=91I#oFV03UoYA`"C!rmo:m!]_`V5J.]Ng%BSqc%l%o-ga<U/F.\Lr*4gmo$PaP&$2fEH4>esZ?7k2K,L.<.%P.W(>&<A[Ab[R_'O8OI.(RE,e%1X9N5oqK+;YrHqBlHVub>7Y!%K0pilr$`\$$tZS[WUn3=6G5<"O-K"<8G"Caf.'mm7iE@&&GeC.BlHVk\,(l)Uqn4:-TaH8E#uQm_-XL[/W]6U0Pb%_%.&3ajcI0m%bnaKd.`nBjnAt8BI.OJR#`gf%,^k+<)'3LbP!jHl&<C@aOIH=u&Gd"4BOQojV5#?A8)&e:qs$F>%"]bKO^RN'K-1JA'X^,+p:/Je%%'u(]Mm("kI-`RFboW]&-<ZXReKbm=Lp*PcEm9XJ5nYgqnW*T>&1"hY[SETNVE#t"%"bS#\Q_c=rA2,kRsgA@pXRVB5584%"eJR3%gYuX)UQTZj>i#LU)PiL:jJKh@9P9Fm8I[5>e024[P\;c.OiNfP3jHV%(c`8Y5f#RG(>t,\8)9<]a@kHMY5UoUKlcrI3qsZ_IS7rF%,js4?89IR<O5k9YNCGKWH]R3-r/K4_GP4!Ka5:S(_G,@sQfE!03fK!;d@7mJqf!'dj;>34F8RN$S)7aGdWR]Q`0rY[]Om$`mN7]W%"?Ed>[q.d">?!N:6Sa.YUPBs^&eQ9N"d.sMHjaiFKfR:qkp;']=p6.pE>k,4!`hE3Z<(X=ZYOMVQ,df`#'>`T4P&cLV!lN$;iG)f%bJKRpX+."K$l(b^Q4iF/3l%:^1DY^[&<bu9SKf32CG\"cI5Bm!cQ[E,mi![d@k;7(b+TN%NQ^,bCa6!+L^&(_QB(LnHQsuL*iiS(%_2C+E_5W3#hKX"CdGS-/EW13%YL28t[bs:<i*N1pH$?gpik`;tK@:[VH/l`G2au66j0b"\,KB6RCDt,b@?-J/En,H:qr3_B,:)(8%LNoW2+i1>Z0ck%J8=%FTMau>c#s02bp26EJb>b[gFWSRDd1EucU(OHl`B6UX4KQPCju=F&^Wn!nQSF4sZa*W`-Yn+7EX^o0g64CV%a?g.CerAFa.uj!p#2+r)G)\AHJAE>+rAgLOSZ:"5(%V=AQO;uU5T4PV5P\j7Wg`tWP;SCDqUm63S7QCaUn\!jqo?@JORh.rGqs1O%ZO2!G>jp6f=:_[I;'Q$R=:a('Q!urjefu-c3Y8S)lbPJCfkHX2Y(1sXA0K_THT2Pi_ltc&YL[l6XPn66^864]M99FW8c_qs3,j5J%JQ5OEeBcfV4o4FCBNPf(OL.sCcgXK'qT4C\Q9[**$BOgWTm]L@4[tsi:PSQ3Wj=o/ejDDBb5ECklQI6Gc[BlsOh>VW*4^`)nOgk@%+?U8ea-P[:Fp<#fOH'[DTj'-8Klg9:"/.$@OH'Ynb=c:ojSbB\UI(DHC#O*GD%,R0?toHh#9u=%,I]G=`JP7rb\Z4K.VPMW_%nUA%mpp$W0XCB>Eq>dR*fOpB.i1%K4W)l-ihL+/\spLjlaS7;E8cJeJ<uM;KbFg8g[!FG[oOPk-PYj9h^t[DiIjPAXIknYka#%Y`e-WF%Tdb/,g*a-jr$0>aCQ7cUdA-o8n_o:h4V/"us5/e&H-5(q>+]lN>7Vbf9!`cJ$e(GO:9csK'ubo3?HD[9&SU4iao3!`/2fRV2.q8R%R7`ZZ_+@.&^V6)pQL4F+\pW8WpLt:q-#lSQ%a"_mDMdgAgIe:>.DaZ=*)KjKTjec1q8gBki[,9Hh8u#"fY;Mk(fso%T4Td+2*&Vk%5U6%h4U=NR8.p7O*FP5,5(7&R^2eQ9N8D;ZZFfeJ?0UQ^GSpe_Ec]Ojj:o1m/Z\)(]>'N<W2[A*jASo]p[oF->2Slb<C\oHpKMr?%<)9^Sk"OtSBImWfoR/r_PBL^,@[G0dr?R[U-j/KMD:9nHd*4WG2:eqg#:a*=XmD7=_:-=2D=u6&B6T@`+X"<DWSUI2'>"Z4j5gU@%NQAn_G:OeWT!qii.c2eG/ua7LK-VmFYX6F]@t)"Bd,bH%h]V1N$4GNadJR'Ujm^kLp/fnbGB14"b2t`Kn>'RU80j!"/fQ<h.j9%`%kC+'UoWh'&Jl-9PP9TrEYW(E8(P38!798q94(2):9'qr@ASd`2@aF\_N><:dDM+etc*.0phOb+m9t-crGBX;)&d=C!AstuB^q?Mi%Q?'\9V[O6G.[[8C#OB'e_n`S_G"--q=5O7LZ.UE_k^0.#&WY&0)3LL)oA8?h0ih]qm4++dEsfk'5m()FrB38q'HHKB$F"IZV-t=t%&]?EDWsZj<5:1ReD]QVb&L>Hm($'><dfmBC1*f$c7,t47'3Q:OcW_[XrN\`SUn^F)M_n9t=c$e\gm6!IpTb_6riF"(*\j09-,K5W%]>/a]1>!%E:YPgGb2?I48]>Z$Bg",Yn*`!nC-P;"%\E[FRtbgiU3o&f^olFI&ir^df^]Kb:Ki_pQbXIl/(/UQho60\_e`:<-<5`6%SQ'`eF@qQVFmFj=9u,#P88@^ZaK?OdX[]&pp,D[A1,%7o6ZRG+jDTK4<^n/0j\Z4g"Cnp_MRd_5'0G:bi7%AB@!EkAK<_b%-()3s%Sci,pDjeP]jPm\4qC;6>SSY_Ib@ca.5c@Ni:X4dc,_4J3=nmO>q1LCADR]1P.u2B5g?EK+TD@8\P[dc^pgCj@knV][[?LF!nR1^>%<g$TD;[r_U\4Qb#r8CLE+T>pB]_;Mj,DJjLhL2lSOjg53Ke50Z>nAnMBCQcKQ5\#N?)[OVS#'0.=CSDqWGZ,-?FFdLgc>u3Ys%ek%U[$"XoEk?>'IM8]&s_J)Vo#V=6ER&O0<P[4+B.rAX=?cR*f@ds9?ER/7\Qe;M:-X/[X^:8m*f*r?i\B>Kq2^*%lR]@#J>Jg+Es"E%",jk6XMq*@Dfo>Gb+j@ol9loiNQN^(WD=U.;n:d0\^bm-^jP?=?,-6k69QQOHH%>3^]8kjntfUilfV[XmEHUcQj"XS#t"9k'k^MW%a#@;rjlO:f49DSTjE?TkHbl3aoDj&tCNWQT@(qtRa;i\@@qddn2R2]rm:.Hu4Vb256afKY;nTV#3.j*OQp@A&X)h75hD<0fi8h9(%BQ-jrT:)3\q)cFBJG+*o"Qk+K^A`hhWiqprD%'Fmq%dhl&i36X^Enui"YbGX2\W,Ge5/:YU?l^uaVE/j*>M]t78P"BWn?'A(\EZN%_OFdW95)^RM"ZWh($/3d?kYDS5,^-rZs#W72j@pZ#IrM>V3S+/>)ae()d!4Uhnq(7*FR(3MpP0]l6o`[71D)1DB@-(L*'fCU?=#i%*lY4;g6=Sp`?cp-n+hRA<aa&b`Kr_c=_c_V9$G#28^US44]<u-JpZ&7ZnX*>dQ#rV*@P<2aNS*1$6kn0!Q@<5S4+ZJ('O4WcWQ0;%+1B)F"QS[/2/Hr)YUMb^#j7^DSKBL4p8H9")p%@K-2\3:D.e[ucXG?XhTm05p*)`;iNtK;1M)Q5&oaTrn+m8l_?E1Xm:Jof0s*bB%(/k97q]7Xig*Do:R&tCQb*OI4Y2,=UI8[SD)*H1ODa1!540<>7-J.ZI/>a5>1Y>O,;51.m`>umk`Z?N]+3SsRZ$D7uip"2mcJ9Ni%doErb<_7R`TM1'u,es)pc+jO"'oYnMBG>OirG5J_SZh_E[lZDrL0ZWj1)Qg=&M9&!Ap$$u`dO_hlWoEk,5lhA]@a8CLn0<N<laWK%,nah64M>DiCe;=[#!N--VTFHEg($,:^rS%Na@ul6&3#HT%VVpOa7LG/L?%-L&lo!:K55Z)Zj5q@'Q#&s8>,\6,5s6SK)Q[S#aZ[c%RCp3_O\-Ccb&E8c+Vbi'TU"&BZ^cRY02">bOmmu1ILf-Z0FG"&Vso7r`^`tm'g=E!bN?(R]=3Oc==CW[RaMCJrpn>/TRcJJJ:s,E%,05YQ7WWNBpB=q[^81.>p+1.!>Z:4b.QmYV]JZj!D!1M$q=J$>at1WjmKGpMHnKTlXRT#4C!XalDptb`lC'T>?^CEn@]*?66>j@l%DaRmfYE)5#$LD0$6Oj1Es8.o1EUq(WIcTL`@rFs$^07,!EYcU'3T^%Z]1nj8q&`$ZFOO3GQLs3YDHscKA3O2-jTckrLih0W7nLPQ%Xjb>m@5_9<MFo/`a:`#NhiaEV/%7d.D.;&=SKs>_pbYYaB/5UL=DYU&^M9'9Ap(eTX\$5&>E<I*^nP"T<8KkH>'hc^2MEDSj\u7-%^"ZI0h5G'&fWcD5W)1;k9Qc^i%D<95nUqY0l#!R\60BnE*<dJMA[\O)M06C#,S&!jihET?i;0Ab6(<"$XmTGoaGrnc1t^!8lF"Fh%Dh4Ja[sD`J[Los3<N\C/FX#W&gVj%+H0Ig;HhpK0gOh[6-C04f02W;#'`)?g*R1MPID6'A`NY*nM?9f"$ZfGM(1HQU*R02bQtqkY%mXb+pB"3-;YGPM![E<&3T@k[rDr9rt5AI`o?[Whlj3LeZlL"RnTD4AdQdM]6nt:0>RlQ.O2NPsUm=2l8mP=g^PP%Q5/)"\:4+=nt%&!YsmM@&iWrKAiN![AJQPFsm>?!Y`c3SDU2oln*,$$%ZT"i[!@!\)fSR!HjEY.KSuQLjMe-pms8--Q>\-X01gqq4@F>6Pu:E7]`0%#_\LGNn7-%(mOC-$j.I_1CRnkHOpk%gc(L$;l_!'@+!)0cRr=*M0)o>b((J9qA_9`JP,kb9K;B0jOFG$-&oDs0[fst+KtZ2^&[%l%Bg]V-79!gKejm*kIbdt(O@Q>3HYCV<JY-jtP"EcB%X`3cD<.6$4]smD=ANj>(F+:+LXf"ffOA5#J:,b`#kOi[Z!2:K?7*q`V4J<9%JdnuC]dZj)&hoAm^4mXnJts[h6%c^g]S1u5"bXZpfp,8Z7FM?J8?TG-km?0S6MqBH+IZRi6]NK>%",/h_*aq+d&j1,k79P=MpE2e%FkHhqg=]ACS+qC%VP"L#1WS4u^DL';CJ>@+iD#Od<NQ0k')NWdgB$jrgB8u4G2NqlP-k10e3Q.Bi6*_#"TT5;P,h#V*SC+]NFiN"%AXfZ`gsHa_TTa4(DhC4jchVdAQoJKS`)<7,gf2hhoc]&8*+Bb:>Xp#<`kL59_Pt4SjH)s%036-FC)*'/>im-!`Inc["uKb<chIWg%Q;0SR@(SZ9BmKV7WppTPd`,Y@VRC<>gEc;pUe;uc:2'p/%Wba]rr>MEKfY@n+N<q0Fa`ucE7]P8i%OSJl0:!UW_\h.n5%%.p[H#V%\#ai5"t(!<$iQP6GM2@jEbGAWQ0U/nq=qi2!dLQ:T.LVi3Z%ZE&:goX1sCB5/*6?@<$7j"q&6?j[4fhFO"BI0pp>p<"E#nkjcIKV%CkUCuYp8_(I?^2IX*ZuDi%;R/CM`]S8,CcN@&<<FJcu@9LYSFR/0]\;a1*P$GmA,tqn.]ld(t%B6jLah#NCN<!4UH9HB]kE^)e!\%MTKI?BER[&\:Rk-''hA/32dF5kUaOWC&j*HfR!-,o3eX-HiDe`<JpQT!1O=-4$rQlE&<inN%j^og=]'rI1;I(%2H+8FqKo>GDXKU%e%$CFT.>b#>8igm!sX2cP[$n^ZU[hMP)1fJCVt4Mk.>Z3dNjT(!.!.q@B/aPLDU/L#_Z'm,0srs+"GZ7ZsZ!b3Ci16,OpMY31Y$X%*_([t]S89VQV&;!*$+*Xp<1YgfVI+-=E7c7ck4AW1b>fmN;PrLX-)^?lh1(rG.mV<FoiR4b-/;Gg(Q]5aVBl\l";2&R5B/re3th\%;\*)B"n\Q@FYObpA,Zk19YH>;Psecb+Gu9^@G;SN9VaX0ppg_gPFBA^R9\t0<c!YgjPYn+P8Idk5TRLh5)qI=b;sCBc_T5k<k28]%(-X/U%'?(8j6R3.mnuf8BL2!bes9Ikd`F[E!R&AqDQo8=TuNNnHEQkh$]CEXMcXR92=/W^$Mg("8CMAqAf:P'BQUgg$R9PK6/>#j%R^].AnW5<W/&N'A.]6<3Mm9&%%m?$8(!_O&nVt#QojI^diuplUKnAW'b-ke%2Mr@3++tL:p(Nke5jTP4UT?>.ohK<&JnDJ\=08=5%GO^]en*)>-<b\ZHdQZ=Ui8(j-R^#i$"`[]WDX"ooOS4:Cl@to0lrm'`5:n<SLTDf`V5>)J[*&'`_[5NE>(m.QM];lefK.UK][]sj%=As,S=OXL8L@U/8dQW]=VJ@W?8JI@Z;lGRF9ro]q!Fo<NKRnb6iXQ&LUkTKkScS01\7o.Ec8JZ'9qLN:E]9!Taa2X%P3euUmZ3U\%1ihH$Q-sbd6Lk*7\o>".d)&I)0S9f8d_hWpR*adVS_&Xb,=N:Fg>Y0t!Bo+6R_`1^_Lr&0q1GfnLpq#r'f1-lOiW4J\3A4biA)71%<2n!KSNY5K#u1(Kj-a-fN09'9nc!qGpkj[L6^'+0qETFrG+@dl&d+ZIp7/)7_<Rm.Vo("(9;gTkd3>)OYL)\t@US:SFZZ$_^>=31%oduO/hLf.5s-6SAk&WU!LtbLW)g?Hf9t?f_1X&KV7FiR64oGu\fXNr6T.,X[,&H[PXJ?PX3j#FJ;,p%Ls$"g*;&cKX\;6c6cgkQL%22(m"gO^?nH,*4*\4GX_;l(^%=kqGOQD?a.n0"`)>'WZDfYJAYP&fB'gp1r3]a'5P1dlC[DBHRBYif,@Ud&&,3NouOU^QdXZuD&6%kQ\W/Q\+P*_]-K&AG(s8]eMG2..-4(>+ura&6`BRChG\'+QV_l>+usL3Ahu?d7)oSj3];7O=F6bM5uL7Lh3d(+?9<gbN!p<"l\:0%UHG\T?]b4JZJc75Wp5e&SXu<<io?Df<N2(%/dhp#a=d9$FI_o+P8)0IEsYuF_dq4FphI;B>2QRLkS9iB:;$@UQJMT&3C1f30@:nH%V#Q?sYE5BC`;'kJ5fg!5BG#kJi7TcjLd=N$`Vt>2DijqrZ?h5)c!FWK$>&>;)KmbkC'4B)H#CJS6r3:"b&^AK++-_M^TNr&ZU!4'%Mae^6ZC/T5h$2+f?&p>DR$?&#N-=gfRb>Y<J(q>q:A\lp6hLleK)m>%_l"d94UoSLp%kI[1'KAYTE.)ID>hc]BsRsn4"0AEoB2H`%k<BHiSt5i._[XRLs$7Q-DI7$<r^6J5:GsgO$RQYH')^2Gr5ZMmXFJ!l49+:6`Pj-FpGkJ<\be5NAXW^4clKC%*<(TbjelG&%0".R%HC+@EB$5[;?W!?r`=l1R@2AhU>cTpUT="4q'7Xin%n7,p*,)sdBbh2sq9QVT-=3o3-i[?7]9oo#>*SF05aH0V9?7XKEs'fL-!Nmd%FI%%nr'+8Thh)jR/NsD0cnaBAg7.<lRkKp`m'T!5aUb..Js;2>EC(X'ZC.'6ne'H/LgteR;44p:rm+W8DP!2(e-OkYpIccre8(Ku%WN&8\2]5'GT;:`N:#cbcJsA7-L7Rrk-rItcW*RV#gdJbI"g2q!_)/_DP.RY\&so)@-]</7b?nV#l>!`Zfcs)1jKH8nI7VY>O@6`d%^CQD'0maUab2l!cTq#VBS6\>6A*V%p@uXF`)4(ldaKDd4bAm@AQ!+D3)iM:TA4Mt^+>bmp/2"ue/fuA4"&cr@K63#jLnA6$pA522%AS.k0kS`/?lLG64g_%Yd_F*A(lr5%M:`;7Bp!&WDo@NKejDB>cUQJ_M#>Lh8RmHhk3T+0J^edhPL^mqiRmU);krl]B0OagRh@@Z4%U':C<bTKs!D\?u0Q]ri9&G8)d!at.O7-g=>.rTF1A#]gGf$JSiU_k-&/j)QB`ku",^e&gl5O7k+)n0<?#sp+D:dY:eEfA8=8#R\-%jYW+oI6FXQe79eNZrO&+O4H6sGkJW)D_/>F4BZTm[8%6Bq/djWK_)*WJo,&`f+oS1"@Dt2lhJeWe_7;>4eJo&)j[?LH"aKlf4"j^%2C/YE45/#I=Pp_[l[*-W29<qm;di=UB[Jj*^<FrMG#sls@+"Wd2")/-k4BoM[uW/Bk!u?UVEknNh1sLK%:d1r*il$jqVj_c*>1"P%=(_V;mgVjXO'op^o^q8iQj?i-"l"mNEuP&iX"uSJoM,7hNN`!Y3W9g3a`TGt`7Lu_*'Y?APfRp;1abUSnPS+IT>?,.dYkC7[b+!e%Yu)1GCs'6KDP#o6-Q9e6U4$72LZ%mo$ZkutNC>PUJ)'bZ@lD$545!`@]^iS<LjM.dY^7aKGsF5<iLi4-R&PIQcM!XKa&@sBHZ.@0%:l:mAYXV%?55B8\mS7o-r)m6qOum:**8Xej).^[i[<0]tCm&nC.]NB("bt_RpUdgTWB"eMmSX`7HCeL\qfA8a$m2RF</)nC<!`_[%.0uXK/t?O!D`;"W/J/S9]XJi]:4_6Q[n'XM'>HmuL6WXGV?\^]maPS.@5V3'&Ea*Ke:T?u;V'6USMWp/80b<*\IKt/b-bD"R32iN%nO)kS%[-,Roa)rl*d'3:CeO&I-P`KJ>h`a+0%MEm&[Rj=):L=0>&Kp#jPaGQWt8U3-hJaQa<gP3Z*TDj<qbq0b(R%uPs.6%:BMd8%4T7"$pg)_c`cm/cXB/NB^HSI=e>6,AB9i*Kj-m0/3nE`,WL/]QM-I"+/af<mq!.Lbr"lY(aIe7A>di:cc";gt9I8l*$^+-%XO$O`%Ae0OPR^D?r&]fBR7>^Fo`%SFWB/0e$MpbHm^0T2#(hY87gj:V!E]Xt&(3`E:ZFYL:l)j#3`tpM.-hi&>l1GoS/Pb"`MhBDV.,e\3%VS5CQAt+`MC,b9X>^_o/`\i$B2q?G>:6T/#==Qrg-$o*Z+tXI[g"KQI2[aA#\jWQVO93-EOg?l?>d)D1PUqP6?/k`bP8f>D=BnkC%dNK7mc/$9c1_5M3:^BPNe)$s*93q"BjroIRL@64RbWH;'\+)`;(t"nVkC@VcCV7$/XAQJ%H8OBaf?k"c&KOS1-79gNAj%Ff*DM_a%C/h:=C0+#!:#3kh\)d$>`sIFlSC46ZY1UnrcZlVHj3L/P?:=GTDl`FE#^Ih$52DaVH7`==C[5Xh;LN@6UJ\Z\ERU`roVa`XPB\V0%Zm;5X`5IDcNQ+N;Qh!W<0l^BePk9I)P3QlS\<#/E*j1Ft.pWP&/kH8F_V.$g;VdOdO:0IaJ69XV0Xq)`W$Z;DM&n!g#5p-T&)BR5%pa2:d^_YjTpj03*&YnTr^'9nJHQ*;m8Mh-\C]QlgZ@nL&7mp;"i!rq[o'J_?_m4nPfNQ&-&SNaKOVGd_`d>i>96RSr%T*A#@_4k>%J7nfu1d=IKX4C^iHc8WO#7h_cXh,bSe@?b<V$!FRa2Q5?_Y.0:BB`q$l!Ug`>&f,4K>OPC!qdt5jjf(>?^H/iL&3=NR,B'Ui>OLn%q)P4D:@DdOl?8"RJA8LhVjQq2&m60>Ij?g]5H7,CHb8&o]h5U,0GaOb%8AahQ,Z3d;u>(_Ao-j5iMEn>4AB#9!a-;:qeMiY.@.CF%-0_'sf#Um*\Ak,S^1dUI?q3Z8_,aA[g*4p@]\YAd=Q"mp7pgRJ3(9ddF7C"!Ut&GtYHba@6DoDEdB-g4dJ%;i<4^lqn=n#7;)!PC%JjnS"hfha'FtBpl_WD0B)KN#UD"ipCJBt`:Hk<@sW\iGN$`\:i'Y:7`?DC\-jj-f1$[RQU"h'a^,7Lf]3ZahmDtb@Ii7I#Hn3QNS%el3+ur%#h&CY-2!];.D)^rkj0;\?Mcr$Tl;bSC,fhW9^gces:K2b%GG3I^f=p#LfFMKpaNs1dnX+\&NNcc7f#pp'Ae//)Cj?!/M#%7tGCR<&,Pr,YT_>]B'aQ=cXJ7CsLW8@<i2,iO+1VrAesMKLY6t`Il8-,C?fW)6leJ]e_2IcY_ae)W@>%p<+_Xijgh4=<Z)VjNE4%%1@pmai]PKL?#?fd$_"-'"LV?K5-_t@EmbUkn2FNR-4oP0<Z1M)o2p7I/&r$m-:rI%lH1uhZQopW[j\FUh7R'ZTn)g"1\grDPh.`/%Kf=u/iFI6ZRQtPC!VI5">?HAl'H4#rX"?;Z`ZpD:lL"$:60%iSZNJ5?c8L%kmuij!UeiB$T]815e^?Z$2)mh.(N!A70'm>KgsYP*%bbUQt:r8*!`@)g4;NV/R=!N,f=@/.)plSg'F>]eBbYs%J1;BkEY*`]5Z-rSgWSb].=CondN.u?CONb$k',,#%qW9`[4Y`)l^$sqD%)l)3n$+mDue&uk5(cHgCZD;K8)IdYHqoLaWRe$>+"dIV,'<==NPk`#(!a\gZ+;OZ+VDV.OX/Q[JA!mA?1d/':<+p?M7UUR;<1rRJ%D+2]!f-gSPZ#g*aqrbMIcb*8.rAc35\?M<kI"Zh5RSZk%jq($O[?c-p-ebS3!5#0hZ1$Gn7E#Es_=61CgCH59%!\n1jg/*a3F'O1%>bB^,Lt,rh;@Z?\\bd>"Sgg"F)UDd^.[]nHEQD"n'Qcu0"gb'_2kMu&_m?.h'Aq1fbc\<kL3++^bSe*GIiC2P7_E]kRc0\THeN7F%m]j'fkS9mJ,AQsl-%kYL2&npq9(88%UJReIYX`#rDWL#;1s>j"dqHtZYfOM&KX%\TOK=5@A]2`E@%n;FabRE?(+ZZ2$S:GF;;nHF%/+"ZM;?N?:2Cl?;ES-WWe0e6pRcIG!60+>XM8<B`@ZN@iYUM;?gH3JDk9/TUB\0"UXPap1.lc87]1""hXH@Hf&7E9\(@5\M#WjX'%,<R[d<![c5)3:mM?1f(cG/75aZl6]o0?&kurm]ChOtmK`'SJ.R5`?b'K(OYunVFG7)t,Ln-';OB@AN-_K"^Y_h%2K_T;07>(CseC%a8CY@)0^kc0TSj[f6j:*W"IF/qW:o[+DuRWECra,?KSMZ'`[<El];$r,^b\Uli,EBUdeH:nc$[j%Z:X#"pTNlA9%#a`/h/$35BW9%F&sPu^q7q\;Y=!1?\\3XpLEhGj#7kGZu72mXHBTk0])6r,lQ/.[Z9D7K<5o,Hsk#3q3;D9HT%&?WL^IO`rAV!eMb_<]k.Wc4*;>q%\@jf;SP_KI0I8JRe"E$)(Os=pG05*=FHkXaC)<'f'ciFCha(;T"84rWN#+<nX]W4_oRu%1Si@?X"L>in2#%>t_L.T-ZS&Xhd)+#2%TDfi[4N">l4h@FIF>EuU*;rI>cbsJtGoYi/XHI+g$oE5$9M0CH*`feJ>XsN0h46"3C;>(C1hc5,XfE:KI4o6O]Fp+Eqg0%]>l]=:%r?,+0dU?\,8`Fg>RFDF[YL5MhmMNRlaA%?Bc(&;`b!m\%_0U(PPAsR*j3#>"f#f"^&a$>n,.^(d5orWT;i>K\5<t6(ku[n?f1XXX%5YKKK#*30^!i<#d!@-Dn]5I\O-]#YKrRXiQIk*0(/=CZ/h#3CZgo4XF<@9Kb>E*hIE&([Z_E$F6)!@#2+Ae7qOlNIaJ!U3s8^`(L%<)lMeZVpd(lJVQsh8eBm_u7KrYBXG2OK*J8q<2D\gA8=k41tI:YK#nqp[d4af<<&p<:tIKgWa:JGIOc>]3fQHcXWJbN6,PB,GTlt%8>H)$J+E!)cK`6s:#h:V>-`l=D7gn'UFk4$>rd(t$t8M[#TJj)%Yd';ERLL"p#hu:'/NeO7#-T$2XWbDhp'eKs+J$U>FZQ+lbiE3%grtu9h*E@[H!a6fWb4KS(TsRJUt6H1q\8<]^Zi2';h,R^]ZSiP0N-\#A(0(?lk8'']ms[c$H=<U$:;3V,\n4j[u2>m0`l-B!Ekt$%oR6DM0o+=W<#Ul%5:J)(YG;iICf+n+KIur9fR`:MJ3$`giZHY`K&2!NeBX)sr1e/Ppd"$GO=KY>L8D[Z%'Xj_QoK0!*nU#?nKVI[%=s6$MjaPTW%+0J#epDm7=PoT6`>JK07$7VQ76EV.*ZEFN_V1tLWfuOp$1,LU%e`f!GfS2m?@uUGaKSNRg^HZP/g-!8GEpg'bTJt6%-QE1Ac2_?tSR@F>8Gi0aYmbq"<qoQO7We&LlZkndjYKoDWGL?12S,*S+M1@G6^`#i6Rlq<o:tils/oD5jLe(M>JCclCV30)C7K;#%nPP1+rHK_F"*6SfR<TTV.]%MoJ[69PTGG_"StsI>ltE"$aG:.#PRDp\VV#6?N?nMPV*Ss._d*?d9N9u'bFj1#.\8'?47B$R?HBYK%Sk4ZFm&dtG'UqC+$&lmZS[qL?:&Os,c^rDFI#N=uB4^n%b-U`..SeaG>^ZNF+?<)*#do'.]O>EmbuKoe2,QPi'bY/f#@T(P8rA<^%JXNFZG2P(ESQCt3<)3R@m1#I1f'YtO5EJp'="tL_Npn,cO;RT6"2B[/J\:Q*9b]4!DGc5<-rkY3.hk"N&uY;gqJLl98==J$4Jf6r%eYU9/nPu%?3`Bo3)VnufBLsmtrDkWFo?gd0(`JXl+"o`Y9k?T;@l3D+eg!mPP3Y^J;;A9a;FX%\JJ!CE1^UiPi6*2s;4NdMMWN_M%)W*o;kaohYjrs_iNio*N=P:M,#4*F_JGrJ(dH]mE7dY]3gs@j2V"*giEaNPspZMT6^NtBULi:`RSb8"f<RSW@\@fiEJG?:!;$0?b%*IJC9<lYW7+u#2W=ot^`s*dHao7O=dq@IPm?-3)?TjmL0k^96&nU8*IOLmeB#`mRIc@Ko2g[Kca1oV\#(-LS%*P%h8$SFVDgjD:N%!?T/iLc2S35M5mXZn!8Rg<&D\C69Rj+$"n1jN?KpX?Y9f8X%)E"W`,p-PA%mrY^JY6742$<,M(1<:Jj*U/K!&=4j=XHTQJk=86M=%]Fu(s6U;h/*IXkrNeE"#+<aWIRp9tZYf@H<K_2m:JkH[Zb5K&7JhmK4YSUQ*L]l6$B-?01\8.a&*W;1C"q#%JLbL9NJ5gB\8)aOU%8`TXUK<M7$7DVL]FQ?1%LA._=c0rYrcp0oOrAe'5OYCmNKD+i9Nl?&I+U(3hL,aTcKGK]i8=N#&<Hq`ceVF#%oNYXV(k4/]V:pF6%oijH>Bai;E4O>p(948)69p;$\G!gLC-)hKo\Y\=EU2.UWjnekTBo(C!lnqU=Z<HbHX8#fU6_$=Z6V*c=dp)?hVrp,>SdG]U[4XKF%()e,S01]Tf?P]ND]<;Cin1V:*N?,bb9Ok!(^0'jr!94T\``u'qb\\;K4epGf`h'm\4,q]>iOVpGfjVa?Lp91iLJl>W`8/ICVfDS-%dm?sF6\B$G,(8PNU6<5oksN+20=["&T\[imqo/Fj^/sH%K<?Sc<fZVB;u&O7L'VZ:s8=OP@6A_!!J3^__o2?<I??CKC9;t%,UsGK%[2?@m^O4::Ffoaur;J;3ahFo;CPPpd.`]olOEDuM[/DP%HN["0B'oDa>3?i/V\sP\:4gMJSq!3HF>h'f*H]VYD&Y?K>P*uu.rc=R%6B'`HP*j*Xr=;grdX^QF(%Z2n/EWtj.79"nO&-(N<Uc4ZSqp8p.=?+)I9GMNoE@aU`Qq6%-Y$aNQZaZ%37.kE\_T$2;4"(k0>RG>%=45rhcn>r?I]`=+6JPh?k@RPO&PndcAN/g"\D?s$AVT$6T;:m1RQEJgOAMXkqUuV\F\%9fbD.b#af.\ZOqI]Ie0QI[,Ha9.R/Y@B%bK-=Phe[(hjd[8U;oJ:m&2Y]%j/3,20l(G?,9BE7&J!Fc^KU*.H<>SUTcV1c;B&%Xf`T[in3MOm;g%ZB(=.3[NsdQsl;8NC,cUMH%lT<IcDH;ds7nrXLOPhZ&`^HCpaA;/9a7gJ:/u)1nVkYNWfueV_?:'/08ViDXV]/(7Q"/4`qfJIm/toV1WR:.ZM`HI/F!)U)5'crq%S`()0K6>ufrlP,jaUJm]_gK"_FG'dRYf<*!6B$]EFQ1=-`A/qV^"]sHcO-YDrgkCl-Zo!NdEBgBeVsPB')O!>!@[8#cj:03"JaTF%a@q3gl_1TR!nW>dk`LfDVO'%ZOA&F@^8*irAFWsXXY%"gJW;\OArg'X+D6`ZTDr1(^qIU_UT<P#7!pm"KL,\7IJ<Do!Q*[:<UK5R%iMD%q?[!Rmq%s"%"TQAh[JV[\ao,*m)>GM1d/H!9-K"bJ7t1,<!hlYop#E+CE;T=tqJu2t?bZpR)Xd6Y\rC'N?hCs3nD2>r@9AM2%"lG&q,5>2]"Y74m8AD1os5AG1U>PIt"8I@-+L*d(r4h0VD><'%5l^@IQ@A6!)I5nK-MTM)J[CliC3';T-CpB$3VVi"ONo1oMPBBt%It?JX'n3E8:!Lc$N2!1DhhrNZUniakE9U^Br'a)uanS5(b@gG96S>!(X1;TNJ=9922+81uqb>u4&CH"0kuS4!lgWF72G/G1H+rUY%9^_nDrr2f\p#Eg^n!eknqU\JmCj-N5rX)/E%8SB)4KSgM@Ot)GCACPp/;[cAXWo8"s"u$X6VL$+^8<,Hr17gP)<:NYP5LM7b/m5o%!D0Su>"M9jRF!4,;9+mbS%]I\N9CLFb"lJ=Q6f%IP1,;RTQH85<Q5ga</KN)O"+X-5H%J0'NJkhRAr(i.HM6U;[d,)Pl<NB:Vul(%UIcQR&!kX.MPY,1r^`7?YbXgoBbQdl`.TGsCH@d"n+jtd0qKI<AUY=dq0Z([_NHBQBSf+#=OOrr?qL-bIk9jEq8#u&-aBHq3G2O<%8lf,)&2TXEY8LFT^?6S2qKRInV#;^-1-%j.'(dL\d?4j0MsOcjV3X]QWZlg`!QH>HjK(Qkn\7h7o>nJt:EV*W8S7(sr%">0&p(>]%r*1sjGm6gTOq'=q,_5$nPQ'b:+Y*L*Lm"TN;Te(+[[>3JPF<gHe'A(d`"WF`QngpJ@>b*\I$g(H6ku&pTUaqAD,@'ZNi.d.ag1s[%:o+7'<!f4C:o43fS>c8rKj9c38K%?#*NDA'aCutpEJTE!"r$L%6fp]Kqs-8IoHVL<mS/o9G">MrCbi,[9j8V`TLfA,GS3:5+A2\*%3AL1_]""2(.T4:1cV8/jPUJ=-!)mb:!Q>$+hpb2?OAE&q#3mR^Ihn?N.VZXWoVSU/a,1B;B"'DB8I8A@)R^HDMi[Q1LsE)4eRU]O%F:MrUcXq4qH=VO(7j+9IQW]OJMR,RL^]Uu,2a.7-W&Q.NeJs?X.""aN]LF(BY<\pNZ%J..UesZP6^J-^>Um:+!23.'73<mQ-3o&j%mj.ttjKO7VS0if+-VR;8,<@h][S"9/8SmrS*sWq<:Qsb$",'DZO<!b-J:RL!;$\CaJ>a@eW%.g><Wg8A,d!58!@4ik,c_HW:t5[k%N4AqA:7g"V;5d:q#htZBZH9EmK)d'YBD"F'/Y_.DZaj'o\#.KBAokj5;QKtR3cmaqSQjRjQ!n`LqYDsH&d!`i-:9-s!IXGXqkG]=%^D4U5B4n%qD'YIsQOJdRX:RF<:1(:r-dV$-ed0eMJDhiqjp!#>VjV%9kO]MP(tfgh]KS8!;Lg03I2\S)ccA#BUHQpNcdT3&)CJLR%kEH+"1r2nXmf4JPmQBA.5Ub1Fq&[oG7cr"flMqJWGFk!;5Ub1F3T7bZOf\UI3C<s8.+RJUV?"I\k7CXcS/iY9.+RJQIB%D[]VKI&%9dU)F].j:NU,;tmg^%>e8CP*M_De'[<!s8OLCB_8YO`EXn@@4LiJl;7KO#/%?Z^=3;L"W!)_rcm]K:ogKWlJ1Ci3B_T10+l+T//p%9!ikH?VQR*/aN2T;5-Jb>>:,RD?0Im*0R4!CP)&tq(^t'ak<g.r<e0RF9.%iY-V.s'*HU0!W\'8YOHDgL<83X56cYb\O?dt>(A<H%J-1tF'n0-W)4R+X)ucX9+`)1R^V$RBc;##qKPF3m4unCoouS*&!CEa9"Q>P#Q333g>9HFDL/P,ZTTcE;\h]4\<DEYsTk%q(Z>=R3%cm#TrB7s)Zf"[J_mM5giAM2tm/P)Y$/-:XW1I:e^3$cO8=dPBRiH+USaQ[be8=ksL#[rp<SEBLd),UG\cOe)=\j`4BjYDG_oF0+Q%dPM>&eec-C)*qd:BhlqZ+nV;e#D<Z""9G;PW_.=V7hDM2'8S8,<u5C=AV??2-\<I5eg=4:$Bh1M<;Dj/q@WoB?UC3"3R()6Lm;m4%UG"n5nKeG`9&431=9rAO@!<"W&:=og.*[j=j_2a#CX>A9^'9R,7Uu(\2@`p>f:X4Z`n-kNEg3:S`X1e[&kjFZ";?ShFiHC@-BcUr%\c`\&'".h(-,'S4oDg%VQ-iB(QIn>ZJbTipe!"@2d<7uD<LNYLboj_'*MbCC2M'L!pn>if^'9%b!6R*.nKX8uI1?*nA5uuh!7D^i%pj'tqI1676XashZJ7KBFKJ.luWgqJ'+Fkk[lfp-TkRt2@8T7OD!`@r8J[/2c\qVb;-Y-@i`,,SG2$b<s=]seOF,[V'+MJ$\P[Q*(%bQ0t^\?cBnjRkA9TJTlP:,I6E%3207qAM=R.*PZ4l]qO&p_l,K-k]m>%Zr2[BD&#)#[`/`i_'hJH-HCgoHc1C"@7DAS7VbcA'!XT%U8WGK!eda#Y:<ZZatdLIp'r4Z"s(Vc\SfP4Lf1\g7+\*r,bctqDLrGZ2F6O>FO4q17%qVNcNKJ6.#8P"P%>nW!qCDQW_o-`K4:<[%6=V9Z!jRH!3M93\`XLg!d)dH/00oS8MUr8_aQZ@E6$[kbS?Do`AI.?j+$eL.#ebAL:*Q^V-skA@5(NDHp`ZZ#^'5T'1Q",BkSeL<%!NAc(lNSFt#f-l[0&1T=%mb:D3W4[5Lf/Uq8%Zot]*Um)bljaTT@;+Q<V[OmhGn1UQlqXOFh8;QHjQ<eX5)bJ5T+tV*:IW3?\4;^%DY<)_X/T_,)?^=QK)j&/;]rdYI\g%=?\8@$-rV8&#5ngKHjp-FeZ9=nKY2b^<A*&1:nA8ChB7P8>Cm/LQXG?l&gM;MTLKJqK*fEH%^hF!<PdgmYXKOniV6q``-18E@ChZ=FK)eg&8i^Hk+9mPhMj[W<2/o9]F+[#-]-3!65lgF4E!f0XS&b`lCZ'u?:@g=KO;p\)5Nd,X%?NOm'l&<=Z!MhG\E=SVdl:V[RA-o4'o:lL,+`@GBgSWgt'8Qs>$]InA_DiK01D*Dj3ArIQnJ2rbEak\\%-<GE#dBh.Ki*%>K(RO9%)bWcoh<$/S&VGilR5lQ*`fDbt)+tQL)8>/_>B31gQGUru,O7u75cQ^GdT7X.oTepPc7g?:"fAIkJE\T3@E_YA$o`@<)3lem"Cb$O%I4Y`J.ooc@0?"'(9/47>NPYDCAhqA(fU7;$s4+@LjI*gY,5D7PW)qFL+qg9Y3"!"3)?gre6pY=JUF'cXOV:DXj"tJ%Z0NS!dO(aR%9B!`6UTrPslXZ:&Z$-F/9OA*m-(,af*O7s:H"/.*MJ)M"8d&6cRtgI0E)9Tp9@9;(#YQZV`W^Qei_*-j,\L]&'GHG]%c./<0X_\O%",/G?'EP#6bFq-G+@oiG7r_Qa<[,?3mEe""E`P%u_Kg<*2-(p:f^05XBmhH.MJ(CsmW:r7K!HA?S8Dof`_(>TL(g0X,(d$-`uVpY%fo30K*L>eg5V^P8X"T1Ml"npQM?(gM<g^mnU?ZqbX7<$R@-e@/YT.#-C62&J/O^0U78T:u9.,T:?\nd+)_9;bJ;8iH@JWSU9TtF#%E)P(/IL#Kf?A.jFE4ftLYnW4.:$-Z8n7QGj?]*gVdU^'+!N,?J@"PY[kRXa#A!CVXd5taG[5=.%`UIYW._c+@cUq.3,tJtW8K1=]%(ILje99@^XL6a``_?jOAlV#Vk)0Q6Y+FPQ+DeU)!,m#X$=^bHC-2RFJNKs"VU@H#r.;^&nVCtA&1X0#/f4m.%?\5X[n=%@`@^r<m%?(!C_fHi4V:R\F[AH!ZVDiS[-Xt,'_5]c_/XA&?[jiREnZd>2VX2@Y"K=ju\<MACtYh=OL3bgEX9I/'B"*+ps%7rVJMn-+`6sC0[%JK.8IOX(dB'6osa^U,sYf8E@bBFk@-\_bs@EZD1tP/u7\BM/aTbc>+^aO>-\\lTNT3YlRh_<G8@HXQ&=e.<pg-jh8<fE6/*X<pg(%BDh4JU&O4FUO_"@-TYN3V1jG?0e=.S%&tAsh&&g@H.RRo]#ub\&\>NVJXnOgHYH"6VS8oQiU<>i)2SPp86W8:V^?Ur@k_/7BU"1b%IpljN#/<&SL2Q@9G(d$bCL^l<cG#n^7CVe]4$qQh'@N>B`Sg,RU0pgk.oD6@4%"5XrCRb4_1j,,46/$!0t+S-8<RX0aVNKcSY=6[%Y)m185WA%c='(G'?J@ibZIiSV]T61!ej>\`EPn-9nP<Ra]Wqcd7g4O(\fK)NTB@,B$UZ,em`Klfkj@]N4X<_qL*?*0=?Cu<q(F<f%OTi4l7,^qZ"n._a[[0CuB%`*:E29WUpQ.?7>EWq/Ce94QYeu\%F3@o^b4A.:UJVZ!h+aQZQUABZ</fX)Y^]M+'8(LBG8%Wr?OeYU%@G%bG0I6X2A!(pn_947`ThuN!6'OA'b&b8--NHD_@7Rt)P->q)l"f814gYA4m"h"Km@cs+&<G4+MbUusZohbf]NkUSQaf]r8\1^M%*V"<4'5hgY&D$qSL41_TRYH&\m"$<$1IU1>G=Wn"&DN%)5js,HQ:1!4Z*5J0W<$,R"&j"p7%*$RL;Z0mG/kAciX.d,V+8&.YTmJG%%>P^GJ4fjg65&GFPS^g=Qcf6Q@Lja<!%A&"itD+7,?g*S\RW)o$1*J7Nl=AD/[-NmKd9XQbi\lCB!0[+BX%_!/>#<,M,K^ho"Y2;%:NA1KMaCdlU"t]JB_Z<#s#m%kaqrI]*t9G:*oKEOU0[R%YO[Hl74J(If*?[o*9.&kMFJ+g7&Je";2ThAKHs!]$o=VKq7PYmre5X%%0#EVs<BgP.7&cX1'cWo=8%l,OMY,;S]3UOcHG^nR_ET#:fF`hHSPjF9/%ih@g2CI87_'$Y6qObt1Q%E"Gp*Nu'8I?t84aQOm0`Fh%s8EM&,ha!0MoBfJs%)'E+:1E?J%lY[,hh&l7>e-F8A`/Q.Bk%SZr@>:nLp,,M&ZJX6562;Ck>'M-krjX'W@*KYR(po6t)>Kcsl62%&XIAMQ`95(*Dr\_/addNqQdn6>\J5OZD\=g#54b0/m)Qj7r_\k)hpbCl7-e].n_C-6^"QkLE07#(+B+!L%0^li?p7b,nDRQ@638=%h+^_6>^'r0hB5,B$9KH\mO%_(@A#(i`Kcmr<7hfUOa(gZ=1YXINM8\?e4NRdEVPCV.h8d.lDq,)Ni5j.'n5/bS@_,r8R?CjT=@L#%<d96I:")JAU.C'j\AVBnW=J1\JL^8n_N(S#h^WM`R21t4M,YtkLe<HMU"qk.V9<UuK.Gb#LD6IR7od'OX,O(dGArh-Wj!_<#'Y$_%pYjIcPcb<"6_[1keaNcEH3Quo2n2IM2:rL@L/`da\FS?[)XN80`R&!_<$hnkg>)j2[RpopU2&/c\AVD7f`lA6VM-;$<#TXo<MiB@%2u&FL>Mt#2$hZ_K>0+00#.WF<V;KiP+Fb:<M7W@AE4=#t&5[,<_2uaFfGTM]U+l";>$)E*F>npg9nSM:4d#r&7$I1Un.D:\YG=TI%qbI[fTLCU5cU>?(pk[\N7-[)8M/jBLqYPc/'VbN,-G]&pE#K.AG19.^/I[KBBGP<+B:R%[coMSlZYWZV6*'*Sg'H.'<OEf=80U^,%j(d2A699M4m?fm;\<'*j:<1oQck].q#^s:>2M+mY.)0V-'_mG&;\KZn`1Uc9d-e>U;CT:N%/qdp&PXTILO]*GDS=Pn>tO8R/0.2J%PNM+K&3"<p%L;N,c11+.6_),#6+Y7S8b;Qt5q$]>&5<@-&+=J$^!pIVS8D(gMBt2,)P"]^B]NPdA6LOp58luocJ^*sWGbBqH/hZO%-3\s=\B0ouYTK<UikV+fd8Tb>]"WbI$8Q!R1u5YGI)AZ>CkQa%KYo<3+j/q@%lf?j5.f9$i#?PQdktMrS-XD"^PnE4'D]Y"(iTrY%LL1GTiU!l&1a=!XR<6F3W9#Z7[R6C@1#N'rnSuVNgYm)Jn<_"8kXE6#*oJYt@YF958\Z"lMgcC'^muXd6OQJCUr1`b;n!/pJ:#\f%^i\cK[N4(-q^3f<5J;[468i43*#a8A/oFruBtsc)WIY6^LIA^H^RqQ.Hk#N$;^&YA]7Mm;WYs+>/l0iIoCpTI80Pt",$2&Vhf"hs%RIL/uh5D[%L.o30s$Z`OhAKomf?IpECcJd*dTuX=)u>'a$hZ_K>0&X?M;\2FguS=i#Z#\u4#d"hdEnfj'Gn;4#L!U3E2S?eO@#,L%+iZ[j88nh.V;DfI+k'mfB^8I(K/;m%Z8qk>]YU!MJf"qD6`8A"E!@D4[g8`O*0DO5-nq1-j5FC#0DOTT#^$;2\I&$L.lue#R;C"9%C4K_H%-DVq"_[=La^`.p)"bZeg'H-TTDj#Pa[:jfZ!]6oD<cg:gu,&9E!;m!:,%C8E7,KhBJ/)uL,T'`-[8Ss&f/C3hHt8R)mV:9%4MaBc`.Gr^[*]\-E'qp7"]+X7?=0oR7McS[Jd9Ws'oq5",od>JUHV,YMgsrt?17t-D7Kh6@E@c=i!DRNYkVFIJktr)XHOAW_iXV8%Kd1h9EJ;YV<,_[=Qjflp(@q\on56N"!0^hBa2Oe%Sm1[dO3Js_-Gt6'Zf:\%oIOO*)u,Z>#1F$FiKV=<O)<\/VAB2d(O2[D:t[N>%:2OfdfXSR74^.q+TZ"'OfF(X@j+\6BW8@=>)c#<b$UJ<`D`E;(XeM3tV$idO']E*0IZ+5*iPs2q[s,u0h_5qF[`sQ9GOdHCE;#k;%$8@"L0XYgWS@qjVjpmU6ORNok17Z5;p"#el`BSM=D3t_Zf)hS^-#GC^TPSk"%h1l-Rpg?\D;<O9m,]85hNO'&8RO>b=u>P+7k&-q%al'2UYSrPA(G34E9oT.C]lW1[oa/6=dXcU5GP-"r*`>PGOS5B%,R[lC"(1Lgjo>Y[(L']ULDH%hr7_"_f;k)1s8=V#s86Op!RGcU%>:PDKj]a^I%dEBg<S,h-B#DLR4JXK5,2GDe?@Etc6R(?OGVVH480]Ml586#n_FC^>DJeRpW<%Y;GJ+pP/ho9((Y?)h$UGV15-t@=%!p-m7<fq3;r+9+<6G**@mY5[!*5@9;5b]6'9(;_\U>H]7hc1sTCkc;DJrg+qhbu`k>Y%1W@!uH>W0+oih$n@acPWMqNo-&UZ:MU%%0Ysd'iV-?)K0ou;])E=36`/ZKZ)Ar5$`d]58K:nb\M!.)pK]nLlPjHRY9h'A,B)Am1+AOg^g+W.)GZk4R,[E)l[oau$FfKGFbr>:%c(G7Eou50mi=%oG/'!emYSho7"A"I$^W6CM?Zcl=[#ed35iD9?4K7WSVlqTI&+)upaWXp'CPr3u^2*<V^gbqQB+HS?i]UI;YSd)/%M1NWbC;7Rd*oHog[]gXX2YA"*[pRDUrE=cmGB:)+Qjg`]EKKU?1D8KV>PknF@Q6g:0f&tL[nODSi*-'Q<tYV!:iL>7-3=)YmTug-%@b?r1!IijgW$>CM_Sc8tXrn2F=2M#M)b#BXpLN@CLVdBMSLiaKh:e%r52Am?0fjTsV>DbD%1_@F<CnMV&cHANUq?!fi5]4Vm%KPp%Z*9"4!^+&`<q2l;+Ht95le1FbIV?Jr^NDp\(^n)^0@K:"5K-se!/GHhKd;R]EBW&;h(/E6R<BlJU_,"gebVfJ#[C^CJmk\KkGkoR%J,]oL5<i>ma3p^RZ>%Ch\KNHX]UK8&L6m,U$@GAf*u.1tT6G41=!\,aZ%f[Ub?Bcf%6&2Pe_=^.&^tMJHq;#,@ZM4"%<J5AB&_0T%5HRFGILRZCH&?3C5S+sN2=>;Bd6=bmk5E]s]1.Un/R@h)Xo))<"#M/l("3IT)Lm0?fnr[]CL*#h-Z*.NK:BG)oOmRN\jMR^"h#S1%NkDsN`H=_]%7paN\igUX:81+6DQi[<*El"NQr\'B84(Ac+k?B!.0NdaqEbZE\/%9bP9PZYV1ko<UW(Po@4E7#N,K(Gmn!bY\CX^T%,n`MtHXT"3fEs3X]SFG_hB3'LUD=ZSU85Ok]BfIHe@,oJkT`*p]CK=ciXTf.ao4+BiBbiM_H)okG%`%U'QlcQa&a1]Kp26V\FAZW%8AZ'l6Q8=c^t6\T8E?ut8YSXhfS9N`O8"tZK<KumpWtmA@4Rin(&Vc*GtTRrq[%;c_di+]fF#C#Q.W#ugq6'i6AH>>cu!l<GKD;_%j`I61C]DmWj*NFIfhT.pXq':4rm1W-2LPD::0Y+jkk[+4IdQe-n,MEJ8$p$\PWjO:d=Uks<W?+Amh<`GFZQXaM<scm4)YACHtl$f%?Q(CXSkrl%P]MelCmCV"_Oh2%IH!o5rI&BLPj\:BYto^*`pF0LIqbjMIc3^qPPq5GA*D<=/()Ca`OZN5r\VhTaDnUJ:J\M,PonW/%?6l1[%m^&tJFWU<pXcKC5i[3BM/=[5;inmO]9HnliGV`(ec'1s%beW115cS[:lU)3e8'[@PW/`pd\-OSoPkC)(pls3gZa-JA)6<P%&[hC^lV7cH(l!p_1fSjn@gf*B!bknhK,Z2nnX4LC_JKeVB=U6/[Nh)*j>-\JLM;e,^JO\u6cIYO^AC'5h-:EM)Y2^eBRb?'@qkXM%T!occlYf(2e:/MMka@s[5dWfHG6WqC4,E5/EcuHZT;WH*jJB5j,YM?SA]7+u[:fB>^:Y*\fWYqnHp0V8J7M<GZb;+6EN+(SrNBqj%T>!83mV8DsH>;AIL2#*<KtfHDHouh8%"V"j_tH+VKjn?L;3G0h"dCOG\r1\s`P`)mj&0lF;QAW@8eUEtQi+1D\^<'AC."PD`dRW)%3;8Gs]WM3r$cP@E3t@qY2CBG/nc[<Ar['_.^_>/]cn@K;lgUbG>64'KdXO8m>5CLt>l0)hf,Z/tr0D>5^WjMnI!7S"4alY!JVK18%-Q(4iLSHR3;;F3@E]^Z>:uVbFECAF)j)a@Ahkl-hm>erViuGOlR9ZXHo1[51T3W=*r3[]gB3XAbiZ(MPbT<R`D=^D7Ag$HP(o!>X%pSg5sXDSWK_2'5t9mY_&H;4;F13RJdqIa;&QiQa`jgmTZor?WbO$<Z2:p3Qf#AA-`!u0X9OOsSEm%P0Z.Ik'+"'W#pFs?l&\biPe%30DJm*]'i1.8]e46OfSWr0A08c9425\00HU#N[bbBf5kP1iE7@D-L<Hg!U4hXXnomr%9D&Mm1ol8oeG!VF$?.iAi66gEk9qI\6J]%"7psE_B0+!hbIMk^C*[#if\QGo,Q*2WqOuG5,Z?FIYujhhl#m)YZadMr2$*Q//`n0*!;Hc(,d)]54-`#cY)`+pKQg(]/-]Vk;JG`%\:OPtgdI#UONn`'Jfi`6QVqraS20`@Z>^ekR$:\8&Q+hV&Pu9WBlBNki!>Qg7(Zp^_kd4`fHs\3k1*,07T`E5"mS$_0:(.aA/Ap&%o4(%jD,_;"KL=q`NqMoeCh]G=OoJVoOo5+RdbWhT#<()/EWR^SSkrl%P]OKDN$E;3CI+>2OT$75EAte_h=#I0Tqe*UaeKfRAqqI)%@L/3>$r>$fi8O+[DO/8N.ZF)J(B$0(MQ7Xdp/QWtBa]I000memD63a?mMPX1]pnt!=A4p2`JLh8\u90K0.O]-:u^-85faP^Zt4B1%daQ"83)j>LN&qblkPUW/OKs"Z1gB-_Uc8J@SC-&;E<_k8(K76]]+"C#MgA4Ge"e>UV+EgpA8%hAAK:4lk8=3+'+=!e51'eqQX[RM%4kBV*U=\*0:uThE4>Sf('h_0:HGAP-_SN,X0e%8h5)7-<Km=%j(4kAd*Q1T15qT([H*;<t#EZ:(*l^$5j#^!fAmPQsWW+hPN@P;[%'rWreJMMuT<Z\8V;CnCGBU/AH&&^KEN/)KSgZs?T,t7lf587ea):Z1E_!cjf]5Y(tgP<-5`mXq%Ac'1HiT+CkCBREPWsbrW&HR2O%70"T^!HNAIGe[pI%sITBTBPo@q<d;RpYj5*D"jT"PDZ^8"1dYn,'(e9Igg%]".;-Ds1YY)T\*N`#DHH%=3QKVDi)p@(+?fQ&g`Qr%#,=0;'nB#Z*6j:t9gQOSd2dYdIc'F!?1k!rJLm=m5_9*Y/WdsihfR.gPG$ZJWpr]4m.5ZB7&1%d5'86,aasRGg3nmWJFC!nh$IJu%35&c[Te%Hf-jsGfPm(^P<#1Wg`t!dV<#3Xm2j=I_DCQ$\C?:q1&H&1>f.C`-jGmrY,EaGqO$MCgpmZ.D`=tl'qO?mYM(Ds!K!P>a%2e'&U._.9L]L`13Fd!5q>pT4ln[kI4/n-U!Lu;%>Pl)u#4OIC4f]_9+Ad<XVaH3?8-8JEY8<e26M]%cb)^rVl:c$n#%C`e+B8Ys8%XmJ&APE++Z-6d7!5nci86osL*XeBHaeeki>Y:b()fM83;I1IJQ[RlGjM[_(^h,31QD`Pj4Ii.<hdiYI7Sb.\O52d%$HqsOU1nX8m%:",a(LM8s2%hm!>et%GV)le[)VDE$4jq9'(nJATKW9D<mn?9ig8^NRMN&fei%M1/t1mYm*O(VH>YBH7OEfTrO="Jr_)s,1EN!\I&%&h*[STr+uVr"^.OjW*;tQd%l>"@)P1Fc#P<7VmbJX:YQ7g5q:J`:K&kq:M'?ABeVm*]hLkhPKiihhhfSjGT+SMhgsLn\RAj@rQGP%8[8W.O<*2h3JR]j\ltkr:cijq6_R+GaCA*K<@Ck?n9%5=a2.q0*,jW!n*]CtTQIftlu7na>^4TBdY>LuAZ1XD%oN.h_Hj5"d,XO`%NdUfgL&FJ51])$1T82NQr[k"#Q6T69<[1JF3I3VoF5U0!J&p$o+OXl]'.]q_G1buOb3GO\rL,2D:n]3D&AE!(@tu]T4$J9RE&k=]%Om&,l8&d]uhs36dVb%_&n$7!@^^^;QJO>dVa+.V,TX0UoR@6kEHTbl-m>!1ll`3Y(06<*ba]KIDm2ood_oi&"5W\'p"ei?Oic[iR%aO=WA.Xq<ef9aON3'iH@ZpG^FrTG4&^Ap:+aFfhE"H&[?-fUJpZ?&ikX>5<:PlW^^^mSOCcO4i\^MtiQYUXNEUmO[ER+$%RM`]C-%;T>uW3tkK`_%L<C=JEa=naI)[4P?QLJMLb1iTS']Ge\0*Qd^RQe=aM*G\Hkj*8,s<P]Od\@1,8<:pt)1F)](6*FZ(6\fUP\_cf<B%l);lr5VG.4-'!OK*2BNSntlYL+*$K)\2XGt@\0>H_PudW$)!<q!7(PhqY:;8`4#8&&DN[;XCt$64BR/E6fF/K]89`1%;d.=%$(s2%i=UN3$p0LPEP)IPVrfR[,N!^oEF7oX`Bi?@*B_Do_I"3rVSSm5PA*i*-5":qa06V@FX`WGFQt\,S,sE`mf'Y*."[fp"d%h4&L;f+%Ed!FCK_3P"?]]`0%MgV!&^rVE]_n;b@#4D@lEJ_5!(W]P@qV<KE,SuRZSSX;0T38X`)K^,PsdJNP_1\J*gB'L,>c[j1D5b2#K?,1%kH'II57IN/qnM2'&s9cQ:52_H%#IMp#1>N<V=laBU->,R>N@==FrUC.m5H]LJ5e6#WPbTI142ei!D?)kK5Fd7GR`'p8U+:@0dgHS%g6`>c>3sGSLg%BTi+ld>5\Km3hgsCUnATt!6"G\V:^;XHc]!iI55#MKN%bgr5CA%Kp/<Tl3V,s9ke2O[h5'ajGYSV]m>>RJ0guIL%US;%QRFGb^FF%E4'ZcU#4DXHbT837kqA__C&GP[g0,beq:?+*6,=)0"Tk7%bioe8Q!Ya%TI$9WG_J$dgRVo'HY-Z.<_]dEDr31Vk%NZ[8)1A*`(I#DKiUI6)srbjO&6Ae35c3=c<$!V(!MC)Q+b@qn82rf*G"c2`#,>c[*10X]SfAPn#I;@2"Np5?kUh`/F)TEAOH.e41%;1<HeauM)ohr*l'`OsQq2t`0=8"f+6AoRf)cianceHD:1$m;h0%(M1#<+<">;dJFTVl:`hakF852J5?lCVUUAV6q1+e^=edfE(("%(1(:t-6MuVWF%S%P6hc[ESX#fPTE;g(i(@2A9TqoA4kq.md([R;TDIW0TVR+D,!\n>U!D<jQ9]Yc=F%bN"B;H*WWeb)'0$G07_>+%b%&a^*t7Z3[21pJ-Jdm*J0+aF]nbkISFj,,nJNHsgHjhS00-YhM#GMnLmX`ncH2=_BBSe"[nglB;9UU7b&RlG,"JAtj(98@7ODI@%2>[R?"s0E9I1*;X=ga/"rig?tRPJ[9]7(=/$a)b_O4@dE%R43^GV2t1FjZ*gp?cS-N_HEoI0-_-W6d&ecGV%/I;fD=39(J/2/ItG%]TrFd^51-iqs;hBL9d`S%%qHIK%6N:[%LjCmU]4]m-kE>I30TAmj!jP9ioLE4RQtlBhErNYD"BK[K%V.5T.Ue$i4!!e3b`=s0`mZ%_SHF)N6l8@C^+IT!J%0llZ"`-"/\>DCrYk/>%;S`Tf':W;Cn-Th`<>Tg*.\k$FNjLe4rpJcl1hDTJafNDdu#]h4R_/^uG:E"UF0=%/.P=YfV#A9!QBmee73+u:uVbFEPr7@kJZ<8Qsl'OhKZpZ_lg'q*@pSN+;K2FEopZLDi/UIfL;=*+jmQu34Mb/LUM%5KP*!,2'umL%2MkV-9q](pP:1FP%-EFWajL"cpcIV#:im7;g?0@MQkZEGlAWQQ;u[<Wj0TH2b,$;*Kk2fTE@,7p*uOFp\>^Q%fKNVYJ@)0m6a+CV%?FY*nY/qb]G.0,h!hT+QHe7\q1X??mBpI^5f7]k1#a@h]hl?eijoa(uUU+3Z;=/ai162?6(9d[kQR7I,/7pdD!pg3@\AcC_5QH>S%[mBtKD)BGa"c!f@N]RRap<1_6&5:2m'0rPD!.Gp="H%*tSS`K9;N-DG$^.+C).ko>Vp;(H*_o*XPY.0/P)'akSjT_H<27G5W_m99%>W=hk(D8<)/nb[8"c\Z2+<nG>L)J9[&7-i(2Rn"Df_+*W_\nXV-&[*2gJIOA&CiV67#<-bcET)R(UmFC\ou[ce*]O.a2X.&`EhTX%!2su5%>Nf(?NWQu"L)OJ`l>p@eL#FXF4-N,Rf'M,ceUR:H#*MU_j6tlRF7ND\HXmVWWh7g`SC!AF/chH5"qU,3D%'u&DkJk(gT_i%80U..O[PM]HE)o@lN\RG.*g4#6"*Ve4=kdg'dQjes2H*//t5,=p'/U5YQ,QUOb1%ce-J]A@lD2%e#+*O0c79%Z`#K5#%IR(JFIC\%)8GrE8L&AkmYk\=@].H7j:Z&h2Ss!p<?%Vd\r3+5l)j,D+A*W)EfSP^@PN-<P\nN`k<12;&/PNYF38SfU6r(ge?X0ZTT%ple;GQ?%(d6^+"5g&'CrCe:eDK"l0k=.j85dG^hBe]R+pfX2`&Z_k)EI^r:qE&irN;GY95QD7,8KDBfP.Ie%PlSt!%>:6i>/\hck4VZ61CYL%F3-\L/I#FUeiH/W=PG<Ye.LE"3"cXNEfLf!]#N8tDt_P^!LmMV4WH0j3O&j?W(JjY0ciiO3`0>lP]NAC%3:r&;Tu[n3Y]Q`*`moP%;aE>CJE2.4<!6J7LFOVF"j#@kkm"/P)r#S-1)Sc$$JUO,98<No*O_dL3&s>e,rjmgc>g,G7@WN;fj?i4;:_scAS`,5aiXl'rmFUn%m5+P(_(ecC@l,Pj)]f]7jIW\%HolS#q0=s']Ef0?f<J_4],4e?_,E%#\u6Aur1GT>4-Pr[pOrH-mN"fKcH(jTP#+k>q4TpE97ij6%c>g0iY&U]jHKTVjIb)IM)fBs`MKZF)m:6)g\F,!KORlt4CfJhlo*-B,h&5I!Te4RQ&=JfpR#Do<\e**Y`FK9mYS><L7cF;+.4ElG%=RHD(NBNs2J$3sLM+Ga=@YP.cc-F2&PQ;%*.-DHGF&,J^'+1AD-<*tTS5E<IC-i^Wm[R,i9hOe+7W:>V0APsUp^>Z<l]TtjoLlKG%h`3I/88jY"U!mVJ>o83GJm%n-@E'!8%l6B[2+Q2gK'JGcUm!#3ZetZ>Oa\IsCf,>.AL<dM;X@(%dmDS.T>M=jNG$YWK/D$#UWem:%%J>\I@qTW/D0!Gn>!A5VTZ15:P%9#ronN6sIPXM1(>9^ii:+_`*Zk>UOThM1g<urc=YL2]iM1ct`prf1I3^(]DQZMMno(5gdUm[C%X]mTnR0$n]GI-`c=S%qL6BTOZm5r"Yn*!:BYb?I^RcD=e7bfi*_!P40=rBWbXQk/P<qV\k8oM5Sqt@e#V1[oSY2I0H%?U1p#j(C3%8_DIJ'X42%7"m,m>UpSL0eFr8WApJ8Wm^%ED&aA)aQ<1[Rso:#.@3EK.a;>ZM+^\G6&g4V'D"OL]^<$uZ=qMYg^7+L6lCLCY"/K2%E$q<_N9pmT21&-9)ZRg-Nq"b2jt.&),un;40,%&0"qr;H75mKjW`E53jGl]lE5i^(`&CknT%$O5Aru@)qOK^Q(\)D:K>P]qCDV]4%@nW)QWHqFol=1<bT(.krm^r;#\>8BTik9-(CJCOfdM&\_Rp(l4$`3\JcFAL?&2,Rh]bUM/cDc4,f`Pqq0h.,HXFa+"bs`4Wm,lUS%%bo:E);EHT!onW3euCS2.5NX,&uGXf$Ap:ED%u!,-EJ_n9,72j>[WOKYk,I<)RU&NVFI[t$bIf3!-aCIBRbFdHY=GfJ^+r3%jqWt%gcMm'0lK`<iZZimKFgHo-HsAPn>Jpl!/PdKK?$N'Vs:n6J,C6Q4@7k3i0"P)#/lSQ;ZBK>*:$^j;,b$-HM\$f=FS*&<lP"sfHggi%7tPtCiKRnf[9j*ul#c*aC,b7"iW^2VQ6<`6=/ihf&qF7JYta+]rhE:ODZ$8$^kr)7apFUq*g8CG%<"pm8&Z^2U-c3U`WXq0RO'5<%6^<Uc%^g[67B>X9b:T"+iu4@c6I^Q`'<1KL1f;&W'G4`V/#%p@Ch0Qod-3>,"i@,FU-dN):h.?Bp!Db;@="k,*^r3p>]E]CYp,-C%-\FV&(JP$+Y77KW4,=g86TbW%@YLFqYYhCh*1Y);q+(<*mVT]c<0]0[m':=5qi[CP^Q$3@[(.QaqG`p\W$6o[A7@0.kr0B?OmBs.%0W'JB`3"_SiOjJQ-R%2;UKdD^Aor6_P&]V`]4iTcB,$MV(B`.+GCD?97'_Ii*Dt$l3oBh<a\:s_KCW@K4e5/Hj1kRfBKAJRRV-<Q%,)@q\@QRl206YKIAX;?1`%`]+\D`mWdlfiNh@'XGD`er5=sfA$esO4n;3SkWHHg:A8;%F(Y0GU03[Z,'8Z%"aVU9Knq,1LBeC.=7%HK5"WbXo#J1:W@S5rN5r`cWu;`dS&&g\BW\F;1,D`?R1Ro*9!i0Of6d%qV7k&9a*4,b23s3KaO0TO!Ej$FEIS6E0VLIP8(O7g4oX%=_c=XWrbdD<AeH!*h<SF3<2<:%Y2Z_1oC%rB]>o_"N&<_,1_,P:VquRYqo05ifU\8&9QQcm<6"",Of]eLR8W?+2Y9/R;aD>:.-DE%QT4#P"5mgFOk!k2K<thEi[==9i732s-8s5Q.@`NN`2-V,b\_%i2+VU=^<riDeL)WQkCD_-94$KLATed:('-5K!b!m#i13JH#g5oN%C6,3T<r(69s%]?O7FL@?#V6]>_M))-Je*BWKH;gWb-*hS2u482rR@Jk^U^*#!:+XMf>deC"ZaH*,"L;bp#5u+IAFp_']g=&C-J)<%i^oNP%3B8OHUJ%3[RV*cS(o5<2mkfS(bHueQQBZ,I30dsi6VKRV8Sn6FVoEalJ@,]@QWgtp/DD("psEs$^O9T$,-G`k/(EPbehp"%J!b2BSKqJMc\>$C_c)kIM@80D`/FS9'gEpI_CR5VCt&r_9%XP?i`(2'@]EoA34#VlQ&hA"^DZbi?PT>nmi1`//c4?W]7ZP=hlL_W%JPoX7Cc91CUn!2HE1_E,gR<L?f9,jBk]">c5a&R@#6%AkaB2[]%nDQG9`a"07\qjO.Us?'1T$GVl,L(a2DMTN&=Z5E./_:gJX+%X%WBe8-<+'9Z67NO#@p0bA0W+U#^!.$tUf[l-o.e2!hu\0SUJ,]Z&3%#Z/*#FmGS+S)JP1C<l%"c'7C(S,R;@Pm?k'gZ.;gmF#u_6G%0^I@CQuR!C"@S:r]=_:1Ji*DGU2$JYVYEVhC!.elJe!c55YE^b'%FEM9Xum=k7Q=sJJ=nsXkeIS:L#1(PBe*C'_u9q@lJ\mf(MJs%AbnjE:ugUk^3H^Kpd);uR!*&Pr'aL_Q'1RVMQ.cmQI&p;KBVlGE!^AZFCf'P'_+$0*kpklC$/4jL64u+UInE_28F(nRa+?0\jgfq%j9o5P)m<F_q]R)YhbifF8RmTbok,Z\_IPQd=9P79/6Ju3M?p."o*1-8eJ\dQ-4M+n+r`k=)efS_Y&"APdA.r(3jg,a7?`H[lB"]N%hs4atlS+QnCl()1R3l7upt$!\T4e3hC<QdL\DP\oLIbKf8^ZHY8]h7&Ou-'OP+_/).6/VOk4KaQnllb^OuJ>6FAgcX^`\fJ@.;&A%StpS7!+)6B3t$>m(d+(Ta*oQT*;KZ&pr;p,W_F))kJ;d`RY*O:nBA^G@c_MS[X<\%n#+7GYs"-mq\DQFG;_))/b!]@&X2DF;\c@E%I0-n>M'd,Nak'Wh8\UDeBoOd7/(e,L,er[*E&(M4j@mZN"O+LeJ@2IEiW(:RacmcT3`tOS,[?=Nqo=CXpcu\NdbqtcDB[ukXk&2a%6FnK%(uB5jEWIF7bK%)A9-E,9rEB@QgsWj<J#a]G1UcW,3liNR+%D?:4">?8Hrq(0?Sj$'iZYODio)<hQ]A7!8@gd[N9Ojre(3N+%,@U:ciL!OeiK,IM9eScD9Ws.MnM.^<^"6IT7S*Jt+VFCC)*++I@<Q1Z-D9n?WASG]0+b26#%B0liCR/3^T"c&J%Y]%p*%-V;E@$t%4Ff*t\%I#B&I7?me8/>q7IaADN;XO1<K6HVW0:C",kmXr;^at:]H!\qp$6ZFepM8&&^AWV3uBCms37n\j1c<,e?V@31[Q`Xcsf_L%2V*&q5kL6ZAkOLs4tE>1rtn-g;aTf4#_c&r3e<Nc:'2(5pq4be:kF($JB?V9R(9g7'2ua\ds+@[Z.0:]\p."=aZGhuM:u"Y5"Ju-%L&C:h5`3+6M*"m"QkOMHF0b')WC7Gt8pO<aNXTD^%`4C4Eb[%IrXa#/!T@4"P!`,^=S"V;EgrTj^&@2Z6^TaR+`:n'#L>7%#405c%SpOg::*n$=f(tq/.%q-WYe7!E:'!gnq%/msT40lj`Lg8q?`^)VILcLRp3Y<=J]"Fh%Q9>^l+g`7SdlZ/CZkc4lKBA)j^GO&C,qr!%at04)5.[u1MFq:$mTL$Bfsi0/R49/4Fl"dPVt,))QW0_P)eUHf]B7uk`HXA@94;L<-T,:3UJi!Yhl_j3C6)$rj/$3g*ct7;h6:eZ%TNU3B!D_DM9&V>Sr<YH[kn3Z;ms2\eCLFpAJ)rjbr(H^/38AHE?V>G5(0])g*BUW;Ou/9L71EeN\h9)h"V%8KrtDAclYC33;"5e?%"iWj:=Eo^&PEC`XHEls9l6bHsD[H4T.NYiH0*@lNPXM<oH,Rj#-H+"uAHnL\AAI`=*U&V@IaC&U*&`ZFbOR-3&1$RrHp3@d?67CW%4]$8\'A%@f=,+WA01Kd%IL)Yi`j\e-fSi)YU`U#9K.DALe2b+g'3BQhTQ=r7*pO^8<M?Sc<C_itq,$mXFF33i*\EA_k&KpcWgBW@%H9e9t%"LBKI.>[MiCJ&X("IF?U)0\rph1uh@Ukgk'I$q.lo%mg8g+7J9NC1i9Ik-:&G$9%$Mfrg\JLM5aP7.Ag;F`hRdt8-cIlA9%mjB)^e2a6o8@4Cj/gZC-Q_]RscaSJ"mL`0F7MPbBAW2=J,\roA`k:FFk^SQP`AQaU^N4?7JIA$oj\qOV0FrAnnk\`hYf*o';Glot%UgJ8(IkTMp.VN$I:';*^$CP#jE005'.)=-#?S.nsBMhP3l?A>U.uD-)I+(XGBP9So#dHT48n;;)0%e#Zn'9B4B<M1>e`4=P>O4::%RV\#$TKG1,@(aT>G%%WlGP5FkgGWQ8X.+JA(R=N-kh0-ejT_jM[<qeP<c+@Xl)ijF"0gQP!giB<!SBd_3/Q#"^3T@G3j#'NYIJCb%1rDF)5+GW-N/_Hm+!8k0"`>PWj2e`S1imLHZ@3g.V:(jH,pN2rDO1o@l7N)L@nkFiH:3UF?EW+\6U@Y&oH3=!q4cm\r?\n4lf]@o%rNpHuLV5aO-RqAu,;tjOP4+?T:M`,+M6nfq_l%*K2MP"AeP:@=A^_9h_Bcq^a7q8:nfd1Qd-52^%`V,?ecl3qh1%734Y)4s6"i,)%iUcIU*/(Lho/9(jaEM[]NUNNtTdg4[jR46!:IVF<hAku/<nX@geka)B=Q?TZA)iW:eBHDEaW3f=76EE@;;b[7pf:6'9ig3-,lGai%XRXl*D)j!0DibRBY]9]*IT:S1pl8kocM(dub3$=B="rfA[DOmd*FTHtnq$+\Z(4]O;i<b;c?Al;1^k:9Ms1sgTQR7SC-!(?Rt9/$%oZ22QjVZnP`nE)"7&+rtT2g5*U9AF#W:VD'K<u(TjJV+&ThPN]^TO4od@u![G(k*RDn7(1]:H^L'eIO4r_(ZEBNM/5522>EJBf*@%9WZXq_RtLDI6PaA(R4^W.PNG<QiprIEBlZN70q(#)YXR$]_KKVCo;]A<c4C(7?p'H_WZW#<ZafX>KSf-Q="V#P`bZ!fH^Ij,Jdi5%C"!.t?8N,eACWF^]BUDTS*\7Q/*<;1n^Tph7>Keqm/H:Cc$V82eBN@qdhrf[""LuJ>Qc.65*7X%2+3hhO%._m(sE:\b]cH5d_<Ai%j@>ah,/mj"5+F:<CBmNS>f(efJ(&9k%SKLiNMG3rgs"\I$R2^fo=:2**-PmqTB5-!>E8QQ/]CfE)oan,@e^CG6Q7=5@&ZpbBDLYW%@M^^"V>:7\mU*aIB7A/Es,H=P;fQMo#L1`U9%<&%C5p+O<GtSc8KXVRmg/R`3rt="JBn!e+B5]->TtWQOVS`>cGNg&0!G(;Z`'d@%-5()O"AclQs2$W>rq0_"C/\!NiCM,n)MJR):eTGmgs"a8H7[QBb;Uk,)>P&&lc&U:E1^V.h#9g>PK`LQ6X:3=@pu@o8*+Qu^8lLb%J1p4.I+S.of[pu$X("u*M3eD6[Xd?T;8*`o50()8;W&M*M6!_VB[jErb"t/9"HONXX`(-T*W77o(KH6Sgpa[X9=Y"&83(XCF=TXJ%@npRorn[Xqnt!0T6)C+u#IT5DB]rs<>0'dW3fr::700X!k>slBk0>B1\rhVN[$lbL$:E6>Z_S9BJZFjs"b/UN#lOJ56FiKid9,EC%#&9F1-tQRG;gaH@CD3n603apaW?.&/@>g=/j4d[)DgVq%*R"-0V4D`#DX7);2,4AOU54#V62Mc4I4@WKIPDtn\au;IH_i3DG69,Z%])Ok!:h_$qfur)\jKmJO&Se8TKMXs/!qQ;+Q]K*n>!+2;;dONFKb3gSCSNshq:*>Wk#2rFo"JZi)#-"Dgl663JB,jGJ!/U#=^RJP%6BcUnPV*V&l;MtYW8`%KY:cKf\?cStS*[P;b'AAtOnrL=>th_8QFlAh9lj2*#3WNi?fcYQThU'?XH8r-;t"LC<k]!bF;8Wb6C":>%nk6HHC,J6e"i]9Z>=2D-&Qs=\Q]J"Ym!3@SWC7%<h;rG2l9[p]AJ&rtparGIrIC20;[#LIHUlAB0lO.9kB^me4u7heE\5]N)N:i^%b9F2`poQ#;rb(1unWNo[C7=[2#_shh8D<A>VHWWq)(sc'C5GOZ+Q\A&d_!'tl.l*Z`4^rk;9feGT!D=r>&H\H%JAMB2QC"fn;J"C%a\p%pha)*iHon[ZQ52Qfc-l>1UPQpEb)OZsW5oVp=&gr(/<,P;8&ga4rK!Ms=Xds8\AHV"+4Cd@ittMqc;T?W6BsAnkk!o]LK3_#%TlAAG%k&U$[fId#4^8q!<RJ1L:*)g&$b*?=$<n7cs/812,-k8bZgf+G`"&mkjFnjBJAk#)1biD\-)=J'8nd5NqC&&WV)gI"OYL=h%#6Q2U)af/g>Eu8i1*_$4-mRE\?(hkUi^.>>ZS4JY,NQQU*r2msTr>%eHdK>7I##jXRe^O*44RkQ^l@s"'LoFX[k!J/mRoQ0`][LD%=G[S\bM5$=]E[3+F`D`hod+Ltca1,jloq?MQ@'M/ZfE'^"+MNN^rZ.R)3nf?YZX&9gP@i>bumud#rqpl"$^N3c?F<c>$K!lL>M/M%P<mo?--$t*;\lqoPKc?7#ij;p=.us'k9KYKG$&4b(mO.U!ib>\`RXTqr"t[slu/W!2Y^<\p9V_nK!Rg33H07%.2Lne7B=(UiFkkt%d&Ba+#)\VZ/[Kuh(EEA?R8m7/6if3s99N[O!IaX[N[MU/VMBq/4'eiQ6&q$hWJ'M&#[$c%W+TDP'sPVu_<=`\@aV2_4Jp=Agj%Nt%UW'Au6qU5_q0Y5M#qZI:roXR>N/^XG#O0iXc,C]:eCGoukI8(5JQ0,r8?bZNj/js]hE)F6SYhmf.B-;M@\M9*bM_[K1nR`%d-=?U%cC`R51)LH!`$YKIh(`0JTq-tpSJQ=nO>#$g-C<h9OikZ`\9AP]%D;ink"VsA`;FP0T<K[b/`_`?HG2[Nn:nhUD_EIhGH@fhiDl9U%`.%<,.Nb!'qc?E`m+]F5INNH#kbIQ<Q7FIbH[D`Qm)$ANX_JLEUi4!90'XW"G3Yg73ng?q#IKFCC$/KT-,U0kE%K]9fuu)-mO:8:%\udhR>6(f0VjEeM8V6e>dr$R51O%HJgDk+><mVRDGJF@2b+o$.TA3.ie[QD0Z&*aQ)7-`a#eab4R*@Jl-VQ$O23n\[C>@aWOnWYV%"5u6&g[I=tMMsjD--gWh('6k%IB&le(`B[ALAb(-q`l>J6OCJ<dLc'f-Md<II^mUSk#^")Qt&7;oi<Xm7Vc:#h-Pe/'1o!>-Sf\&%L)uYt$;sKeD%B5`&Vt2#=8'j@^m$ed=A#*#HrkK+`/uuh9_G(9X(@2m[H]sm%mXUM<-k8"_$V%Ye6sjX]]f,]VNpgi`jFN'm;U`J%`4C@i+gO_n)C)I5gWS\MiL2eT,juYV`k!o&S%WU>0NlYD5*FIEejoW,+uuFf3U<65?6;h77`&?[4+nMrpA-K*Gi!B6be0X[AQCZ&%'MV%i>%8s3"\T,$)\53SGDH5>54nG]E+<4JC"+Cp1r%kS(E,_:.U#pC9ZFW)\d/XW9e$Qcgq1F>`Z8>JjSC4FdiFnrF21f/eA+GS%9&e&kkfdj"jU@[LeVj.@="jU,RR#-Oo)47B#ZkPL?pdSmWMGBo;:#1)7aUdF+Si#YgA!R@R&uX+S.Rj1$gP!27B"4/AcuLI#=bUL%8U;4"gRY[/4;)/X(ouaifbgbq^'Gdi:j>C7+%NXn>0*jl)`j.(8df@WLLR[2^"lfXE$<h5:J&Rc-H#d%iibqjihh7d`[@'>lu3P@%qs_>s^@P'.><%"pfJc!$-&0uZh6NTsQ.;(g_SL[.Y3YR40tF<e>"h"nn7h]Af&4a<[\J[k2nF!RS>iJ,#d&"&4Nc1G(bYWaCP_NJ%&cJqL3(SK/DbWM-gg6iZ([:W[XEadmK-rYaP$$a/3VUOCKPHp\8:pKWD!JIrYtUSjP%TRTZ71b,BI%RMRIPk>)X")=^Mt=E0!p?;%1Xa\Vj/A^Z2OVj!-<NW)R^%PnOU2eU(qPQ_-gf[D3oWr0*r3cD)lk3u\GG'C:^<&qV7K'3lGc^l*dim.'0Gq,!\@loXF*l]7tb;f%m=:G0?WWVea3)8`H6S!'[Sr#VCQ(eo:1W?Jq<3B(c6[`r>>n<./k.baaR)1t<?YXXVi]4EWi69704m4f',#j,gKH2WrmK,)71m!%%_W5KF'=N=.[_4qj@E(04M.ngA=H<i68N#u6>Obf@*+#[!?bHQC=fK2#?bHQCnHUuB?ViM(DN;*a<R_P?oBGEcKHV+J3_9,jMbGiJ%TB/T/d#'/oIPYtN2r&E>;VPVG)gR4DP_`P5[E`*:+f#H"K_3"965k%l'DKINOKN.)Pr/GtZ*`G7ltZPDcQch<3YLQq:B2'WY*s$6%\eoR,g/olRqmu5IplAlcG?$]Y=Zu#/&m%J%mAQV4eUf5YM<Vb5<^eH&)1K(hp%46mV*>;bl#`=%e8B7p9\jU]PBG\h93gK"*Zo"i%P*Sf!W>,Po];&<Fk<W2PbO-_P)m'fV1(]sD^f,q:D'WijZ;uYlH>@Ud9W6M\9a+$hr.'%njA3^Z.jGN"c%H%[#aP-H[QsE5KsoJD%GYq#/pahW7_Be?0&rX`S[`,'O^;N%hNWpUeYX$o<*^mYk@"X7O&CMu$B\u:!KtHrK@2tD2Cr=?*kVS=u@9ou%00FGlqb*"5E`]$+%q=.amB+)8P$gV8=>;+RHP-<$'`V3/q'OUg"80?I"B&oQdC%]k3P$:qh(s2>Uii.KM``>M[`r1VRZ%Wjj+)+Y^0l^EaSFrZQgK^E,%eKnl#pca34,5[P0KHOjuoX*]n4[&31g$Is[_ljkOHk*UuX,;Y7@cr5a.scQrR&B[1%lQ0DrZji8#f$9e"%:^>Ii,g`_EtGn2<?=g%`]lB:qUDJ6PK(3is!(`>>n')-W,sm"OZ0VI+UDO]>n'(6gTk<%*m_!D+HQP=j>B*s3ETV-\$3Cs:T)']=e/=daZf.i^!s2Kj5fq=%0)<23F2!ot`V:3La)Y>jX(-pG+,V+Jjn?]=eDoSEJ1N6VibDdXW/;nY`^=M9pk>HA^;PZdApp1I^[`0l`28b@>D`CjB?fFaX[N;N%21^U,<W+E_'koNU.YLNq+e)r7dZ=US>SZ`_("lUP7+P)kG[k#(QE%;'P2)Yo0>aU/:$GBsT6"n-ct7_a-2lo["//EpU6?9+b,/qS%899cA,O>(r'GP0B'MDjABR0itmNY/nnHL\PY'PRt8c\=`VF?HPf%`BhB"#BOkeuW?l$Rt<FjhM`34%C$7n3Kt(SOm$nr9>D466i#%,ACG^86XS5f+Ym*/ilA%br#kqXlS4SC,N_bGo^,[omcpP4K[['l[ssgErl$eDar[/\o3)rB#&gS2b#ZL^c+Y`rKXm!'b.!r0bcRk%2Fb/B,oRYRCEOQ6!4rY,Z!3Ec6h)QN?8U!Kmkn("o'uU-lL9IS!gSj#TP*=!BWMM6XP"D#CMhSsal29:21<J!B/\e8lcLOokEScO%qL[@Q@o4-$*YnL.hid%8-bZLH*auoL<I1i6To^a!&^l<F65jnh'DJ)*;YZ<8]UlMiC*0$-XGaM#Vu9Qfg0*X0p;6S&Kg,MgU@%4Q%6GJ;eK#iFpZYD":eBu7QK1B3Q6/ZA?l3]<Fa21$/qA#B?j#boJHt]?7^Wthc.!L=X\"eVeR1Hd]o>$_Ni4Q<5EQ/g)`-5&>n5p]-%3NoXN/sSfId7U.XFR6$6k42kY2g4n<WZ(Hj(DC`"He<J0KCns^!Yi!i(7iPhK;(.UB?]>0rg4AmZ7u%US+t;KjS5R@8^O+f9;^r:%$5X*!H2:E$>kpJb2Q$$Nph"Z-,0O%C/srKSKcIY"!@Zf(TFYUZ@)$MhH"ar$AU.[uCkgot536S?@(V]_+heV<5e1t`hLd`JJ4_!X%Rd);Ap/Y,1WRFgJ0siO:_&f7[$XD]'f\)e,*i,'F4]Yk9kXAaNpu#Qm/I`a&=?^n1QW%B1+YdJarZCDg9p3,=qk.\S!B)"!OR7[e%)HT#GgKo)N#rq\mQh]Rr_oGai@]lSk-MoYe'on(@D5qP1?j]n)SA-[NSG3_`phhu)VQIHJCJE\RW#f"5GaNG[B(i#Y1;;roCq%!t%Pm4t@-,+-ZdC#@@E,<3]Q;Af:0HR0Ea'o5UW_df9M20=q>CtKoTFN`sRg!B3h)Z1!MbAjc(^.d8L&R$T_#+@Simu-^MGK-&@&<Jl%FbK1`;Ui,aPa0iNU@6kb0;m\#a^Wgk(Mb!-3W5:HYpOXBZ@@Z&rP5ZoXRCq844a-.#N&A8O3bXT]g$K,%JB_qS:&ofK/0D*LICnN%%*d(;%Y0euAp%)W_0n(Fee6,NZIEr_]AdC9U+8CV3g/sT5ePbK$%pr4P7OkBRs97UQf8a^K2h82XD4Md[J[E[@?#ca\riL9'??u9%4S4dcHQ5h])BX[LE'%NNN%OQgp.sDRa>kL&6=hIWJ&7l&e`87N%Tef(%W@OAF^n!,52Rgb:ck%CTnog'@qn$+c1A79^1`WRi+e&!%7MRcf-:[+eUOiff'U]r@?T-YRU[XjK.tb'83aNX`O-XrG44bdFLX\sunu/')\WZ>6_e#2pDnBkA,M?,#,3)n%P-"GC]\s,jhd]M.%_Yg/YUolDdOMb5-%*b*iUOk?YY6qu_pS'>leJN#FN4\U.bZZmG#d`gU,%./`8Dou&*Q+pV'>;:0@B9i2Sjs\#-BAW3bJhE!DL(rd%$])4TDL#iB(VoYds-?^ojP6gsd+/Pm^\0Kj`PldN(ep3kRt6ZI)+mH/#"$bLrNK&\n#P$7ZD<cDMA2+1M`\?^&DjT7HRB+]E+_%:%EDfBZTkApN9WeT[N)h%TF[=YH,qB';=&_Ik$";7J";WG[:9-rY#fi_qk4]MKMXZ?</tfn,3/h)@o6ZW<p0(NL?nQpRfM3'F0E5PB%'Y:n*!l(6nBVBu`):OR^Lh4McU)I(h*kLIonG48<e,>tU)%>CC>d\,!V<EkbUV!dPEJ1r$=7oGSDM7V)W%9t+DMP6HE31LrIpBJ$%)Z*:=U[`8YDqIZsMM&tQ*`\8IdKUbO<lkO]Y\PEfKC<O%n_m:7*Xn&GlfdlDc1#Os6J?O$A\aS.mpNq2VCuq$o`Ac,YAhJt\AYkO%Q<!D6OnSYMF&[C][k<W@?f#s9,kA@D.Zs_!T"\poJ]un2_]C-O9C7q1oM@otafn8J;Gf@Y3E:Un13-*Ao2M\P3CbF3kfPQBTV8'B%TT.&3P*7mHP-ZT/6t.p@9O]pBVFaDAP)(]];H-[,8KQ+s%<Z5EE@,2`3NZbpaG=I=T\nNF5`IdsM>:O&ldkL(;:"b,mUA-j*jdX:%+I*=/8A3"jUjHg02!.1Qmd0K6pa-qn-^SuoeHNGVU0b+lmEZ;QJ#bkkm;M;96JdVMbuj"_7E%bfo'j^c8W[C;A"dL2OdVmM,6VT_%+(nPTL+qZ!pd2BU:0#_dbt??qL1GBpg3@iqc)D1k+]W8$UmF[ZC#"P=gtC5Qq<A9TVo=_"PsVCqeu:E0cAea[\/C*EGHHtHS]J`t%nh'+'V2MgY]<>K7^j-u=L:uq9eFUR`N*2&3Qr7A7)Ye3ia,KIrBmnCoAnc\i+J,Ba0khrWW<#7Lq=fnTT+1krXKgYT-Sb<&DqJ!`%/\GM1.T`eWe&en,eEGaKA10TOMhVO0lQME][Q>QpO=gST9@AejT!>?X<;eU*[e!?mb:^5%23>=U!LYFT!&W9UC7cRaEIY<M7J#$b%0ie/\1NG\'k)gN1TJD9/oSPd4`LFZ]RXI<B`[@nMhlRTd73SX/j9QC(q%3'a8NMPU&);k4gc%;+g\/rNYP9C!j%qr2`S>c/l#/B%%Ik+TuWh#c0_jN(2LCF$"P$tDWhH'MAh1AcR9-oHLJ`a")2B.HCV9'$Ho@Di7"Eu#[qgAB;65.U"_8c=!$#REV/I@EPlJq\IP0aJ^%HnbRn'&&sCkXAa`6n4-e;]Q7>%9RE;AH]sL"%up6YrH*VWhl>H.%bqoQ^6;'$,[D-LLW='2Ju`>A#UlSI25MA-aa>]`#U#94o'ah%!Jpa;"O6/r0pKHVde*G`**kq";tDp/)#I7m"mAqR'VP%rjMe;@pBs^>s8M$o^ZpaZ.>9:m<k2rbOgD9l24ou"T(45Rd7WA=5].?N%P<0/F`I+Dja/d]4d<6SS]5Cq$,u)l>^Rg]9Uo>1T4YKAtj%e[\K6c4I5HYGJWFf^l#@49b.Na/&+sKbcBuG:aL,e3$>iJsaN7NDl%=J."aBg+"cg`"4n<)2+_6HU/lj>W5\m?-G+Z"3*&p2eI[j^Td#[#m3JUMJ4I<I#Q^8Hc%=9u)fB6mRkq#u%GD57NNBnmcf+hhK*K%[EHMmr%osrHJ<GNGb8TeKI*K!0b`?r5k.M%I$lC5lf)_S%+03[38G@,o@kI/`jRU6@XK\A?>Y+sB=a>r<#6(T-RW,>jK9bYHHVf"%MWpXY45ZP^+R"SDSnDlB.M0.u2=iS(a.p8?/#Wqq_X+pNR.[7Ld--j%EtpNb_n3._qh"HU&'\$m('\)bjdocFlr2XQ@/0s2IlfU\%_^5CWTp#V=)/7n(N>ZH-I7d6O\0",AM!:LoP5lTcRYNl_gR1H?I%-iR[ek[=rKV#XF.ASfY)&Ju44>6)k%1G@p6#%uh<<qV<PN5&%>NhEo`IuB*;F[%>1(K%QPDE=g&9'<)QK3r?7EKXJjWrfZ`J<i[Kp\_*.CM_/Sn>P(CV*ckU)g@J*d52q5mUWbMhuX?`V:3Ugi#=H%AU4b<.DCcn+X]mI62MdilmQE74]'[,P0AbVgq,=-[_u^Xp2rA3;U)i77,0<57Kcb5B7dnCSHUnh#%P*F$VQc&_'dJ@`c+]OmW"Wh%W@>94-W7Ki6FrLd8E3HUbu;rU/PjZpR&qraX#f6s4Y9F+,MNQn\2C.X?Zp0C`G<SD>!u*?#Lnd*)AOhQ[jG*Ce(e]6AXj-BH>mW`%-l=G0EOSh\j3Hd/h%rW/4FT39ksP!QaVGp=^`u[l3s!%V,([b&^r1Q'/$UObL!D1E?q4%G\&M3`FFl)WRqeN.ba<iOW%Vud1s],i%2^k7(4QCkKWD`:)7Ej4rab`s90QCDm:7SQm0(GK[K#*a2RXgdVn$HeRegqXgG1<Gs#g\sY7eb`G#n/8'AJ5Vb3hm,WFlC^Fdr9V/%R)3\SfUHhI-'Jlm?uOnjGjUl'2l8VBLYC@SXcD,elCUElQ<+lf/DJE\E/dl&7I@/#fO4(sq5UgUpo]Zdo,jlU,K+;E4HO54XZM:n%D1km;6m4cnnul1aAE(<7pde%8BI!Ot"tm,OetWe3m1LVN9nZ4;A15(qmQr8g94:p$p1<p%;@IkG(mSCmZ%G=Ii)GR!6f*d-k&-7`%MnQq!CU.kjJP_,QZs7ZIje+nTYK)qr2D'_c>?%<Nf=%o9%mgPmUt@UC>85p=al@_(C5L6*ije!L-tOaMV%'e`MaG29&L7/FaU!!O%@T+cdm=@q$[$PKF&n;f`mDnBfX%"9m9)sCTGM5LQ"R_128'!fu#:A>E<!+,ghIQPj`+[U<=t":FD@?R@lCL862p9Sb`>cV2qJVT9%2mIK<1lnlbAJ*Kc+Vfp;-Df_6&#E5N^71M^]p&>/Ol4:@Uf+K5&i=MM3gX<\>c1"&f$?B'>!5QGPuW=bl&oeV'L]PIlb)0Np>92/%$7>05f&%-:&3oGC^5<[o::2AD<VLL,^[9)7D3G%b,fSZ>5>2409KY!nL[,<^]&MGP:;-8_U1L!8D$$$9Vt%^(9gJcMono=aeJCl3%Eg&iM;s4i*U"k],eLS_EA41d!O%KT,fW0u-FX_7BX;o5*\\iYT.\VQoH<$6Wb#L$hI+:PIT)s;39`Up&h1P_qgY[pnBJ"/=qRm0<%b,Nk*$E-TOJT_>XT^fHOC9^7cOQtS\[Jg*@hm,8r(gFa1&?hX#gsCqZS6[!G`#2q?'&UR#2QGlU2X3'Aeu;LR^0rOq`[X@obJ`)B%D6.);gABlg05ubdJMtqDLSB&k_g8F=+(eic@f$j_(0^AA69h)uK?tr6;s;i/W(J>O'j3As>?H3C)#*XPUh"N8N*t10#lK.gB1r1q%-pj,h1D)*g-G'#2jt>$R1-PcklY:VJF52PdjT?75Sq$`u4B;8I!DKRFHQ(A]Xpk*JcsB0*,;f#(Am&`[OD5LSUqbV4UbV=q!uISR%.O,nTTR"8<c91d\?!S<n)TlO""_%sQA4'M,DTTL@Gt"eRU*rCoNAOFX?NoDOadVLKU?H;;eH.3fT"pI'+iAuo%:EZ$id"ZgX?`6M%K>5sBm')G[kk.(iM7(56f^E6?XRQNRnSciB2OHcLreoDaUhMN<:)Y(rWY?,,k0Pk;me3rlr?S8-)#(e7F?)+A+_ufhDa1Z!A8t`\%poPs2-;@uB[(96D4[-976CSZW-Rj@PRg`Zs21!q%9cM2$eFnO:-;sPfD5hfr7b0?BrLZagF,c,mF;1u>0hL-$)4Y8NZQLc:9r4:,%/PjG>RqHIRj=Y47RfLp]n74reM71,VIqRAC1BR?]Z!BI=66q$M&CN0O;b7"%J.QG=M+l][BdMDf6WtpeP?NeqP"Dc$%uGhkR8YWX%P&7(]^jAs0)='S`aOUs\Q8-:3LY/@@nP](MY/EZL@gF@4,bXa8b,R;T,@\CA[7:@(]Pur%@4d/.nZ`cpq%t2AX3:][0:$o(lnU,G%ED2+DG/pd[7FJh7dD?R:Iod$71JpdSRS+T5oeR6WrS02_2CXGW;G8R6V'T-h:t+h:C*%tO_6P[<$5b>e/`B:-W-%)4$Cio\p*Re(%nl8j4:c&bTj,*ch(ek`[CG5dQcZZ;Ug+7?[LJ4Qpj\E_&6CmVY$I\697BW<oloZi.P)8P0"S1)!PsV@CH:Yf53KTYU4T+uS+q^X1%"c8/`(983kiP!8*qnOE'70Sf?IpZ=-[nR.$ZP3dU?aUL]c.gRHTu\>%UWp)M4-#'Nnm1jDQuO#F7L8B?+nB6HUFh<cGXp3-qV\eW%f5l:#MQHi'DN@mW_'SgPhB&r]:Mf$/:I<L\[jN?Det4Fl`(ab5ksj"<?1oNhVK1FTOET*Wk9.ThgN/IrI7JqNi>_3JG2@1OArLT@%+#Z<kD%>@`4t"Wk`/,.7iY(-cU#1W_K;%2pRh>Kc;W`ECqGgE?J]c(KcuUrK'Pd^_l`G'#VVQii%XsWualM)*Y>-t\J20+f9K'q#%T1]YRJ^4+1GYt>r*C`rM4,bKGf\H@(W8;^,4e7Pf]t`+O+/CW@'seMHD9YZo/mP9PR%:-e,qq)5S!@OAp9KE!0Jg0VQ6afMZDJod%GN>l^rJno>ht$PK%%>fH/Q=SBPo]:kXY*q'.%lG-$%2<8%A<4qcrm!4=n?At)b^BnD(P4=nY<@J_J5/f:(D$s<a+US:QU`X@2.B!%&a`.:DfHnjdC*7!g5BcR-$NdZ?T6)<:Eng78`4\$3^.5IMcPZoT,nNpL/e/-BV,7/n8@csglm_\lM"LF0!l6fK`79u$Z/cQm8BI%%JJ'krl%;Y#GiS8FqDAB%6\`54f^P49!OS5iJ8UVAMoH[NbdpX>^l;.<1fJO$F-7^b)&OtYA&f%(8Ot=uiBgFV%7rR!QX29j=sMd:%YGg-"CmV+0<thds>#)_lEa&fPZ[,I\YU5l+2re6(($t?=IRL`#%^R0o(GEJcZl<<s<hgDHoV*",hZo\X29l7$53TAK@>R,Q7ZuB!%ioJfCLttcWeS,=%VfGo!gdOf)nHCQ8Xlp7VL-''_\5C`Ig16tiqG!/JUeNb0264PY)L!A=pSpcfmDY*@IaU/6/gSs2W3:ZBcNu&-%C%e]SDE];%Ft*4R,Xmu,7+8`i0X@)r1lUA4hHbkur7D.PHriS:h^-WOG8Wk\*E`^s]m/ZH<02,<kUrm[KmD1Mi0NL;JLWng0GU5b%c5Bgu[kYVq9%NR@r/:Dtp?+oC&N,6pkVVkt#=GR*7=eb%1)XJj4hdE\8%0*]b94pM12qVD3QSqZ7T))L@B'M4m)^1KO._U#5amTc%D,D3a[gnMtf!2!SC"dFeQ<@"ulk!cqSUgNALG7a,Yf*n)P&%Z:?/!c)6C2l`CfOt\@hU6Q.WOl\--l8eQhY_<_\HP*/=K5L[r>4+%peA`qZ\qOk4h)YWq7,(12CYLqlI'q6$Ji2endaCG*S?Gg0^**(W43'!K:LYt7(0`=fW^k#M+l^TWoV^a]d+-%m"T*cn76D.)=aX9%@-4+Y3ta=`g#.NW-eEo(*IJTk^DH?-QE6V=h3:lrW35hqjT%qpLKC`^$;L`R)<6YTXGLqL-DgJA];3c1\EfsC\jU[`nT?:VX[s_c%%k#em':H?@2J_KXD6R0Th:g4g7/`\N6F1i@(C=#eB>?W>FR,?+Ea:YDN+op5q0,*F/1/Ut$?m1A]i?M84)2"c2lBJ[,o%'jbpjF[%A,nTG0\N=OB^mjPdVWku#L5,;Z[$^(5SC,pj2?D9NY?4+[mD\+++6c,g7W1,Xh/Hk>(or@;-ZhaA0"i\<:*)?YIQQuDCGb:8IE0V%WMmCA40&O2`eT:,8,5A?KlD_;R(e[%I=Dk2+Qn`K]Zh6bd*`s&^39EQi`N7_Zq_E.!:BbV@(JQ(BWS<WgfQ3n(L^f66H%lAKSNV;%AU2XQ"LJ\[@OM]MH"+O&-^k)RH@GeGa(]_r7oT1'V!a:4D%o+'GKX`XO5>-idKdfoWW[-"Dj$"mC\qZ%]gEmTY:l!1[61=FkLl6Z%M(<jB)4\#VS^Ab2(?\Z@cUJR@_-"%%M&Os'k,#QAHBj0(\iePn6lp+e=f#oT-Vk7W>&`,N9\_Qn\SC^Y>4WD<WKo.<'^(qo_WD=Z%68olDL:45r:I`+ub6f0-:l7']<t?%c[uKMn`/WB1$S-5B2`lDfArRADE2+R>(+uD&-doLHRBC[#?aE;RD_-g4cugS'n'Se1(P0m_%O,%Oc=&F%Z=Mb4,*-]'5SdqtL;++68n'4R!Oef\-q7X.)=gl"kN<W2k-Nj2iXSeft#1-KpJU[HnYf.;Jea"u74GeFuIj0C;I$*Y]%ar_t9Z@^PehMt4c2!.%apG9g&A4#Ye;Tm2j/\o:(G!6aaC]69.RZC3#/"*POfI4C2]Qjl=aRi#D6RV>aefnsD[C's2TuJW<V<L)i%E(a[BR#Z4hNAlC-q?SoTB$mE\JnBIfhsnYhL"0:j)+6-?+mH-`Uh,Q)d^W@i%2a;)Cgt/LND7h[Buqo"[P]s7iFbM2Q[m=TdQq_`%PJWcXQkUi5.Bb02dY:fOq'JbP?VEY@Z9e@1LDCqnVIg6NgoH`oEK<R9CMTrsgVhrk3a[h`,VMn92(bM3M_MmE7+g4=/KL37D/<Ea%9FIH%0f?1I9mo3MAEhp4o<n3)8]FKh+5g<T?P(dj"8h=;EX)4aR\X)sUn./ZP<l.$RSlYSLCC_iLtZM45=f;@Pe:J\WtJ,$PH#6h%dWi'GJ.3nf!i,j.Jr,I8Rh@h1V7IIV3"b%,ep(W/1+1L`gHUOHVol*bo#)K0eWMZs\A]CPbK2T6nHL\PY)u:RW`D,op>Eg`A-Cic%g;E_sLNA*N/OL#93(2?1-N\#;M+l^Pf;)C'AjIC3RtE=,CiAql.Ga_WOi+^_>a:Mi*d$e"4->@]?CQ>?YDu7+l*rC(gN$j87:L+J%!a3b"(`!YUKqudE\.?RRNI/:BPEWl]E&^oYk\(J*%^=tT)fR-on(j*'aM%dDQ`NYAHZgYGC<Q]QbgGP5nTFKD?23qYX<o7G5Mj[R%)ou6ZBRg<P^21VcV*gBU2cC=_c;:Z8=lYE3apD:fUte);>tR$N2CTNM9i<_VCf3#rQ_YUG<2aK8#Aq'?BPPUMZ-cFNh;pRPi09B*%0\s7-WnPRA1/)>^],on]2FA.0oKblTH&nJSg(*N>`[J(]jTF;lhi6kKj?"522SK99]T97$G%nC]CC`.@k=enBEpFRJC?#m$B]g5\%\Bdrq+**)O9$;fiaHcuN9R^hU0'JV..%@RT(F>1c>ohfZmRpa)\.;#I9kd#P8T>uZo>(aiEgP2pH-I).aB2[SegBL1n1Rr9Mi%+c%i,,GK91U">Q:,`Ah^Lp^#kciCAY@ja$*8"W!GJP@9W[Cdl#pFL&`g@m)fI)'l#,pY.)6$9j-KBJE8C6tE5m&Ult_!Dc,j*#-=>,C%hI/Ou.,p79SM$WWQ';lriA(nF;=`Sf=@tp:ZFKJhO=)WJ/OLTM=$kc3.W/Z'3SpZe]YMPs$j)F_f%boN9eeV[>YmR\Zn=t^r8PWD%0"aGel&;GrBs0Dcnjm<]CGq<pI4KH^\?k]sGFd-$d=&XKal=rSC?;kC,q731Nm.j0)7o"(StRHacq0,6G48GrSo8\>MIUMP94RaF%<'Y0;n5KE9PTc,p_F:-fI]YfhGjj!BYA"No9(I>RkYE@ggNb]Q7D<&kP@JW-@Z(Ne;)9g%1LNpbArVNm?.p$hQ'LZgHOPf1AY5.M%MOhgWbq<ONbtb(%$^nNnM!](?Q@`)bMFUguES,tLj$i>mBHO&D#*EK[aGS=kJA,7%%NDc9WGLZB>5LJ;^+%$,3:6H64QQH8*Cq8[%r4)j/[J^`bGk6j=qMeN'9/dEDG.N4B0t)3$H)"0W8sc0ha&6mN+YI&Kn3,h/14`#Es+L2::ek4KXl*F'Rl#/M17\UqfK2rQ%8t%p%.;n-W<e^9p`]%jnn,#obEW&!t62&-sg4*f0f.*pfY/)\IAGl6oqfe`"'iB]0<?rI=(J`.DHC2))[OV`YfL>(QPOFMe8_B,@&RiaV%)_".D"@Rb980-A-[+dHBUb13<Ro*F\n8D0CerFtTQdg1U)H(d=G_+Zeb!P[*=MN8;7%*3^<R\qUUBhscc*qGVASqiXV7*FjO6fRa%NOb<rDkHkF5\XCt+O.Qj,>ustO\g-/g'9Vq6:<_=G!m6i+qs^fLV&=B#@H7tN;\-e/$)^-M<;r0(WF0C@f-4YOd6tnGr>sY$SbA+%k\bF\`0PhugahsT=lq33b_u>`qXqu:/\d7k?cS,P-3_dgMKn.OkH*4N&"7(+rXLcP*41u-Kal`@\Rd9'3V"5:@@`KAObnGH_n%t>%.[rEh3;sq1iFVJC6DB<X._-+6l-sU.[X#]CYf=Ft8JlsGGp5Q-o45A,W%<EDksC!./>cK3:PQdrTGpS.ofS@q$a2Q#(G__ue("Pq%]h(A[1lf/HX5_BGe&uDX<Duu(SZ/KQ<I&-2(%!m0or!QD/td/U"m&_<csCr)CG"LcJ"u-EUkHW-4)X.4#l:F'mX!)9>tSGq2lUL'%?!9<1ErQ%F&p-,3Bm`C,2Fn^A5BgL=C]'ps%U`o),,X?9"4F:Io66G,89Ve^rOiru,^k1o4Vc=^&-<bg!#+\<=2.HEi77:l$./F;%C1o;YAm2.=9Un]\\F)DVZKds-JP1C&)@A;QEAeN8dgBa?hf%[\3L#&)B-i[7BB;s!;=iVZ7KVX7PcJ?M]-=gE1I8>]ch#D4jKGPV%ACuD.=>G8*240?Y(*?8*"H/"u)$8@/'C>pW(,+AJR)5dMbX<`QSQl1&6j'ln<[K1PWBRtR!2btG`0a"9PILG7>2`o?NRElq+n6KK%VREQ(W0Dt;3L^Q-QkPmtNuLNeBh_i1=qZ(M\_;XoH>Cqm86_0DqWg,7quU^:&D_BCa:YPJ`@&tZdQCOf`@K3:P+ga2]mbk]NU;pD%i5!Bo7KSQ.J;Nrlb-<+$@U.W!Gg;^EWhq(#U0S(B*774R@QV5D*Kp"lR[e@=kSbT$\7e%/ieiChDP!]ORI)%>]CsQK36h`,J"5g2%RCLR>3`W/,U3U/2m95E1F\ni=M]Y#dX,H7s8:P+6\)Ou"m\@#tZq55gkCa!qI#S8Gk:tWJOQ5oeZArdMG,@3<XL:f/>G%Gm;e3RQ%72tQLdbWo?/nj).Vg,2O1mr5#EVegp)h;4k)hGsU'L60APtbYfdF1KtaWT-SQTQ4R/GVK^MI_-_+%4^N4+ufnrj$t,KE+&+JX.WO%8J\%GQ3@f)U'-N9RZ\@\n.8D&*X$e@LOdA`^r1PmQ,(rS'XV'A#)[Vo/"\dM,mppCqn3%EbZ@OF0)Ku##2!JEQ]h\JfdOKbOZ*0>%Rp&%dYE_W2-s^&682f-UUik?HUppf#\DnUR<ddCAboPq"hQ^l;=mcG.fg5JmjB3;'B'gF+nJ3nMhXN)*!k'@SMgE%"eX$QTPa?6t%F6&&-8p;5ZcR8-IXS<HupnP[IX"_5#b?+XOJ.Hg96&QB&,jJhP!ULAKqcAOT/.i#.&IMj\I('W96siPeAhC/Md%^d;fq;oL$60>!%[nhDPSMe1GXT&Di8kRQAW_klg('3<6B!M"(,.i8m2+"+e*/,A>qp+&TDYcr+p!38:6+<%]H/fNS>/%e1IO2BX>G4H-2FnqJeCk#/%qW3Z$j'A$u-e@DTf%c+HDC><cF*G@mXgo*=pEIE$X_<3"mKdm2Iq*hJ:J"bBBV2uX(!+X+oMts9]-2$l'D^]l;$9^J*D#@"?KJ$!%>Ue5+A[mJ+?4'B&;O*SXVNUU:JZU2.ZB_lh;TR[?T87iNB/%Z\5T7p@ZGZ(2J=gWT]OHE-7#CWC+;Ss?ri)-oq]^CI9cNY'A[q7^%TlB;_X#=WS0A@Gi;[#gN.W*Th:bctkXaii*@niW$N`:^A]h]]P,%r@'U100F;\cQ58Ma@GXS3$$OnV%Z25oT7LZ>O*"*#t&Y]R!T%ZrA'[JD$Zb1QM<JJ!J]K6Z_)u8]`F86CRsLh,^jFF`dR>1?Efpc$`@kY<*O\]h44C`gpE;b3MKhHbBP=h>enRm!:Eu+]dhVfj0'Z%7;'d7aU)TD4&ajIpW,ZGdV:,rS&W-5HPuR8+A6^V^gKja$5"7ldRbk@Y4b\E+lt<hde]CLd^XLTB8h1s-ubHL>VmtP4%k,B"N^Hg%*V"J,#;i7!!JPWn\raq&aM^5fSZ#&48DDIBP1j=!n,;B"FiK71mQE0B3^,GLTZ.tu`4R8WqtT^fRU6Co@Bh33Aln!u>FPWHjaf[H%Si+I!?t3"%Vt9Wpm&$R09i@(5\,I89.jW]jVDk<DA/hn7`8;s'qKPC">n[3OQN5J%<#,*KUD;)r^sR?!,B!$_0G@$WB`]c0!PhY7%7\K>o['#C2O%>3)/k"I.S5BkuVD_@PDO6b54?)d'Odb\ad6L]3I;]"`)-:Jb!Nf4jii>+Rh3YO_%F&09m:aVrW[\k,NAZu#nC^rE%7E1R$l8UULcl/`s?eqETMJk*eEV7lM6>Me]qX/+HC#!#[QL1-U.GKa8VmN(9*ta1*_j=BMr16lVOpbrnTT6Y\4\82V-P8@d#ngt-%Va>gOIHXsVPEYHm-TU_"\;A=bmj'6KNgl8<48Cd)E-4JB[eT#@LY"B?Zr_n2Z`nDD;cj`RK9h)2S.W!d+bcthX9n6=6rtoO/uBak%CMe,nD'YR_nhQnh)mg-]b0..k3c(k"X2p[Pq9?kVgGS(W:7M'K>[cDXk]\e0)g,Al@fB/5'E]7l!#'-1YGk>R8Eg;Fht\$H?3InJ%+3@KlX4Uq2<8i`U^O9kD[FN9Dqti.1mfm3XEn!PL,kVer6iWa0_"#P3m?,!o(g8rj6<fWNPL1]\d7F[e8N@Pfk9=M^!i=B]F?)?^%+T/Y2EWXr"WN7-aMlU_>NVh9eA_chLAs6/#1jA4$<)'bi(FUcEKCm"5Gt=UI'/9E:2Z?,EF4RM@5lKbKN=jSCmA/lX:k*8Z=)Ogk%\o,kMnG[FE"cnTU@f`-?oLMj&?BLD/!)64KZATZM73sm++/HOU6Ins#MU2u$kjcc$.Jqj$>,7I\rO.5??i@G;Zlto3qeljU6bY2;%^Fc+>8.?(MnJXlcQQ?ri/K+Z9qQQnW20^m\lBDVS2TQG31(]sD5g,D,Xk0BnW4]".LeoFXaf4s`Z?W^M>#IMnYR=aNa#DD/6Kf]6%NgA&B28pl$X=.stB;:cm;<SHe`j'f^E63k@SG3`[I/aC2We2C#-E89@10JqAJ;a&"5*ISHATbdjUp'?RClo?Egg@*6-MR@aN2-D4%D<6%5(Ca,$qjht,14dS>(,4E-lQ=;B5\L$Cd&daX%6mCqqGi4[:ue]XUVn+I"QL`GKInkK&"#.)/Gp42^N"[?Mhe-kIW*]Qa-ArO%kPjBGX\mXY;T?h45b+2"&8,g1F2%<IVM_JYG#LutC8(UdQABa>P%M1X-s\UFR]\7fdp/o+7)hK9+`Fle/`0QpG.M\`4KBm#C0UT2%Q?/7SJbX9kHI8"lBY4G7=hfaq2cgTM%a1nR+%:sI,$h7D_lCEcEmjt7ABXg;3=t+T'cf4#BT;T('dT6gO`bIhMI!9C,2Fo*<"rP-%G?>/cgke_[913+?a_8M2$dpKISeCYkbaU*!.r)YbQ\5_aJ"Mghbm,ZR`$O8oC;uLR--`Loi_=c7*Yj/to)L\FGuREhbla=f"Y;C1%I"WJ`'p)<+-4Zsfqh1lJU9b/>4L'aOPYIk'-XT="2Bg^1,tUt/!)G4eOK*ZG/)H1:o#Fg4J%Iq:a=;\PORA1]2iThZRCfjtU!<_A%Gpeo8-7A3Ln*>>@.B9sFq>f'OV5bJ,2MA.(=<W0A[=%?!MH21>q[*UtBBeC9HMcs\"Bk3;"mLY<3hLrR_o\"[S&iO[7G+G[T;J:K%X:c_?2l2Ts-@*0h,#Y7q6JAaZ(fWs1.07gC_&ZN49^-`7Olh5AMM<MWKNkXiW:peM#H%j/J0Q_I5T4Pb'CQ\hc1B@m+#Ti&g9NeJ%70V6<]4BI?ig\OG$/,WpFBp.IpjA1CS]Ja_>Q9;1A'b,X121K7^^n8uMH]JuiJ0ZUGS&4PjU!cp"=D^/A'2'pZom=kElGhoSr,u;%Y"!Ci8/X@/k5qg^8ZenlaVMD)2r;uae&Ap2QsZK\bpC13$jE/Y^mKd?ipRO9=VL_10aBITml/Cpj:NQW*ATKYLgE^CXLG?ZH$UiH%ElS1RFiFu-S-/W\`)O*:.<:N6<kVpFD+[%NI0ZV)eJkn&WE*k((3cSgl.l*ZnkZ$7MRPE<4BX26_$nle]qSp",eUpF_"-piE?PVD%1h&kf+!6*]-3_dgMLdJ)UfW_djqlP$(%.hkB1:Z;Q]C9Af3+j2-^d`e2CY^Qh5!:XQ)ZH0U3W*%)P'^)>!1?3C"N<C5]q;anB!0C%!f]'gM)CmRChEu^c!4.2)fY)#1[[QarHJp\V;34Yr,i'I-M`:'$s7+(WJkF'IZ]l=g&\>I.hDWuI4Heb62MeL"Q!;bP;Qf9)KR)9%G;N6DQ>b6.(42&R&$krW8JLPghT$-N!gS`Ji0,,tI"U-tj,8ce66#,YFq&09m4YNL6:@TCaSWB,L4E9Yg1CD:=^M:Mn'/3@A%b24%SRr@[@&4%oS@)fHX6R'g.DNu=Nu#Qmp-IP":VboZ!K+@JcC:A'bZRE(B3"I]Z`L1HhC"mp-)@iHKM69kq8p$:aM`KOjD,gjXjF:d%f;Z?(kkKm9nG78@$S=<BcsK#Bd#p`Z,fL8L;j>9MR\qmkGVQcXLU*Vh]6Ff3J_PH'1iY?^"@04-0X4Yk'jgXa=iG9*m$FFTJG+Gt%!^9.d!4;J6ld&+3hVM'-!2N#dqFr,OX*P;p<g6O*Kn8!Z?M/Il,#ViW,(iMmMRC1^]`3`\`D_l,ie'/[cXr[Woc*:0nk$"A&:!se%c$9%=k8ObE1;$iu&tqHBN>+Pjc,5<!a"2JgMTdC<,8.!6V2ub2'[jK)l.jT^FU_)'O:]YU85p:%=o4(W4tS?M8@>W4db@h/C#"Pe%mL?j/:;3'\;p],W$4PH^2&4C+7l:m\@X=a&=#FiK(F_dM>*PgrkbV0W`Bmc"l>@SW<NW6(Ytc#tX>:hWO%,BD0Xd#lnf>.CPt0Bb%K6i/#ro6:;8WQjT<OaHbMYNPt0`]R`,6e!='8jNF)Sj;&TpLYbYt9!!H"/?=ohB4%#ESHOKp8(?=X+^8]?ONfO?&G[Hb?ah<'3Ip%b[717*S,R)_0>FdNFqia`g]ga)/@E2\B)=_WmA0keE"<G(P:5D?<B`TUfOKMA]9msJ-lJlpu_B\*777S!Yamo:bRkgdbI@E?EGcM%7O\3fm\:Fn4usk37qYBQhNXsLguGfeF!l70%)V%=Dq=qHrnW!P\#T+]pu\,(cnZ5`T9(l/p53(;rM&e,-LUQar"RP)hJ1sGPh,h,%IYr)bL^<cuM$Rtrg](W08uq;m@&k>3%;\&DA(.m>;>m'Z3o@.'RKG*XoG9Y"aAfS.`Y@lX^;Cb6d(H8k/*tcBYZkVjp\]+[,$5:V%"Wj;U6j/tb"=Fdbe-i<35"K<>5!u?N_c93BM.PRKk)ti$qh4V(rVEBG#;U@]-7\/&,fq'f%8TaBiRp8XJF*%(H(!Ao/Pj]H2';@%%P$q$'U+N9Wc+VM_f),cJHKtFOFhbDaoa]+Lehf"p"cj2@3!5Nb2mb.RqSf7Uc"-DNVI:=8`#H&o;WX01%Nh@DAP2AY-LU)i;Uppt%[$C;aX=,q/BdiPTh@N(G"oO&GL*/f$G9R^pNp')hVb*[mSu.85WSY$,;;MbN[Wke+"cb4/.ihnk#"s]M&<4fY6h`Ff^5M-mn#aR_%3ApMM!_o4.5?\8kls;r\]-ks-':;ll5F",Ea8r8)\d.Mf;lmC#'2#T5lQ&b_l8FDG^f)t[-\5P+TT]fE#(_-ME<4Lpr/6=+WP<_U%FYpKIbWI(i1A=/Wk%>'a`gk,gI6[lD3iGS1*T([Y0V8Kn_mYqW,3PYMn`LB%FCa3i-W]"=f*n))JO`M$p@njJnBU8Fa<U'(p>M'L%k_TAp#H8tr+eQE4.kX!G:1W?J&W1jVW03GVNijjQ*pfiq#47&M1M3W#fF6VS[IE*LAE#f#\\?26-Z-C[dueu2FO*4+2eX;oP4:nM%o6U\(`gt2h*UQfI4TQt"2hT);G2<eH`=`VWrkIa4Xm)#0]':+(J*7\;5Qo_>=a>]K',\Sp'7^7;hZsf8Cg]`PP/6;<F7RgeQX0Q(%Um<mDgeZb<f?';CQ*p4hDie\u!NaMM!nW2d#f5'qJl<It=BS,f#o0a_*O?:FI8)nKS4g]ihsV&\%#eO@@*am`"1pcp!#,$9n1`It%al$Tso3K2M>We@)LMcSJ$6HVV@dpTRSmB1M,[Um"2Kh`k1A&P>/0-U82+=CoL.!G-HPK@iNM_X`O/%Hk@KA^0?^rrb=G4<\obO[b%e_?l]]r,e4m`Z]b@E\QDLA@At@GQ94f6iZ(LPfXTPAHULV]lMkCMO(5E'q,oA.Raoj[VkfFsa$;KhUiq7ciujlS(c>80-;+/7lNc%XPP-+$=s`Yr&u9^Xk!W<>I_Vb_Ud.u/dU,t(YkA;Xhcrq+j<#9RV]o7*=;Xt3[.aU&DI$.%XG#n)LQk1-pjdT>tS[q:-5lK.*@f?%--m.L*Jb"Yl;M"=U2C4[/AnB4gj,L%8Q\r2^Y)@"8p%fSTOf#TE;6ms)0EGHmVrhReD[sBmDCZKfVh^/r_@UXNrVqq%DgmMSjZ+p%7LAmL-P>&n5kHk(UdZbupGVTXb7E"mc/$h/_<.oV1#E[.J<QHa!h69U_MK-a-Z1;PZYDEn=kZRp>fq6^XjAf\Z(VD))gYu.f[$m4%lTq3h!B]f9<>^<,c;>4"2W)+,Ee(K$@q<)^&f+BEKS=5_=:e<a`&W%"F=QH59T+V'RMKZe1d/uS>FnnQH+u/V*lof?8u)t/J`8"/%EMFjndCm8)T(JZrMOWZ#IOW-/hg;\3/Um1W\d:VmA%uQM1%kY`,e%C.p+a>t(sFV^SX7PQd[^Btf*OG-P9VL**f">DUQ0^Oq[j`Z%mk)srlb/V#f9H_jebZ(q>t?$Y"MD+"I",f2)a2U.^U;HpQufl:_R1#Njfs4CJPka+?Y;`.2e3Gp_>oDqNHb(cHO&3kq9TN(>^U<6%=_B&H\\AS;qmc66&_p[:6>XI*h&UL?VgCB(N>oZ$IE=R)lBj?9eo4L@.O6W`=u0I%9,f$c.h_Eqb+$[.A8e@0`.!E^ASX%`3FpCC%@BCs3PA7hR:I'pJ6>FEhAGrtl!mnL2UiTV*JGISYG!/%#b-ErBHeE@_[1D,/;Y,fb1@cc/6fToS)(qN5X7R$K$rqW<2.P,_nsRAr%W$*8*jlKm[3l\?:d-JNP7AFbK91E2q%^sh"AU\r@7<Ua4M7Q#.FXSH\%W>WmQ21&AYgH[^GWrgS3]:K9Z-R9A)-)\6m8>nl^\"[o%a$0/hp-:Th1lDFEDuES\.*4'Hgt7`\ALmuY:c+(6pM`-^Y>o,QiZ9OF+F4"qj,*gFP)M2/[$QSQR"+MW;)5n0C^?T;9@&?[DSPcW%:j8L*6/nf'j2>Zre2XV`_A[Parb0gtP0DbK>=G].'r5UNkW[-6,$8N(jU6K!,(bNW?4`ZRJ_V^O10u1:ZC1>dAX(hXGIb?1HXrft%p#j[gp/h_0[QY8iIHY*nGun?^B1$9KN"*$k1QCf#$E$u&'9Xu4!ZlNe-(o5kl.hg5c#K-YdIQ)HXeMIKp[OFNc*`N99F830Rq>"+%TLVk#&u3G:E"?]G3Mi<(O&BKp%^b@I[6d7;PBoB!3ml0T+RggQlB/p6"er[@j)'@8EheE.S`j9VfQg^K[Ku&f:IfkCji:0`duC!P%e&VL.-@Y#Okpf+SR>:Jm,YRA//8>dGh*%o35fFHMkXEYu1i<:,29L.:_NQ$0c)c&ilai"\1[8n%:RWY=UToorU,/Zc@Kn@qO"e-:%WV.GRV[n"dTABgi1H\Z@KQgAg5b<;Z5_:@.SXjUEG%=<-ljac9e*j8>\$/Vt1)]*=!VSk6PnoI:?b$g6lkVKslr/aE@BcH,GZ)G6%Jt"i[>C>]V;;RE!'-^U/&;^UXCE'-t75*/6lGX1\90[P]TId4dK<qZ8?47jjhB>d0#A5[?DILj]au"_#!J+/S,'QZ._?#JuagGPs%TQ0eX&anI;5Yjp>kR$K(%"Y2i/oaDS:31lYBIBi:]b%0aPqT=F<4L1M,3/D(R5WniMHn6@^2=[m<$@a*/'e[c2s1<,Oh*m19Ysbt%)_`qh9pf$E"3?ID.9D(KPd`1cS5>$qNboeVhYGe.U`J3C*;T2;V?=%9RFqD1E8drk*jY#Lr@-J.NZ%e[`PdcS6r"dZKM3oC<2_M(%M0/GmT,NS8fsD%<bg3H9c^9rQo7lU_<3Ak;X%u>3NL`UQmu]'\SGSejYB(s^48r@&juul]FRsruO@^/fXRh1^_'E"`Y]YM)n&!XU%n,9)1dj]=hoQCI8/\/jpM"+g>'b?[ZiX'[mGef7P0IM;Aj;MV@qT_L#&%sQ+)aJ@P0?QqLK,]MF`4s[t&_neAFb4;q76d'F!6'(,%o2'lg@/Cio2B_sm,Fpr."]W]1JR4(45iW&&;4f6dI(AeTRE,;K6r32h<%-"L_3WN<!\-fu5VEHpTQ(($W(UfrfDfk;V6"I8^DF'l%lRUQW#kE`6Ja<.T#e]Ln:e9Un13#hTPURt8LmDDD@-QBXZafAeQ0XS#\qng`$ZOR#c%'kA[$Q#qCbFAQ9'28)rKP\U>bZS1c%Rdt%_C8)V5VFZ=Ui@'9\?@U_<k2X:ek5@ANRW:>AETfUon4(KA&h;ZlJl0rH?g;gmr#gspVs-&2Ar7OKb:h2D$+iaAToC_JLi%88gjtu%m4)=W)EEnIrOT*]Y;sbm'h!4Vee'(u3\YTXJH0T/*_9V?$.s)2-D43Ll.d)TQcl0Ufue@p_T/).UIY6*[6,O_.F/6=AorLfI=[Bk%E=V%H\;kqcgW:D\7%"pWZ#K)gLK!4nE1:kDGd96Si-5I1fR8m4`ne!L(3`2JkY@`raZNLF7qgC,kV:U"aUOZ!<1oLX>Nl&Wh]fH#%JnXI=\12SI9fY%9.(doLM4>qC1>8/fjEtKO(&Hp3-2>i/4Yk[d5d^7dR8XS5SL?S%4?6KK@kq/],PMLThH<7Uo3=lVGap;;Z?63+%gk?N`QE=R7AlskD=h8sEU`PLbp5V+Na>._]`\-2GRl97o9NWK.)AW'H;j>kC.Vg&0\N@-j\1>%M[N#q5+)WPp>6fsj%l]apV*(m,%%7Qk`Z86Sp<H^D)]Mk(9+dL>NaJ@+<1iacRHUj*04$e"S)n$DZ<B=fbhZaO&3Fl6"42M$R^/UF-MsksE3$26=OA4h/as(@fAQ@FZ%W3R6Sre8Lp1*9D*&cIF+WX:1d08NB:5Z,k.qo:X_9?TO`"U&<J9FLI:$@lei\IeU?k!EbI"js:c"-nV-N[mIWVX:nA2!oO$Rds.o%LF/^Q4rg63jo)<k[::ker*ufEaK./X.OpkD>kU^K1+'J[#QPB4L?X.c\Ge2%&o?V3YD4j@UW04(F"$Wr#X,20?:r/_)$KAa(^O(b%"p+V=7ROE-0?p5-I!Bf#Xf'1sFYlKBD:G>6omU0$Km*ZM6^Ek`[e)rt]*h]07Lis@B;Uqm3ejqT&Za`NWkb.SPq,;k(BRWl[W\K]%8XbJ2>f[@^U7R5iArDn!!*8QSnQ.@b29]83Q4d<I=p1IYRP4f8r`!huYV&U/Y7,8a+PXAOgt3%FWT_WI+;2?_SKj9eo)p%^%UbL[%-8KR2\s5:(-GN"8o^=3Z]3S8hL3#bC'SnM>Q8[YdO`8=`p(Hg$F3M),@Lstm[K1#ge`>kB+9W[i#BF8E04=P!s3Pn9di\kC\JOhi%gYN@EmNFn[$<T4jArkEt^-;&eG(gP8R'q!erX5AG0N6m)<MnSQLW&d"@jucll*1k\aGp=!`lZ8g\9+JTS7mb#hJMS*D`s#lP?ZK5%%*igl8it8$..Z@<CiEXsBmk5:3+!_XU:,;fEPFPV/"4"r3o%$+>J0.?;Yn%G#CKJB!'9cl2a&"53+k^57Qcc'V+hoJ:cP?`j0BPS%@4\8snqMe\;aX]`T99F,_:Ak"I-0Bu9lsW+9%I6K+H5Tn]&<F++Q+3E#I6q'&6\o4PXo:3db.t0*<orCq'[cXb_KBPVp:j.^n<df%m(jUm3ck_n?BK!OfRZ`_j('>92L.'?6$i*X@Y[n4\<t?&:/ug=%F<!]#3hO#OTA$,-8H.sX!b:RG,_I&H(L<6iD]X+":^3\Doa\1%$!d\8[Ke#'W!Q/I8>%.;",bn51bAY5g_#<Q8s)30OKqglH03.b83psNdhrQ<G2uH(Rd-&AB!^H"[8XJ/^?ZLk6tIh\n=m1D5d.dP%TQ(($W!bB5(OEbceoY+N&4!Y:;t4]pUc1[P@)KY^EQ,S#KJR3?SN&C&$uJ!Rnh'$\]I2b1rk74>\8qUeSG'P4q-KCIirq(*?8B1_%3A)1UHj%>Zd_(?D-#'oJ[(L&XBmASR^6QFJQ]EAN0Aq=1rE%$W@uKoG:c,M=6HW[ca9_8./1Tl!NE%GC@b]p>:9<sfS+r+-AMi!B%+e)UN'\p,_%3`A'Z4*9"D@(E_-j#Bs^dK2#44iRM$$K^I01LL5(^HSYBEuff*'fe#LX9\U90eKLd2m,bPo8ti3f/ghh)e19n"FXI%Auh*tOna>kH<t3kC#hNkp(-_nN">NZN%ae%N">KYN">KYN0!P/N">KYN0!P/$l%p4)B>!<+roX+KnW0DQf3lr2h>$0K>>Oj5h"#X%VkIg#e.!.HVb`5&W_#*%:ltO]2rV,34?$d]AC7I]&j.&rlteJ_,BM!c.d/*eGd'q1j&1+U:LZ]jOueF+WOR'o00>$tC$\1f_T%V)%S86LV%TtfLO*j>fQ/eNIb(u-sb4M5<?1d8VJJ2;be.IDr]jTTo(L8NTi&lQ_P/#8?:eC0L)1sD1Y!.BX*JuP[7g!A!K<!!`Pqdt2%3(2LbJ&"X+X4R':]?hUW'Ca^RX'GQ`!Ct_j9XZ]52.@1DmN1NJf.`jhLo-a87[*cd.3HQoV,o)fKUb(:&fEM:Ulc=YfK7Oo<./Ct%;0$t);1@63hT$YXSXeOCPLk/s^2SB'e=!)NVpkM[nqTR@"_I@t:jS6gN43uQ7@o]XVd)U/mi?\!2JXM-SS]_I&Z1e8\D@LZB7h(X%NnPP90ej9X*?lT(^a^:_^rIZ+JC)jPU/N.g6@c[i=3/gc8,_[\-T$KsO*!]5dQW_gE*q?=FTi>?S]Ja06n)'&AgM4qB>#+e*Rt20%M,YjaARL_I,g`mQ&nobt-L.QMp$`!JbS/cm#a*i'I2BpZo#qnk;^"uJo`__XqY)9"N(kZ__=b?_Se2=Be8g@kH?rP\hN"3%%V[,W%4%'ULL5A0WA>E)'8`L;!Ke_O+Vc!e`Gma+NQ)p*O@34Cak%+]"<3C6C]j-/>i[-?V09ljP=V<I*m^kT9XLd'19gsonIZ@9)noC</%r_BYQ7V*NbKP_Y#$9ba2VnUAZ[NA/#a,j^_FONWCGDJ!a^J;T'H_2I""E5$B\WJZ/l9:83;T!)ZQF!-t)"/Ec:*@a$.U0WKmWPcl%`D0rQhi94rTiY73,kF,W"//S)iJl&L+?*gAUb^p8l*\K`2"jk62mH0>9<mjkAU1m#),IV<RY^!!4/IJ\7S1+Ff"Tlp@K7)34IE-V%EM@Y9X^G`p<<5i4ZRAh)SMH"cI7-VIRh8KH`&[Rm6SiC*]/[_!e@gdGbGgC7]?%n%-rZbL=KA\hJ>+C9\L4\XllDj-9LK)S"4hA\%Sg`?N)Z.bsn_4Udi/j9@J_d46>;YaJ-L-F[S9F\'/>#+/>ZqBi)6qrli!Z1uHjNIO?aaY'L#o$t]kq*MNLPN'-*s8qM9=7PJ[H/"%gYDpH%EY8H!A18$JAt<ZF#,PneCk&Y/lLo%WoE/plQR"3/6`sJ`:"@[g<-?PN?-*aN_5i=U/b,:AF@Gu&I>e*J=)W.hM1BJPf'P`%72,:+0bW2d5]hL#-GK=GZS#=Z,."Fon2tC8`?JGr#3-m6=P)rNE5"fI4X7*bfbs=N*+d61!><^54!UfJ;M*X@dFue8gCcH9[T6nZ%326X0nY/Qe;0rj3IgQt>]U4t(ZL$`HaN>oQo3l0@o6^ZR](eXtpoF)IP'sh1_k_Q:WE7etWS/li]/^J,^dZtjd`@pKn.KM"W&4*L%#;4\TOemf<mWihb0gflLJn?f+Dn8+F>.J[0DO)g988.H\1K1K'J\%@M#%Yh<0D]3ieAVO;6tK*6*_>,_$gECX+cW&6`*Qm'mFlYZ%[d4o?(7=7FD))^=?/41&aMeMh+hM[=Lbs9!'71ur.>L&JA^^]j@SnXGkF!nWS3W<IP8Aee4l4Ko1h$M"E=Js@Zc.hX?bB3Rg=At$%E49IH$A,[-')TmC6*,3Z@.-@=[.W\^^_t+g&LpQ-F5Isg4WHmWp-9Bf3$>Es,(Xk,/ghBD7uEO7r6l'W9B2uQ$6%9<%og:`:R+B,%JDSrLj`n)hJdpoQDJ;4OqoVk]C<G,dqZ2qPSs,c-1BP$/b!>m[JR5Wc/K/g51Nc'>Jc\G'M-=dO49[>u6qp'e6hWc'kAId;U!'!W%i[-9t7oGSNLj+`2S`[2I:$'KbOjdieSfHaEXq?2jR.u#?!,LB*)YZBN3qCf[4qL.=%jmLgF"jL)c)8BgF^YdBPQu^L-F9@tS%+jk%PKN(:oOXVGC@epQfb_q''*6mM-"-X1iMN4j)O2(pV\0f%G_FXnTB#HfDGdfGHELQ(/eOtFL+X'kXL&QF))Ml"O\bf')>gp<.oY-5%+^/3$B-Kr_qlEN)lMFk@8<XM8V,BGXcc:a9>.-$`Sbp40.*B4ig%H<Acm,g;l\%m,)0+CB4b+mp-8M6=NY^WE)%AXsOOCE&N7h,^%Dimdk\BgbjJ(!^JHWpE49AEK#2EkCrMsQa.`Rs?j?s0$9=GV-D.Q\P:1t:h2^l+TdgP.-8phL+X1]F[G@n%G_Ak#+OELA-Z;9t]h%Sh&QC(TG^rK!lhL+?QumO;=93+M!2!go/*#@g<t9DTJ[m5Gs3;`?!`#cut3d\4JKUJB]_*KG:nWM0jYbA<G(f*HQU:A6HrC7MZ&:%A.c',Dt[mU&MR'8.O)On76P0+5,<u#D,V&"gE+d0p9prSoX9MhOPVngO)[\Gc2,.P_D(]1kYh<aGH.\5YRn3J]uG\d'l/h[61P#5%>"Ig_Yb)@(^;;2X[(HU,7Agqdm1jWq&7lu5m_IeR[["*%2h6a2+U-#fA/:Espo)*!$s/S1F4in82Im\^h^>4t^/1<=I`eKUljEtU%BBSTSB__ZMO\Jb_8IM6HF$?c=LgI_\&@t*o&-u;YM"NsEH58[meRifW7\7TX-IVMi+b1N;#?';p+fg#W"H&[.k?a8NAKNlhi=?oM%D+*hL-=mGE?L21:&#LN!J-%i]4?JS8Gs$Xp2Okcm?5q0g[=PTpQH\Zjc,Feqr7Val?&!jr!6Q`W_!VF-!0*F4Vr"+)Ono9KV%>3d%$<i4^+p*oC_mDQLM9*Yd,QU%N8PL*\OGOno:kku)8ETH8>e@FG:cKZ#M\T1O_'P`U;@3!,%0@G,J;Ljj0kDeb(1c0@b")#N&\_PY%CaAc0U578ri*q?7I^<fQm\YP04[?pAJKd`?Nm<m6_]09?TkMX=J6WB-%[$LMem>jP$9TB7gM5F<:hB1)4s25q;<])QRBIW9b`9sh%qa+<sa<!lVAVdGMROt>?'5?glO74(V"*N=j)^nlm2pb/eFcS6Dp/LcQS%:!DU$`(b+,EX>\.m&C>B@rakIanEdf@8hD,n8f\Y'P5%g_^0G,lsR*/LKb@N[IPb)P2#f-?Zhc.+-(EQ4m'd+X@_L#\_HV^__:!OM8i50#]iaqDJ4rqOL%=%([#JUiZ#l8@G(AKsNS>J6qS7%/K-L.RCf1cL4W#Co:V8#U=-Xn_ZfVcAq0'L+dh7lM">R$!KFY;Kuo.5,A$?K;PN9a\X4#G2q1R`jDUu1*`A18h/`.>_!4:Rk-I6N%<=1pca?o"nk/A7gMKDsV`@fJ5#GG^h(A\p8+LLfnkgYM+g1\*t`P"HHe"^LjMG.s;*Y*4Hb(f86e28qBi5nN&B:FaKR8L!<Ztq2(%0#;Qf9^-b4'JQAeA1;i"JZJUWDd;sjiC"?!KA$!niE3CmdCGY!(RFAEAB:,!RR#U=&U9^6"bB-+jDA;SOUu*X1)lsQ<nSsfKU%!W%,r+&'\7M^'J`DmA8Z`mod*@,:i[u%4au:$/Zu/lhW,QB6kb4.up&a!s3U!<&=3`9c(%_LQe:E'Q=j!^L)+B![^S8_i3A6qemc\JE%*^Ej8#kYeLEFK,'&L.V):+O_jlu(K9IHa#fP+;\!/1q=P9-DF!Ta\M!%^Sj.9k+D`ZUZ=eTs,PnVFU$T#`BT.)-RWJ4Zm0Z\>b!%%i]LP'm29j#1@GKIDdP]cl*HNe<qqfE\jVYR8F!M&j+J<TaR4?)Lii>>:DRG1VN\0m%EaFGD61fW1))jV&>)*:GXOg9N=a_oDM19Q%ArDKajYothpIOFl0NWorSJSt<Q:62E4bZ.4i*7&;XfGh2NS5SoNI&>+/*1.c#Y7]L^94Cg?-\Xb"=jP[.=31KqBb^:PS"$:2-Wc0%9Q+BE0$6<0mHX6l5krSj@M6kkH\VNrZN>_t#d0513s&V.!)?fbmEMcEU^KMT2R/'rg:Hq-7+W$%g(6Dth!GGNI@pik[t'<]WZ\Ng%Ed_(%BsGBoo1h'E7-Z(6>?`a`qDWP\jb0b*X;>a?Olk_QJ(=<khQkV69Elg\YA8<FpY'V_lP^mA>h9fHD'dg[\V3`4;1,^_cHKPd%.3#GI+u!anT%pr<l\JY[L`X&,4_VWG7XQB$D90Z/'_csQQ]1f!r>)6+#97?!M\e:=3iu+GrIu4I>g&<?;87mtaJ`GYn'Sf`c]$Zc%-0=dT81\#B0G2WKn:"O%G[;[-I:>DdF>2r0#M?W'QE:\0@s9)((=&/C>4.`2\>Z09?Cn+U>C9`i=ck&NOD!,uJM_BkNI?""%)&"P%oanZ.DQS]]D^,jqmH-Y7BatjH9&E#l&N\-lGBXf8nAPUOA=am0X4K4+(hGWD^-bha;%1QG\q]RcgEG"tMtnTKI?3i6C=rn2N_fqE%%2k?FU7o$AeN?.Cde13*(34As&QjH#6(i36KjB:WGN_d&IJJYAMn5O;UQG-AQb*djf+G:A&F&ce[c:IBm.EK+")IhM)ZT5)pmcH>%+Ng"qI9aEGZL$r_A_Fi@"1E/21gKe,W6?_:-86#JR=B(Fe,2iJ]UOTMG@>p4AH&D1Q[hf!qNCY5I1n=7P5:@;f;M=f+=Jr$8^nHo%ZQ!F`qq/OJ(0Ob2HT+;M"T0+BaNeEh,:>7O,NhXdC9sjPq/P%WG+ak&KJ6\%j=PrH!A'[R!<c%"3]C59e0W<h42Wq@98IDBoj51D%KY;FXmiZJ)*^JJ<!I/W$]K\0hMB,M<5MfKf5T+\B2OT7S^K7QVX*39-mq2%?2CssDO:7pCUcF7+[t1t/&8aQqJ&;;`C+hrBPo8-k%[Za*adGLhoL*oS\Z5Bhi/[^6TNLe//IOQ@iBeSTnY\d!04p#P^RaMdUK4MKd*E#f_Ji*@lKn.rp13#f"PkTmk_-'34AZ@BJ8FN4L%H")RrMjt,O(9g=W!]ZM7Gm_fHUi'(<7a3EP7B_J%h)rGRZ"d%EGDf<Fdi<K6`9jqjMSDR;MU)Z2F;8eTLq;%sfHW:WYY,":lsNoU%S99q7arV1?k%PSrUF*:D/k,o,_fS5$0%Y):F],#tOMRa&7O%>b1'I*>7P^L$!DCA0WnA=M0GI6R3!b6'6Q>`TcgE%Hf*si"blH%L%$&2Fj3q#M>"&4%He5N4f83MrC!<kEaf7=KMaLnQI7)5r8Glp2+aufgj"0kqqm(d`_[a#REh^9Ojae3#7DN\!OL>G%T9j7rKFkpdt%E>+\KUU'%5:0cU'l`Std.VbSPH%@YWjfc6\0P$Lc*:a?%roAVeFs7THLC*(h+hfH[]g);ucW$Lb(o;)kr<9iMKI.'$*Eml,%er^_%-baYpXJlk(A48LRf;Zi!ZB)p`rZF<BZ3Trb64Y>D'%!W2@cEE"R\b?Q-R*lLO0ZR#Nsq"AI4RpGAUUZ1Bcb@`]jqBrfl)Y!4iWUs%^pXH/]bHq-.uHgJ-/BUsg(<LA#<5n+m)VI:f!+fI_;F)M-:4-SRY7a^C!DG[D!s!d0oB(MarX)X?'sthqSn>*;2h&_-MA$`P^-ta%86NEE",3Lolk$lS`+qa65^':a"CAfr-.'/YFRCU66]D*!H";mG\mn>S/a/5Zq?Y16O?Qjr1=NWS2&Fqsbj7lO;OJWMA<n<q$X%%]%Y2(At7X\H!;=V@Wp6$0Rcbk&h,+0CL#u&iIQ<rlfa<$mWECrME:PN[M3dChX8HBp(KV]L7!^8XO9.sYtUnu[dbX8NWZ!0F'q35R%%5%NosDI(':mr6@j$YgkA2j0c6Tel_#O5(mK!Nobt'**AN^GkJSI-K/&)`R\0JF/1RJ.LXn!4p?27R^`2='(?EK>'GY`kFV.-,E-Y%.I?`WQc,m/"FC@hFO"ibFj%4CSM\oNel^Fgk:)%ukt</hqh,rl0A35TM+m8KUcg/n<dr/<jc<uS>hX7hOgTit%4T][GR43q-tH`O%"4>\TD9!LP*cl&bUC_^U]1#+S9ifg#/[E+ce5;#m<(Ic9/H/UW)`E.'>OiR+eZi<`Ynjr>Xgf"#RaI*$(pB-cg6R7d^`mUtT[dg*%cA:/F';#Mf>1fmj7K2G[K\;hJE^-kcVCd^NlNF*P-@nW\UqcHkNi1Wl??'%=dE2nV30o77cYfs3Rp";/&Wt894&-c=X%K1M(X2rb%T90:gQR7dJ7>chl5pM<0%LSbSe*l;dh2f:.ELSr`!`o7tF"nAnX9!Cj'A6/fkB0Oh;jAuB89*m/9a`6;QU(70%]tg\ei^uJQikE)%A7@d@OJ68$PjLUTdnK-emn<.e&\KdN:W-h".,jse"J#;00C1@ZGoHCC`f9U<gM':/kE[^3QT1,<A2:B#2p$.Rg0YK'G_70tYl1De%1i=ELGJT:#j:76Vkr6^3_kdk202KSu+1Aou;Rb:HJgVe6SS]_IEgoq_Gu6<_PZ_VGpYlpZnmP]^.pfB9C^S/jUkZ583<C*RJVcA7%T<+oD'VajX.'f.Ts!+W)aBAYu"$*cH'5>G%$u+cj-MAje\^Mf]IUlMn;]B[D61)<ZHJJt/gg2q%QbVrgSL,SPS8BVH$eF)^eI1((%=ge'Pcoi-$:'>,qP_&@?a%]X^72(s1!DLGUEDj0Z>M^$20MY8f_@;6r4jaJo['V45?k?E])[q:Wh_Lhb%0fF>%d=F[/q66eM)f\@%H6O\_pnb$QnoYO"CR@kp1_+ok&pFemZZht/*?hId)+6l)dG.,hp*r6bM6*/86lu0G(CiK:mrCKFp8WETVnP%>]=@cC.ri6an=a&g%p<\R)i6](]d*aiYB[d/3C)#!a]#'`V9ulEco.B;XB9uV!p(RR>@i!EEH3lEC!Y]\a?.?:?2l`e8>o]qfVEWF-f"I-o0L_P.q<dfL%dU7="Qdf3XHeIk?mEhLn[^Q>WoEki"W>@a-q3_/q!Q<;)3;e2+\NH!9J=4!&$"Z$lb!IrV=*A#e^b6[Ifu$$n!c;dTUpn'Viku7-%,4;.Dk4D_rbEc_QHnS_ak$leOOl"g!!OnF:dsu/]`YOQg6Ge^DP+1glAHtH((,aPX36YrLa&CmpR'2d0<Q(<&K/ie]EV!UgAt-e'%=i$W`[mohjl=r?F$Mp#Rj$]!XNjT6*W"[##O?J\j`Y9SEkp'$[;j"l84[S*U5FT\tecbFZZQkk,JKlujZ4(PI63J'*63%o]JVj6K%E3b+H02;$gDGkWKKLK\6Ku,"qSFV#k6]@+*G>pu=r,MklI)oCfP'o`?n'q;<LmDC_TA>*BTn8TLi^sFfW@N*86'IF+^,-(RIDCrF%qZM_$\kbR'kac!?m#gH<c]CMZOUYt_)$.*<?Y=a"(J4a\*Gl_jrV]-='/q=1B'*j0>^N[#lbS;,k,*/BX3h1AnW![<7QupZ4V>om%lpD0.oQerO(]YY'3Kus_+$%>t)%&(`KN8/O,D4[)@Njg`#GaC`G#:Vp?doKY*GjEP+[)$m#DKmNs2%&[?OmLF4p^P(=@b7kf0d[(%oe;];rIJGL?4NeFYg*&QP(M>u$WhbM##<)<3q5Q7m\Sm<XJb$i,B^&JB"YJ8-QiE$%HPIT`(iS5>s="5?Ts4X>Zo7(k]P7YZYAJN%GoM]['0qCfCks.BP@mu!>oB7(!JaBFoP4*D+_ePu1]3>Z5Bi%Z2f-e]_+jBfS@BOi-]DH2>n.3U_h<R-[;p:kU:gYDpNfNn?2JQY%c:tJl/1tT7js&l,l+9IHp@>U35io`mE8!BbK45<m+tcE7U53EFV>3=:H%J2!.IoU+9ehe(BbW-sVp?b,eK?r9c<a<kF0JQ@akTn`%A>I]4RBdqR)mT]H:2N<UhsqColpNo3CQK';Za/9&#[dVq<!jP93s)]2e$QFods.DdpS[R-f_SDYrJNjm6UG2_'UAhZ=nNdN;OC_]%Sg[9@EgcY)JX)]d!NgCHJ4<8+;jUG9<)$">S#U2%("l@fQ.1NKVo+bK@Q%6O.,s$;R6VuDd"u,cRA&U3`Qcb=l&,ptZfi*'/ng>X%:/OENp8q\B%cCSiPG/76F#3d:a\A.5eIGd%d[]6k?Bi#h#B^%t:LjU"[Smme\,f:Q"bF9Vhe/[L>@]9<XD$^)/?b"G!]HsjJP,QI%3&+d!jYc%</"Y?_XZ8]#aE-@4.2V$D8q^S>`,Am_)/ob^3F@]<XUdgt4s8\'A5P^Xc2<^ORfK@qJdC^W"VhJ,on=&n'bq0llrAt-%Z!Rd+dhSKc_n6`lUSA_i-AmLmdpk_S6&u<QCKB2@1i=KNpD*DW\a3O93$$b_L>'t/54^+2^4#,n'$[VmR=Bbai>5Lc#!(Epnp?*Z%VN[%u<D&"X.V]u6h!Ao8<Y11Y25H`\M<l`_$kR7ICt8=LY1>;1*;ViB]!?'afL8Ue+XA#4#P+$]C,3AsO1F5B9l_EkHO[0B]kobr%5<u[7%"d0iCD_pnj/cB-.(`T];?NN3HUJuY1=3SZ@\Q>l';b[^R<b00&_gq+p(807VYde08`t6th76fVj6lKA'6am)ms20,MMAm9%LjaT!ekklFheoUWM&^i$6sf,g"*iMJ">4]'0_)TKD(K7UbM4]+Z__f8/J3sOf`T@[9`^`%G6p*D,+UgdS!<jZ//jcGr,UXEfmX'?%h]kJpAJs.n&dc5A_K#a<R_V>I_PhJiH8eCWhTuG":R1HM"gQ^AAY;/j"YAdC;%u\mlCjkCU[I)N,-qkM20Uc[6tEVR6O>#[^(@Sr%-NiTk.j9nBaI7I$mt>imC>:C6<p^%6j_IB*9YU"C03dcC/7@"J!PlV>iW:#WJ;Lk4Lq"Jk-qhTA6oq`-[-1SZX;K6ikQ\CM-%LH?%'[X>j9[k)3-AO+1O<qTtjAWoqB?F/k<h1Re!j4RP*a-&#7=jen-?^^u\[[`!j?C:_[!L1fc7C<e(NL_]%4pQdPE:=S-8';!0^i&s%@8f)U@,@ckg,57R`J3`1Pc[HsQ3T4-`_PU=K,Nh-U0TQdmYF_$%CFct0,\eUN$M*b)T!4N7M9CQ9."0o7\S$eI&>f,G*qPr[:l^(%#fMHK!?:'FKH'`F\/R867Wpl`%'*"s'Q;AirM***3_8R.l<k`iooNl4;@e&`DI$d&$L]05]j76H9teGW6l9MPcTKek(>S"ASfq#c%N][FS5Of/MHGL%uVFF_4`L=Ogo0D!Go$@`.]cm`/H(:sdMN]@5l4"\/g]SthKbVfIM4%$qln51E,\ufVU:V7qh%`@kaMDYab<j"F%G-aSo?-'t0HmWm^QH["Kb:j$)9Zr>#8Y1Cj`=eo`DGf>iUU\,)_e&(2e;#H6\bDbo2F<_<:(oSFg9t9!N(qt-fq&&X%8"u%JJ>_X%cG#jU8#T(^pl]c,ngC3KZ.ZVuL#&fu2?;7_Uk$F.)j;%%;A89D=/7]V;Hk<uMlWn3E"e>I]F]J(P.mI51/sVB-ABPgNV^R50^^IV%@s/pJ+W9Oe!.ds6G6Sj-Y=H/[+B"O17!?1S-IA]L67BhOl;2XZq9ENo4ZLWJeIEPV.jD0`]8m:IpJCpS7gXal?"ipJou2S2QVRr8%3B:>]1!9kNUh)Qk$#*O;3$X8:^X-1,&8aS7<%%JgrmeL4P*5\]Z:BE-HM3\ffT6$;GUrZ,@Gph_&S^T"3r>sR"'9EhEZpm[e%-#<%)4\aN9<(ABE?Q_(A3u`%>X39BQai16UfNu-g+2tuXqC<DY6aAa+NqQoO,-&4_A>tcQYiCap$cfUnN.$!MUd-)Y@6nu^uQj;MXYE(%'!SSu]E(NO1O"bpL\h9fl4V\)DPPi/_4Eg5$+&uk7ImH4iXRb9$Fr!P7.u"Z.Br#m?&orK.h\B=bZ<5sPZ?29=M7=hDSPe,;"O`g%Wcm=GLL[Kk`XZt4I^uYU%R]^5Op]n540n1:!LF1?V.E]n\U_7b")qF=8cbJ%/LK`jRRa&FPkC2oP@^@HS-[j:7ip!5ZOXtg^h09>%!]i90FDbVLRGH?n*E&%]TSjI`;:@j@Wi4",K\lur[OkFAibhrdN4ZrS;K4=TaRZLJ=0WYqi_4eEr&Ou]#s#?s&m9?((Jrm]2B(V9%KI/deC>=26j;r$eSW[NU,;-G!IT[4.R(P6]CT93bR#qH980aPE2<djB;;E[UHK0+')EA$iC+a$AJa@rHh`DH-)<p3u1U5O[)Qqk)%'W'K"d7s+i\@Us]b;VaYq[SGS*+VAS3K]03_1I#*!E7Qte1V\TiVIeAg0j%<-t(Zm#4V1pJjA?#d&=k6i+fj'jHbHS&)XlL>W-bB%LcPp?C-Nu:i]ILR,cLu)mS5D8UMaM_4\kBK.<@0AX25IA^^tc#f]#Q(T4_9:r!R<iR#d374qO:]&4oT>@RV?8.3!HfE(*Zf?$ZVP%)]-Aq+nP[;HK`(qkc1EPOjV_fU/N^+U?S+r!?j8J`eCXp.C70N;!dFY'd79l&[4EbFb5UFkkS?43s'`?mW'^[H#Qp'*]ps45[E1j%&ZEVl!d;1G,1*7p>^8`"BYXfdM$>f.85qA3!'Fi5\++8A)om1u/PhGtA@"`9oJ=P7't#es0pJD]\tVLk<*N7"Lr>$!,OtYaFMCka%C#hNkp(9dMpEhb8SL@^Vg7e01HUf(AH\>iqj<GDtV8X&)Y,nQl#$W/L:0e^`9_>BNa>95j>mcBLqB_DiI>]a/6-[e\Eg9>4`<*(N%`25`&Co0OO-1fLAbMoRI7'Zl^G!rXG.@uZXoYBP26a7+b;]lbNKUl2A439rm^U2L"$!8tIdMG>3"TSkm-9`T4S&iN2i;b5YC!"Rl%R`h3@[HjLi7]s]5ni[?C_>M6.=?n7*aPVBT&t?s[AP+L'5`\81=V7>:=U&3^T)p(:562J+J;JS,SNKCSU1V_,j@s$WfQiaN4>qn2%2O)E+s0sF#\G1<sa[pn_E.kRfV!Kh-X@lt(MY\'%4B2t\"*t%kj2og12P;UliStfqQR.n*fo@8Q1Y"?k;`S8tWtD0KOpA'BD?W"=%A=tZ`_*kqDkj;X6..WUcf7]]\<P`j:%3FgjC'^g*P<sFsLC#68E6_`"35<R/93Le\9j#El=i"UYX=%>@Vi2h*-tSX)DUMOS`XZNg%J+Y6!]q$*Xb$%[^;^Pddl>)NUeop^O2Ua?KAn'NG:DoD=%V0$up$#L>M`K329'\kZJ_gR9nBMWB%9WmM4V?$rW=^Le_OS--O\J"K%q-.s;pUuYDhVNImRn`>jaNNF!Om.;#9d9luZ0u_@@5NQ"0LU7BOm2@%$0WB[Tsq]P=b4&1.ng>UC3npIcd6i\3')2V_"?X"G]f"C%?mt$`Jps2;D@66"]j/5boZO9R!qC=:%Ol0N.-=/G^WkUrPn>o.P$*c.Y$\f[#cOk!=Y^[f.iaKC):4S3$#/1][#o>E"P)bFS?e^I%aRoRLY@@*0083;=o1gQ[T9(;4*/7MIR,?!/*_B0$SAfbAZ:fMR7a@0faU74)MD/ng*ls6XRm7M@(=9RJFDbVOfcc$.8h4Gq/oA.H%9jSW;A1`?`!uJ/!"mgD>9V>5rR&I3EUH=m`66a`^>OQmbg\/E?ZJs+me)q@Fm(!0^dTmF=Cto,]3cHH1fl)k."[ltCWKFWb>cMpD%.pcA(m,3PofgjulZ%E_B\j3XsiJP];j`@3<]MrZ4$sfQn6>`rk(%]]cP5_NaHJ1:YNOm4H5hoG.=AINY-$-\,/b2<fHJ\;>\=<pT%UEtJ/ZP:crS#2ON,ONTZm^TJeG.C+N74IGPih!d$qe[&_pD!%YkFd@S(I5EBgeAHt\?#0]2t^(*S\:@^ll<_*MQTU7,/VKRUKY<T%NYE)ZqET/f6WIUY;r8oX457&lWmKecl+A3T)mT^SBn7GU6ck$=Fs7S]nt1kT;k>H#;j4]"J^Wmb-8=sHHNY[1Q5oBij3B>3@^_VZ%Rhb>@$jg(CP=WA(orH]iTO/ak#\uI%&a+Ut";ZL?N;PTn(*4ks/VYZ6oiDo[QGKjN4PQos)H%>D,/*9?OA=(Z'0C6,PVeIFCO,JW%W./tYd?kjJ9-AN\jg.Nd)G1'j)o+ktPqggd%ui>&F/soNptZ?JbLpN,AQRi'1RK66Am/3O<H8URC5f_KF0fR]ar[Q?E\s7dB9[R;%lU71F-Sjq/,)q#n`PC+NqoK=?i#[b2ZO_$B.^BT7$(JW_#DAn$5X5jl&C@qDFRB_FQL39@-:GtA<Of%7H7FgDXU*3)(?]JS`>`/-%]BX/Ldb'CMliZ)lFPrJ+:Ofd+T8@s9l\,.kqi2>'VaLTi*!8[3a9h6p&?pI.5q1QDo&*%6(AVR#/(\+=3B7m^g[`GmUi4A2*'QC9%VNCtKfa"R5RmsnVeJ0'uSp%73M$CjEEg^)YY"B9=kV`_jNLIr,4e[/.83q?p7B.j=31%Z#DFA2],g_jt!$8j8!b]_j0+g_B'2/94%d<Q^7Z/2VcM^lD/c4Ypifs&U>/;,SDGj^F8Y^-<9UB`T1c@+lMjj/TpcT>!:,f48N<Ei4P3J;#/F$o-=k6>N?KM?ksOi2Nhn\FqW%U0Z$?=_I3enD-iemLA^>O?J[Q^NUlS-3M5h()(oQ4t42BPRgnXJ&X7pFnBO5^P&m$eBq@5m[j]6U))+S_cu*M/Z*UO:'%Y"1oCiG%F(SKLj`=1&]n+<C6t#\(!WX.H>"mG.rhLr./4>h9DlcKN;O!ZZ+`U*DgpBIUbk!6UkGD7CU*e=!>N@mq[c<OpPF>qqgJ-BehQ)HF%<#'BK5[k0q+)h4L&*+1Al5ejS52eEQYpo!N8$<L*<LW:<m>fAe-j)QUket"N\Jd<e!'5*e^6?OIcBQ"@iqf1<d16.HXhZ&p25P5&%[,f1mIY;Vm.kH*.3q]5gl/hIJ^$dYa2,1:QQISKTn,'#OqKq*d<pQq4;d\RFHhl&.87uS)WLmhU<17jT8N)!lJEkJX9jMF10CS`=%2n>Und$*#eC"u,j9\f#7UbBde<2=FNbnX!R*)'loJLgo8`q!$'YEBq<B[i@mIFD#I4_:&LLucjQFeBmu8kB9AV(bOo5QiS"!.Z23%S.i4l,CXA#j7C%a<$MQdfeoP]0+sG=Zi!jXfB]WT8;,lKqaF."8Ug['p]'04cLX8Ko65]Uq-Uf0J,eF(m$hqmo2#DaY<Mumqd2S`%m[HH;l(<IsGHZM2%Y2=oj1kDjTD^t[roL%Rp%,qFiJu66p?/(EkC<%u5QBDdH2[>1h[d"U]0H>_CX_j+]G"-^jeXfB1WTBl?Jk*b%=rl`&]W:>#5-O]fNq++F*Q3<uqY?1:?(_/j;]2dLFIotMH67CGF4n;%5fqqiL\)MP,sC^LpdX[GD-N/dOR`4$%%[^PfSMG.4nPZN%SG2Wherk+0cheG%4h_p#o/2iKib4O(qfce^O4U">&,082g%UqsT.0Zt:F-Hlh4)_Jdm1CUq*Y7!%a*YIc'lWt6lCbe-Xa/Dh-6r"%&%(qX`DFj`(s7@,*mX@7SEK)8q&196B\aG\dH9WDQeVB6>Gp]@_clfI)LIpFX*lD6:VZk6[J/kaJ*tY_9;W5'q!eU]hgJ&qj'T4_%5Q6i/.pDlM55m>"\ki<P1LWP+qWk2Q,NJ-a-/7Zh?>:%ooN.Y0jnNkV*3T\<$g,S.:#014A"'cqF_`lW6&Fqg.(&0!m+6]HQYu[0%4i]1fpKEOS3@OI]JC'p@Z=!W[>ecuqkW>N@+3U6C,'se,m5ZHhoq/#WVOlfg/9CZC,`t:rK`2sUrVFi[re@$)6\Vag7J0?3j$QPJ%X+\0p]h)jcePgk"W;cae@UF/9>#0VVb0k>JOq3_;?hYffCrH=E:U5CTb)p!9AbeoNe<;l_l^jpOVOte.#!C#JX'Agfj%0mSl^jpN%E8Sb*g]l\b<;H:WB0'?ppqQU55>KOPIf?Z<rD[uuRsq0@*MRs`p0.(5pX*O'p:KIB1>=iQ>Pn-CJ,<mnO5C<;O43-dEB\0YnF]p5%qGndZd>qVS(Ti,_l).mIqOcK_hkRk0/WZ\(,?(suYO5o:\$*KbCT,NoHmmDF5MOn%rR\f/[!u3ChssnLjer.L)Xm_$C%60391HY_%qkL\Sh_RR*4nrCIme=We;s85P%qU(@03\8PZ2_Y^J(I3*Do\WY:)a1jhRWLKqnf<#XI]#8+3O5_?aTP*U]5t1s3?])%U(i=g7L\g%cJL_@6*#EHMD&an+L-]O[^8OgNlE.Nr=@$JX.OL_K)!';q-P5FK\K#12a:;>[$+J8U[2iFh:^o0gP5^(bZ*Z0[;S;.pKt;*3.<CM%s+%.Y%/I#]hnCD'+8R8:EPHSP35$5Uc%Z.Z7!e@UdN7D_rn]s?6-4Uhe3Fr??*!hpCO]fLG-RrkYOQ,c-u\DrOZi<BX^>MPIouR)%aW^+7X5L?2q`BYs::0tk;LM'hY1c&PRG*"roui-g#H%OW*:b+:4H?ee6e$=q9\F:U?*JJ+LHZ:&1I'Xj'o)XAV>jg<o%.l^[+?t>%H(pgGguaIHb@nZKW3]u9c]QKl'N)-dhXB74+,R@n4kohiA*"4or"$,mIeE3>?-.&@2jrZRMI%cTV_C8Hr?\0kJ,$^TSKF0o+6D,$%`m,jb>XM&XD8pbAg.&H16lM8%>Mo04r4p8N8A9hmUPQ+Bc63n0h`J!ODjC1m454'_+,QedT5FOie)q67rK$Mb(cr9'\6MIP+aS;&%gnAh<r"@DD5MWGP^C%Z-+.2PH$,<kan8ipW?Z?8KJZ8TfmJRcZI;$h%2&j.k1giJ*s1doLDgU6be_g@&mo.)I-JNu$jaD4*`bUQZ%XXG:7nCqkGB^]HapLrE5TH8N@qo/5NVY+;8`+16=ki=JEoUp&>G43`ATg"Rs\)2Y]hT)qj^JFZ\lIArFs4:DHJ'G)#41V]gNg9oZ%LRP]?kM/Q_r:\kUgA>"GX*bf"h&_!pX8+e(LTbCd6_!AEgXq9nc.(C<r2WUXqL_"Is7HnPqWEA!PQ1C%ci3`)s7E'.rJ.$C`Adh]%B0Z26hgY1':Ohp+TD[Sb56']A5Q.Xtq8qNAo=nZ4oD(%gp<CojXa]m;kC<;/J%I#1T)ekc+8t05s#6SL5P65OoD~>%AI9_PrivateDataEnd