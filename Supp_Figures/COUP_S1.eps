%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: COUP_S1.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Anirikh Chakrabarti
%%CreationDate: 5/6/11
%%BoundingBox: 0 0 1036 408
%%HiResBoundingBox: 0 0 1035.8960 407.2021
%%CropBox: 0 0 1035.8960 407.2021
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 8580 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFF7DA87DFD37A8FD08FFA87D7DFFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FD07FF7D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FD07FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF%A8FFA8FFA8FF7DFD09FF7D7D7DFD05A87EFD0DA87DFD04A8AFFD08A87EFD%05A884FD07A87DFD05A87DFD06FFA8FF7DFD11FFA8A87DA87D7EFD04A87D%FD18FFA8A8FD09FFA8FF7D7DFD15FFA87DA87D7D7DFD04A8FD14FFA9FD06%FFA8A852A8FD10FFA827FD04527D7D7D52527DFD17FFA8FD0AFFA8A85227%FD15FF5252277D277D525252A8FD14FF84FFA87DFFA8FF7DFD0DFFA8FD0F%FFA8FD18FFA8A8FD04FFA87DFFFFFFA8FFA8FD17FFA8FFA8FFFFFFA8A8A8%FF83A8FD11FFAFFF52277D7D5252A8FD0CFFA8A8FD27FF7DFD05FF7D52A8%A87D7DA8FD1BFFAEAEA8CFA8AEA8CFA8AEA8FD0FFF7DFFA852FFA8FFA8FD%36FFA8FD05FFA820FFAFA87DFD1BFFA8FFAEFFA8FFAEFFA8FFAECFA8FD0E%FFA8A8A87EA8FFFFA8A8FD2BFFCFCAA8FD07FFA8FD05FFA852A8FFFFA8A8%FD19FFA8AEA8CFA8AEA8CFA8AEA8CFA8AEA8FD0DFFA8FF7D52FFFFFFA8FD%2CFFCAA8FD08FFA9FD05FFA87DFFFFFFA8FD19FFAEFFAEFFAEFFAEFFAEFF%AEFFAEFFAEFFAEFD0CFFFD04A8FFFD04A8FD2BFF7DCAA8FD07FF7EFD05FF%7D7DFFFFFFA8A8FD17FFA8CFA8AEA8CFA8AEA8CFA8AEA8CFA8AEA8CFA8FD%0BFFA8FF7D52FF7D7D52FD2BFFCACFCACACAFD06FFA8A8FD04FFA852FFA8%A853FD17FFCFCFA8FFAEFFA8FFAECFA8FFAEFFA8FFAECFA8FFAEFD0AFFA8%FF7D52FFFFA8A8A8FD2AFFCFA7CAA8CAA8FD05FFA8FD05FF7D52FFFF7D7D%A8FD15FFA8CF8383A7A8A8A87DA87D837DA8A8A883A883A883CFA8FD09FF%7DFF7D52FFFFFFA8FD2BFFCACFCACFCAFD06FFA8A8FD04FFA827FFFFFFA8%FD17FFAEA8277D5252527D527D527D7DFD045227277DAEFD0AFFA9FF7D7D%FFFFFFA8A8FD25FF7DFD04FFCAA8CFCACACAFD05FFA8FD05FF7D52A9FFFF%A8A8FD15FFA8CFA8A8A8AE83A8A8AEA8AEA8FFA8AEA8AEA8A8A8FFA8FD09%FFA8FF7D7DFFA8FFA8FD25FFA8FD05FFCACFCACFCAFD06FFA8FD05FFA852%FFFFFF7DFD17FFA8FFAEFFA87D7D52FD047D587D7D7DA8FFAEFFA8FFAEFD%08FFA8A82727FF7D527DA8FD29FFA8CAA8CAA8CACAFD05FF7DFD05FF7D7D%A8FFA87DA8FD15FFA8CFA8FFA8AE597D52A85252527D527D52A8A8FFA8CF%A8FD09FF7DFF8452FFA8FFA8FD25FFA8A9A9AFFFFFA1A87DA8A8FFA8FFA8%FFFFAFFD05FFA820FFFFFFA8FD15FFCFFFAEFFCFFFAEFFCFFFAEFFA8FFAE%FFCFFFAEFFCFFFAEFFCFFD08FFA8A87D7DFFFFFFA8A8FD24FF522752277E%527D52527DA77D525252A8FFA8FD05FF7D52A8FFFFA8A8FD15FFAEFFA8FF%AEFFA8FFAEFFA8FFAEFFA8A8AEFFA8FFAEFFA8FFAEFD07FFA8FF7D7DFFFF%FFA8FD27FFA8FFFFFFA8CFCACFA8FFA8FFA8FFFFA8A8FD04FF7E59FFFFFF%A8FD15FFAEFFFFFFAEFFFFFFCFFFA87DCFFFA87DA8FFFFFFAEFFFFFFAEFD%08FFA8FFA8A8A87D7D7DA8FD29FFCACAA8CFA8CAA8FD05FF84FD05FF7D7D%FFFFA8A8A8FD15FFA8FFAEFFA8FFAEFFA87D7DA87DFFAEFFA8FFAEFFA8FF%A8FFA8FD07FF7DFF7D27FF7DA87DFD2BFFCACACAFFCAFD06FFA8A8FD04FF%A827FF7D5252FD15FFA87DFD04FFA8FF7D84A8A8527DFD0AFFCFFD08FFA8%FF7D27FFFFFFA8A8FD27FF7DA8CACA52FFCACFA8FD05FFA8FD05FF7D52FF%FFA8A8A8FD14FFA8A8FFCFFF7DA8FF7D52A8597D7DFFFFFFAEFFFFFFA8FF%AEFFA8FD07FFA8FF7D52FFFFFFA8FD2BFFCACFCAFFCFFD06FFA8FD05FFA8%52FFFFFFA8FD17FFAEFFFFCFA8FFFFA827525284FD04FFCFFFFFFFCFFD0A%FFA8A87D7DFFFFFFA8A8FD29FFA8FFA8A8A8FFA8FD05FFA8FD05FF7D27A8%FFFFA8A8FD13FFA8FFA8FFA8FFA8FFA8FFA87D277D7DFFA8FFA8FFA8FFA8%FFA8FFA8FD07FFA8FFA87DFF7DA87DFD2CFFA8A8FD08FFA8FD05FF7D27FF%A8FF7DFD17FFAEFFCFFFA8FF7DAE7D7D52A8AEFFFFFFAEFFCFFFAEFFCFFD%08FFA8A85227A97E7D7DFD2AFFA8FD05FFCAFD05FF7EFD05FF7D52FF7D2E%52A8FD15FFA8FFA8FFA883A8A87D7D52277DFFA8FFA8FFA8FFA8FFA8FD09%FF84FFA852FFFFFFA8FD2AFFA87DFFFFFFCFFD06FFA8A8FD04FFA827FFFF%FFA8FD17FFAEFFAEFFAEFF52FF7D52287DAEFFAEFFAEFFA8FFAEFFA8FD08%FFA8FF7D7DFFFFFFA8A8FD0FFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD09FFA8CFA8FFCAFFA8FD05FFA8FD05FF7D27A8FFFFA8A8FD15FFA8CFA8%CFA8A87DAE7D527D5252CFA8CFA8CFA8CFA8CFA8FD09FF84FF7D27FFFFFF%A8FD0BFFCBFFA8FFA8FFA8FFA8FFCBFFA8FFCBFFA8FFA8FFA8FFCBFD09FF%CAFFCFFFCAFD06FFA8A8FD04FFA852FFFFFFA8FD17FFAEFFAEFFAEFFA87D%527D597DAEFFAEFFAEFFAEFFAEFD0AFFA9FF7D7DFF7DA87DA8FD07FFA8CB%A8A9A8CBA8CBA8FFA8CBA8FFA8FFA8FFA8CBA8FFA8CBA8CBA8CBA8FFCBFF%FFFFCACFA8FFCACFA8FD05FF7DFD05FFA852FFA87D7DFD16FFAECFA8AEA8%CFA77D7D83525252FFA8A8A8FFA8AEA8CFA8FD09FF84FF527DFF7DA87DFD%07FFA8CBA8CBA8CBA8FFA8FFA8FFCBFFA8FFCBFFA8FFCBFFA8FFA8CBA8FF%A8CBA8CBA8FFFFFFA8FFA8FFCAFD06FFA8FD05FF7D52FFA87D7DFD17FFA8%FFAEFFA8A8AEA8FD0452A8FFA7CFA8FFAECFA8FD0AFFFD04A8FFFFFFA8A8%FFFFFFA8A8A8CBA8A9A8CBA8CBA8CBA8CBA8FFA8FFA8FFA8FFA8FFA8CBA8%CBA8CBA8CBA2A8A8CBA8CBA8A8A852A8CFA8FD05FFA8FD05FF7D7EFFFFFF%A8A8FD17FFA8CFA87D52A87D527D5252A8A8CFA8AE7DA8A8FD0BFFA8FF7D%52FFFFFFA8FFFFFFCBCBA8FFA8CBA8FFA8CBA8FFCBFFA8FFCBFFCBFFFFFF%CBFFCBFFA8FFCBFFA8FFA8A8A2FFA8A8A8FFCAA87DFFCAFD06FFA9FD05FF%A87DFFFFFFA8FD19FFAEFFA8AE7DA852A85259AEFFAEFFAEFFA8FD0CFFA8%A8A87DA8FFA8A8A9FFA8CBA8A8A8CBA8CBA8CB7DCBA8CBA8CBFD05A8FFCB%FFA8FFA8CBA8CBA87DA8CBA8CBA8CBA2A252A17652A7CFCAFD05FFA8FD05%FFA87DA8FFFFA8A8FD17FFA8FFA8AEA8CFA852527D52AEA8CFA8AEA8FFFF%FF84FF7DFF7DFD05FFA8FF7D52FFFFA852FFFFFFA2A87D7DA8CB7DCB7DFF%A252527DCBA852FD047DA8A8FFA87EA8CBA2FF7DCBA8A87D537D7D275252%52277DCAFD06FFA8A8FD04FFA852FF7D7D7DFD18FFA8FFFFAECFA8FFAEA8%7D7D7DA8A8FFAEFD04FFA8FFFFFFA8FD05FFA8FF527DFFFFFFA8A8FFA8A8%A8CBA8A9FD06A87DA8A2FFFD04A87DA8A8FFA8CBA8CB7DA8A8CBA8CB7D7D%7DA87DA87D7D52277DCAA8FD05FF84FD05FF5252FFA8537DA8FFFFFFA8A8%FD16FFA8AEA8AEA8A852A8A8A8A7FD0FFF7DFF5252FFFFFFA8FFFFFFA8FF%A8CBA8FFA8CBA8FFA8FFA8FFCBFFCBFFFFA8FFA8A8FFCBFFA8A8A8FFA8FF%A8FFA8CBA8FFA87E7D7D7DA8CAFD06FFA8A8FD04FF7D27FFFFFFA8FD05FF%A8FD19FFAEFFA8527DFFA8FD10FFA9FF7D7DFFFFFFA8A8FFFFFFA8CBA8CB%A8CBA8CBA8CBA8CBA8FFA8FFA8FFCBFFA8FFA8FFA8FFA8CBA8CBA8CBA8CB%A8CBA8CBA8CAA17D52CAFD06FFA8FD05FF7D7DFFFFFFA8A8FD20FF5220A8%FD12FFA8FD04FFA8FFA8FD05FFA8CBA8CBA8FFA8CBA8FFA8A8A8CBA8FFFD%04A8A2CBFD05A8CBA8FFA8CBA8CBA8CBA8FFA8A87D7DCAFD06FFA8FD0AFF%A8FD21FF5227A8FD12FFA8A8FFFFA87D527DA8FD05FFA8CBA8A8A8CBA8CB%A87D275252527D7D527D527D7D7D5252277EA8CBA8CBA8A8A8FD05FFA8A8%7DFD07FF7DFD09FF7E53A8FD20FF7DF87D7DFD11FF7DFD04FFA8FFA8FD09%FFA8FFA8CBA8FFA8A8A8FFA8A8A8FFCBFFA8FFA8CBA8CBA8CBA8FFA8FFCB%FD06FFCFA7CAFD07FFAFFD09FFA87DFD21FF7D27A8FD12FFA8A8FD05FFA8%A8FD0BFFA8FFA8FFA8CBA8FFA8CBA8FFA8CBA8FFA8CBA8FFA8FFA8FD09FF%CAA8A1FD07FFA8FD0AFFA8A8FD1FFF7DFF7DFD13FFA8FD06FFA8FD2DFFA7%A8FD07FFA8A8FD09FFA8FD36FFA8FFFFFFA87E527DA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFD09FFA8A8FD22FFA8FD13FFA8FD%04FF7D7D59FD04A8A9FD07A8A9A8A8A8FFA8A8A8A9A8A8A8A9A8A87DA9A8%A8A8A9FD07A8A9A8A8A8A97DA8A8A9A8A8A8A9A8A8FD08FF527D52A8A8A9%FD07A8A9A8A87DFD04A8AFA8A87DAFFD04A87DA8A8A9A8A97D7DA8A8A8A9%A8A87DFD05A87DA8A8A9A8A8A87DA8FD05FF7DA8FD07FF7DA8FD07FF7D7D%FD07FF7D7DFD08FF7DFD08FF7DA8FD07FF7DFD09FF7D5252FFA8FFA85327%7DFFFFA8FF525252FFA8FFA859527DAFFFA8A85253A8FFA8FFA9A852FFA8%FFA8FF527DA8FFA8FFA85252A8A8FFFFA8527DFD47FFA8FD0DFFA8FD21FF%A8FD07FFA8FD0EFFA87D7DA8A8A884A8A87D7D7DA87D7DFF7DFD06A87DA8%A87D7DA8A87DA884A87DFFA8A8A8FD1BFFA8A8FD08FFA8AFFD0BFFA8A8FF%FFFFA8FD05FFA8FD1BFFA852FD042752277D527D527D27525227277D2727%277D527D2727527D2727527D7D7D592728A8FD1BFFA9527D537D5252527D%527D277D527D5352527D527D527D527DFD075253FD047D527DFD18FFA8A8%A87EFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFFF%FFA8FF7DA8FD1CFFA87D537D527D525253A87DA8FD047D52847D7D52527D%A87D7D52A8537D527D52A87D7D5227A8FDFCFFFD0CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2011-04-25T11:45:06-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9M6/o6azpFxprzy2y3AU&#xA;GeAhZF4sG2JBFDxoR3GKsP1htG8oRavqGoXF/c28MVtcMkNxMkstxdTzRnjHA0SszcErt0FT3wqy&#xA;uHRdLnhjmhuLuSKVQ8brfXhDKwqCD6vcYFXN5dsSVPr3o4mpAvrvfYih/e+9cVb/AMP2H+/bz/pO&#xA;vP8Aqrirv8P2H+/bz/pOvP8AqrirDPO/m7yx5Nns7G8TVr67u4wYEt7u6Zmdpo4I0NZlHOQyMwAH&#xA;RGwqhtN8/wDlfUdVksLey1wCF54rid7i7VI5IOC8WPr0BeSURrU05d9jiqjP+Y3k+3hgmMWrH65p&#xA;9nq0KyX8sSiK9ChI/UkuUQMtatVqDx3WqrPLHS9MvbK3vIpL5YrmJJo1e8vFYLIoYBlMuxodxgVV&#xA;Pl2x5hvXvaAEcfr13Q1puf3vamKt/wCH7D/ft5/0nXn/AFVxVp/LtiyMonvVLAgMt9d1Fe4rKcVb&#xA;/wAP2H+/bz/pOvP+quKu/wAP2H+/bz/pOvP+quKteXFZdMMbSSS+nc3kavM7SvwS6lVAXcsx4qAB&#xA;U4qmeKsV88+XTe2U+pxajeWU9jGlzGlvJxjZ7IvPGHQgggufi8aCtcVS3/FDr5+Hkw3+om5MAnF5&#xA;xseH2C9Cv1cHovXxwqyltJ1Elaa1eAA/EOFmaih2/wB5/HArf6Kv/wDq83n/AAFn/wBk+KtDSdR5&#xA;k/pq840FF4Wex3qa/V8Vb/RV/wD9Xm8/4Cz/AOyfFWl0nUQPi1q8Y1O/CzG1dh/vP2GKvMz+cekt&#xA;eS2SXmsCdHhCN6emtERM8ir6sioUgNYviExVlB5EUVqFURpv5s6fe6dBqPra5BaXV82n280kFhwZ&#xA;k58n5LEV4qYyDSvbuaYqynyjqknmfSxqdnqt/DAHeJo5F09yWHFgVkiikRhRux67HcHAqefoq/8A&#xA;+rzef8BZ/wDZPirS6TqILV1q8IJ+EcLMUFBt/vP44q3+ir//AKvN5/wFn/2T4q0mk6iEUNrV4zAD&#xA;k3CzFT40+r4qoTQ6jZ6jpf8AuUuJ4p7h4p4ZUtuLL9WmkG8cMbCjop2bFWA+UfKvnmLWPPFnNr09&#xA;r9ZuEfSI5Zmu/Rge5mkjlHOaV09SCkR+wduh4qxKsw8r6ZrNlr2rrq2pfpSWZIJ4pDEI/TjeW44R&#xA;KAacUoffArKAAoAAoBsAOlMVdiqje2xurWS3E0lv6g4+tC3GRfdWINDiqpGnCNU5F+IA5tuxoKVP&#xA;virmjjYgsoJFCCQCajp91cVbVEUkqoBPUgeO+KrWggYcWjVloFoVBFB0GKr8VdirsVWTTRQpzkbi&#xA;vSvv9GAmkgWuVlZQymqkVBHhhQ3iqWeXA406QOQz/XL3kVHEE/XJegJb9eKsP/PO51ix8jy6ppKT&#xA;vdafJ67eg9ygSNY3LSSfVmV+KEA1Ow6kqPiVVNPOKedv8PXX1R7AqbKMX5kEooRyN60QFa8otow3&#xA;Q9cKsrjhUMJXVDccQjzKvEnuQKkkCvauBVTFXYq7FXYq7FUJdNaQqymJGeSpKcRvWoJb7zkZSpBN&#xA;JdLK8oo9OANQgFFBPt9OUmZLAlDT2dtNay2siD0JkaORFqlVcENQrQiteowWUWirOaS0ijhiJMMS&#xA;hERiW+FRQCpqckJlIkm1vcxzpVdmH2lPUZcJWzBtVwpdiqWaty/SGi0Ip9cfkKbn/Q7jpvirzX8u&#xA;tRtrWPzzH5U8uW9vqem6kbae2jupZmuJo55I2d/WjgVQIxzUK7cq0JBwqzXyvfa9d69q76vYJYMs&#xA;cCW0ayeozQCW49N2IFOTVNadPfrirKMCuxV2KuxV2KuxV2KuxV2KuxVIfMCyy3tpwnaOO35PJEtO&#xA;MnNSoDf6v2hlOWXRvwx6o/RpeVsUJ3jbb5Hf9dcliOzHMKKPyxqSzy4XOnSFwFf65e8gp5AH65L0&#xA;JC/qxVhv53tYweW7K8vIbOWKK8VP9P8Aq/pL6iN8Qa5s79Fb4djRP9bsVU48/wDmSTTNKvbQadc3&#xA;QuLcRC4iWsYNx6kZqwrT0wvJq9j1whWWIxZFYqUJAJRqVBPY0JG3scCt4q7FXYq7FVk8ywxM53p0&#xA;HicBNKWOrqllczTKl1FLNE/CdVdSyP8AysAfhPscoNlqK2bULCFolmuYo2mbhCHdVLtStFqdzQ12&#xA;wUqnDrWjTTCCG/t5JzWkSSoznioZvhBrspBPtjRVXku7SMKZJ40DGi8mUVNK0FT4Y0qpbX8Kyo0M&#xA;yM7AlVDA8lFC1KdR8Q/DDEkJGyfxusiK67qwqMyGxvFUs1YkahoooSDePU7UH+h3HXFXmP5Y+Y/K&#xA;2mf481hH1FI7fVANSgv4qTRys7RqtfrFyZCCwTmeHwqtRUFiVZ95f8w6TrPmLVm02b147WC1t5ZA&#xA;rBfUVp3IBIHQSDArI8VdirsVdirsVdirsVdiq2USGJxEwWUqQjMKgNTYkbVxVR09L1LKFL6RJbsL&#xA;SaSMcVLeIGKpPqTcr2UjoCAPoAH68xsnNy8Q9KJ0RiJZU/mUH7j/AG5LCwzjkm+XuOlnlxw+nSOK&#xA;gNeXpAYFT/vZL1BoRirz7/nIiBLrylY2bXEcPq30bhZ57C2hYxgsOb3zRg8PtcUNWAKmla4qznzr&#xA;qFtYeVtSmuSVjkha3UhS3xzj0krToOTjc4qnSOkiK6MHRwGVlNQQdwQRireKuxV2KuxVAak5Z0jH&#xA;RRyPzOwyvIWMmD3/AOVPknULq9urywaaa/5/WCZpgP3hYvxCsAvLm1SN98jxFjbB9IGi1sbSXylq&#xA;8UWqzPNLGWlMMKtLFWB2RYwyn0VcxydeJWp+yZm+9Ldhf+RIrmS1tfKGqPeiF9M+rlTKYoGlaF1X&#xA;jLIY0/0iVi4FQpb2GAgqp6PoPkLVJbON/I2rWR1CRoecyzBY1KSW5aZudAoj5DuAGWm5FE33ru9B&#xA;8s/ln5P8s3P1rRbE20/D0y5lleq0A35s1fs5AyJQTbNdNc8GjP7JqvyOWQOzKKMybJLNWZRqGiqS&#xA;AWvH4juaWdx0xVhH5f2KeXj5t1TXIotPhvr76zd1lhlT1pZHMlFheVuLSSDh6n7w148QFUYVZdo+&#xA;p6df+YdUawnSdLeC1gmaPcLKklxyX6ARgVPMVdirsVdirsVdirsVdiqX+YNNvNS0i4sbK/k0y5m4&#xA;BL6EAyR8XVmKg7VKgj6cVYnpfkz8xrTULCa687Ne2drIXubaSyjX1lIA4FkdSO9K1++hCqTzeSPN&#xA;rCVJPNlybguUklWPiGQI0Wy8/hf4i/IH7QWtQKZTKQvk5EYmuacReXfMpb0tP8wS2shKcZXiWYmO&#xA;NGUxnmTu9VZn61HvjjO7HKNk18q6B5w06/urnXfMX6XgnjjWK1FukCRyIAGkUgsw5U+zWmXNKa+X&#xA;/wDeCX/mMvv+oyXFWDfn7px1TydDprW8ssM90rNJCjyFXjjcxqAg+FpHIVHYqindzxqpVZn5qvLO&#xA;PQNUhlnjSU2ctI2ZQx5oypsTX4mFB74qnGKuxV2KuxV2KoCdeU8h7VAH0ADK5c2JaEWCkUhtUu7b&#xA;TdOuL+5NILZDI26gtToq8yq8mPwrU9cIitIDStQtHs6pbQ2mqXIluDpKyw+s8in4uXE0LGg5E9O+&#xA;JitIzSV1eS1MmqQxW87tyjgiYuY4yAQkjfZLqahivw+GJitIwxYKWl9qOM4/ygR9PX+GSikI3Jsk&#xA;t1X/AHv0b/mMf/qDuMVeZflFotldeYPzOjvIYrmzvNelD20jLLX05ZT8adV+PdeXsRtQlV6FpGk6&#xA;Xp3mHUUsLSK1WS1tZHESBKs0txyJp48Riqe4q7FXYq7FXYq7FXYq7FXYqoXcN3I1ube4+rrHKHnX&#xA;gH9WMKwMe/2akg8h4Yqx++tbhtV0+6+uC3tkeVZ7djxE7zLSNd+pVqkDKa5t18k2to+Fyh+f6jhg&#xA;N1mbCY5a0pZ5cRI9OkRFCIt5ehVUUAH1yXoBirBP+cibWyu/y9Fvd/WSj31twWzhS5mZgWNFidk5&#xA;fCCTTf6K4qnvnzyJ5Z1a0vtYvrZpL+2tWeGQSyKoMCmRKorBT8QFajCrMERI0VEUIiAKqqKAAbAA&#xA;DAreKuxV2KuxVIrnRdPk15NVlVmvLVTHAebBFDBqngDQkiUjfIEsS7V7W/uvqP1K4+r+hdxT3O7L&#xA;6kCV5x/D15VGx2xBViP5hQatpt3/AIh017u/mhhllTSHRprEmNED+oa8YwY12FN2qRvkgVYn+UN7&#xA;Lf8Amm01WeCKE31lczRSWzqokY3DLKJY3FQystAsdNgCa9cJKXtxmByFotYZBgtW4DynWnapPy6f&#xA;xwxUIvJsks1ZVOoaKxAJW8fie4rZ3HTFXnXkjQdU1S8/MDS9Q1q7msJ9T4WDfWhNLbRpPK5jjrNc&#xA;lY6jgQwUmjAqKYVZj5Z0EaRr2robye9e4it7hpbhgWBkluPhooVaDj4YqyfArsVdiqx54UNHkVT4&#xA;EgfrxVTa+sx/u5D8jX9WGk0Wv0hZ/wC/R+ONFaK8XdqekyH/AGQ/rgpaVFZWFVIYeI3xQ3irsVSS&#xA;0C3hcahYKotbjlZmUxy8uABSdKV4GrED9oZDq2VsmCspuUp4n9RxHNB5IvJsEs8uIE06RBUhby9A&#xA;LEsf97JepNScVef/APOSMNs/5cmSaCK5MF3FLFBObr03ZUckFbVkcnjWnL4R1NOoVTz8wPL/AJpv&#xA;Ib69sNfaw02O1rPYLEr+osXKSReZPw+oo4natD8sKs2RSqKpYuQAC7UqSO5oAN/YYFbxV2KuxV2K&#xA;pffApMG7OPxGx/hlc2Mkr1mT/cZO5unskiUSyXMY5MiREO9BQ1qqkZAFiwTzsVa21q+keSzsbiKF&#xA;rV4o5J11CWSH90kkZD8eDRAfZA3+LLIlIY7+VU2pRfmJe2+oSWvqNbSztBGkqNFMzpzVVcrGslG4&#xA;sEXYKR2wzOyS9q9XKrY271MbVFaeCzO/YfCPp3P8MsgyijcmySzVgTqGimpAF49RtQ/6HcdcVeef&#xA;l/5X816Tpvmy4s9Mg0bW9UvfXtYHe3ktuPquX4G3eY0+NwvqLVTQfZAClWbaINZ/xBqR1NoOZtrQ&#xA;xpAGoELz0FW8G5dsCp3c3cFsnOVqA9B3PyGEC0gWk1xr87GkCCNf5ju39MmINgxoJ7q6mP7yVmHg&#xA;Tt93TJUGXCHRpiqJjirgRaoYNumC0WoSR0wpUGqpqpofEYUqi6xd29C09QSFAkNak9BU774DEIMQ&#xA;mlprsMhCTr6TH9obr/ZkTBgYJLq/mjTtHgvru/EsFnZSBPWKFlk504+nxqT9rjXbfMYjdsB23Tqz&#xA;k53SDwr+o4wO65BsmmXNCWeXA406QOQz/XL3kVHEE/XJegJb9eKsI/PSxm1DQtMsYNKlv5pb1Ctz&#xA;FZNf/VQoNZCiRTMnX7VO24YVRlU389L569DUTpbWP6GNnSYXBcSgBq3BTip+IwclWppWngalWZIX&#xA;KKXAVyByVTyAPcAkLX7sCt4q7FXYq7FVC8gMsJA+2u6/0yMhYQQkV3eW9nbSXNw/pwxDlI9CaD5A&#xA;E5QGt515rutJ1HQoNavpm1CCW74RW1q0gCRNG6GPdY5qSqis4oDXptvlsedMgxT8vdV1ofmBp8N7&#xA;ZmG4SGSCaBoBGyRzAyiTdVJLEKS1A3EDtkp8knk9viN99bnMpiNpRPqoQMJAaH1PUJPE7040GUWw&#xA;dZ31remUWsglMErW8oWvwypTku/cVw0VpkNvCIYVTuN2PiTl4FNgCphSlmrcv0hotAKfXH5Gu4/0&#xA;O46bYqwb8npdOnv/ADHcafp0GmwNJbo0MFxJdEuhmLGVnWP05Pi+KKnJf2tzhKsp8v3mrXHmTWhq&#xA;Nl9U9JYorUhlYSW6T3IilNCSC43pTbAqV63farJqDCC2Ei13kdwqqA9CnHrXjvXLRybhsNkOt5eD&#xA;T0uJLJ1uWKh7MMjsvJwp+IHiaA8skytbPPqX1yV4Y39CziZ/QolLp3UlVRyfgKFae9cCCoeX/MOv&#xA;ahfrBd+Xp9PtihZrySWMqGGwXhRX3+WRtjZR36X81RXVwP0Qj2NvP/fo7NJJbADaOECrSkk9+OAs&#xA;SSj9P1vWLxokl0C5s1lkass8kQVYF2DmhLc2bpHx6b1wIBXajdX8V2kMFg9xA3DnciSNVXk/FvhY&#xA;8jwX4thv065IMgUqvb6+utOu30uJluopBHA0gQpIAVJkj+MKyFSaEkYWV9yjr97Da26ySWL3zITL&#xA;EioGVXiHJWLGoQ/yt44SkljWqeZ9de2tL7T/AC3fS6kHmhjt5PgjReCM0ku6hlNaLv1BpvtgtiSe&#xA;5gvmj8x/OljpCyTwzwvApMl3b3cAjRmm4BpYoql68uPFWpX5EZSYi0GRfQPlK7mvbW2vJo/RlntU&#xA;lkh/kaQKxX6DtlWMblnlOwZFlzQlnlxi2nSMVKE3l7VGpUf6ZL1oSPxxVhf54alBY+W4maXVIrmT&#xA;6wtj+irmK0L3H1dxGkkkjoTVj8CxhnY7KjHbFUx8++cZdOhvtJGk3dys9pxF7EhMKmflGatQgcR8&#xA;XXsemFWaoxZFYqUJAJRqVBPY0JG3scCqcF3a3BlFvNHMYJDFMI2DcJFAJRqE8WAI2OKquKuxV2Ku&#xA;xVKVt724tluZ7YWt0xb1bVZBKBRiAQ4Cg8loemVzhfJiQxjXvJ1hqUM4gZtOv5poZ3vYBSQSW5PE&#xA;02+KjsK++QEiGNsEtdKl0Hzxo91Mt1fXZS8t5J7l1E900ZbjIhlf46Qui02rQdMnzCej1S2uFn9N&#xA;AClw8ayG2anqqG/mUE96jwyqmNJzZWXpfvJN5Ow/ly6MKZgUpW0GusbGW7uoUaNZBf28EZMcrNT0&#xA;yju3NAlPetcmyRGnDURaINRMLXlW5m3DLHTkeFA5Zq8KV364qhNWJGoaKKEg3j1O1B/odx1xVIdF&#xA;8u6D+XmnapfPqd7c210/1iX67JHIVZVY8YgiRbt/lVJ2qcVR3lzzBput6ze3ens7wGzs6OyMnVp3&#xA;/aA7OMVRup6O0rtPb/bO7x+J8Rk4yZxnSSPG8bFXUqw6gihyy20FtTiqSax5/wBA0PVotM1EzJLK&#xA;iyLKkRkSjEqAeHJ61X+XIksCVWx/NTybcQXc1vdvILJDJOvpSKwVZhbmnMLX978Ap1IyLElBW3nn&#xA;yM8WmafDYXaLHcJc2UHpMojaUzv9YLc+PBVV3bc0DDbcYEbI7U/zK8qWJUX1xJbM7cAJIZdj9Ye1&#xA;HIqpArLERv8AM7ZJlbvKeu+X9Z0WO50En9HxsYlUxvHxYAMVo4H8/UbYQyimhyTJXtLC5uT+7X4O&#xA;8h2UYDIBBkAxXzt5Gto4xFptjGktrBLc2t2WjEa3FeY5xSAo1WU8S/wrUnMWcqKIiwyj8tYtUXy3&#xA;bPqvM6gYx67PIs55Esx/eJ8LChFKdqYw5mmOQmhbLMsa0s8uOH06RxUBry9IDAqf97JeoNCMVS3z&#xA;x5DsPOFpa215qF9p62shlSTT5Eicll47s8cvTsVoR44qivOmp2Fh5av2vJ1gFxBLbwFz9qWSJuKD&#xA;3NDiqdI6SIrowdHAZWU1BB3BBGKtJFFGWMaKhdub8QByY7VNOp2xVdirsVdirsVdiqyW3hl+2gY+&#xA;Pf78BFrTwHzzq08X596Jp2p3kUWhWDpc2oVHMiGWJOUbtxavqSp+zWg7rXERCKe46Q2l3kKapaWw&#xA;iedDH6rxhJiiO3wsSOVOVSAcNUlMMVdirsVSzVmUahoqkgFrx+I7mlncdMVRl/d2dpaS3F7IsdrG&#xA;jNKz9OIBJ277dsVSjQtX0vVNb1C4024S5gW2tI2kj+zyD3BpX/VYYqn2Kqc0UEgCzKrctlDU60rt&#xA;92KoOTQ7JiSvKM/5JqPxrkuIsuModvLycvUWRS42BZN6fOuHiTxqUfl6MSi5jSAytGIxMFHIx15B&#xA;eQFeNd6dMeJeJX/RNztQx7dNz/THiXiWHRGlJV3jIBowpyoSPD5NjxLxqkfl+BdmkPHwRQv9cHGv&#xA;GiYtM0+JgBGGehI5nkSB3odu+AyLEyKM6bDAhKfMllJcWMrRJHI4jdCkwrGQy7cx3Wv2vbK8kbbc&#xA;cqRGiWUlnpdvBKkccyovqxwikatxA4oOyilBkoigwlKyjskxS3y+QbCWn/LZff8AUZLiqZYqkHnZ&#xA;NGuPL99BqHoSSRwST20UxTksoRljdA2/LkaAj5Yqn+KuxV2KuxV2KuxV2KuxVh48heXD5q0bW9Qv&#xA;JLvzJpkDx27ySIDMlHHN4aHkU9U0YdNsVZhirsVdirsVS3Vf979G/wCYx/8AqDuMVRd9p9jf2zW1&#xA;7bx3Nu/2opVDqainQ/PFWM6X+XelWWvXt80NpJp9xEqW+nC0iVIWDsxZTQn4g2/4U7m1Tv8Awz5c&#xA;/wCrVZ/9I8X/ADTgVIfNWheXrNbK7mn0zRbCK5i+sG4tLc+sA4YwrI5ThzVSKgHauFUxFp5DPSHS&#xA;jVS4otv9kAsW6dKKT9GBUD5gs/Jq6LfNby6RpsyRsBfyw28scLclTk6Bo60Z1H2huRhVC6Kfy8st&#xA;IFpfXuj3l3pFvGuqXjJbJuIy3qOOg5KjN17HFU2lg/L6JEeWPSY0lKiJmFsAxZuKhSetW2HvgVKt&#xA;F0Ly7Z3upXGpXek3sN28cllGIbeJYY1jHLar1r1qNqU2rUkoTNB+Xb3Nzaqmkm4syFuouNvyjJUs&#xA;A4pt8Kk/QcCUof8AwBd6lHd2upaMLDT3kS9tEitG5OqOro8taqVZlbjT9nCqcSx/l7EGMiaSoRS7&#xA;1W22VRUn6AMCoDzBpHlG/wDL80enzaZYS3MSS298IrdgIy4+IDaquFKVH0b4VTu28ueWnt4nGn2U&#xA;4ZFImW3ho9R9ocVpRuu2BVT/AAz5c/6tVn/0jxf804qv0PSl0rT/AKkjK0azXEkYjjSFVSad5UjC&#xA;RgL8CuFr3pU7nFUfirB/On5W6d5hvP0hBO1nfyGIXMhaWRZEhk5qvD1Ai05N0XfavTDapvoPlJ7L&#xA;SLa01LUr3Ub6FeM1613dIZDUkMVWWlabGn3DAqU6x5B1+81tLuy8yXFnpyekUsy1zK6sj1lIka43&#xA;9WOqVp8IJphVkf6C04syLPdl1pyX69dkivSo9bArG9H8ga9a6yLzUPMd1fWhM/qW4kuYmdXblAnI&#xA;TmghBNP7cKprr/lwTaVdW+n6tcaXfNGRFeyXV1KIiwKq5Rp0B+LxOBUP5Y8m3On29xFqmrXWoSyS&#xA;mWFkurqIJGyjagl3LOGYn3wq7zD5JvdQe1GnazdafDFKkk6ma6mZwhLUBeeg3p2264qmcHl+zt7O&#xA;MXV3dySRRqJrhr27QMyijOR61BU74FS6/wDJUMnmDT9VW/uIba0jmjuIWuLlnkEi/CBMZeSAH4jT&#xA;w+eFU2XQtOb7M92dgdr67Ox6H+9wKkvlzyXdacGGq61dajNLFEppcXMPKVGkLzHjNUl0ZFp0ATbv&#xA;iqK1/wApy3unPbaVqt3pt8xVkuvrV1LxUMOXwNMK1GKteXvKD2GkxWuo6hdXl1GXrMl1dxrwLkxo&#xA;qiXYIlFxVA+YvIuq31/bXWk63caeLZSY0kkuLmkxqpkHqSkVMTsnTbCrMsCuxV2KpZ5g8uaVr1pH&#xA;a6ishSGQywvBNLbyI5jeFiskLI45RSuhoejHFWBj/nG38pVcFdMmWP0mhkhF3cBXDEMCx58qqwqK&#xA;N864qjrT8hvywtJL2WDS5Fk1COSG6Y3NweSTMruADJQVKDp226YqjNT/ACb/AC71IXIutKH+mFGu&#xA;mjlljaT01ZUDMjAmiyEfd4Yql8v5AflfK1s0mmzMbR2kgrd3J4s7c2O8nd/ip44qt1H/AJx5/Ke/&#xA;upLq40hxNKSWZLm4QbinRZKbDpiqZ6r+TvkHVYZYL6ymlt5TUwfWrkRrXc8F9Si8m+M06tviqjb/&#xA;AJJflvb2X1KDTHjtfVE/pi4uPtrGIlNS9dlUfTviq7SPyV/LfSEZdP0r0C/Or+tMzj1UCMA7OWA+&#xA;FTQHqAeuKqN9+SPka8uLC5KXcVxp0iPbypcOx4xkkREScxwIbj0rTYEYqzm0tbe0tYbS2QR29uix&#xA;QxjoqIAqqK+AGKquKuxV2KuxV2KuxV5/rn5O6dqus3mqprOoafNemYypZmCKpngMB5SCL1nCA1QO&#xA;5CnpiqTr/wA4/QEVfzj5gWTcc4LoRfD6okXbi3xAKAT3O9O2Kph/yory1LafVb3UdRvVNnDp8ss0&#xA;ymZ4ob2O++KUIHqzwqla/Cuy02oqsP5G6eGZ4fMWrwSFPTWSOaMEIGDBG+D4kWh4qdhtT7Iw2qz/&#xA;AJUPpX1F7X/EWtCR5J5TeC5AnJnCr8UnH4uIUAV7YFXWH5Gadai8EvmPWNQS7VB6WoTR3cStHcrd&#xA;I3pzRuj/ABJQhgQQT3Oyq1/yG0WTUobyfXtYmihd3Sxa4T6ueYKgGNUUfCDT5UHQUw2qyz/IHRba&#xA;S2YeYdbeO2SOIQm7CI8cSSKqyemqFqer40oONOO2BUdafkzYWen29ra69qiTwI8TX7SRvcMkrXbO&#xA;ebRkLIf0hJ8YHLZfDFUT5I/K4+WPMN5rM2u3urPPAbW1gum+CGJnWR9qkM3KNQpAXigC02xVnWKu&#xA;xV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>14.736111</stDim:w>
            <stDim:h>5.822835</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -407.202 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 407.202 li
1035.9 407.202 li
1035.9 0 li
cp
clp
[1 0 0 1 0 0 ]ct
856.081 298.468 mo
827.624 298.467 801.842 283.701 783.147 259.766 cv
764.455 235.833 752.878 202.74 752.878 166.175 cv
752.878 129.611 764.455 96.5179 783.147 72.5847 cv
801.842 48.6493 827.624 33.8831 856.081 33.8829 cv
884.539 33.8831 910.321 48.6493 929.016 72.5847 cv
947.708 96.5179 959.285 129.611 959.285 166.175 cv
959.285 202.74 947.708 235.833 929.016 259.766 cv
910.321 283.701 884.539 298.467 856.081 298.468 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[426.815 0 0 95.3157 856.078 166.175 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*!.bn*!.bn*!._m*!._m*!._m*!._m*!.\l)ZhSk
)ZhSk)ZhPj)ZhPj)ZhPj)?MDh)?MDh)?MAg)$28f)$25e)$25e(]c#b(]bua(]bua(BGi_(BGi_(',]]
(',Z\'`fNZ'`fNZ'`fKY'EK?W'*03U'*00T&cj$R&cj!Q&HNjO&HNgN&-3[L%fmOJ%fmLI%KR@G%074E
%071D$iq%B$NUk?$3:_=$3:\<#ltM9#QP;6#65/4"onu1"TSi/"TSf."98W+!rrK)!WW<&!<<0$!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko
*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko
*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko
*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko*<Iko
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.994382 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[426.815 0 0 95.3157 856.078 166.175 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!!**$!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mgnE#mq"H$4@4L$OdFP$k*OQ$k3X
T%1WjX%LrsY%M''\%hK9`&.fBa&.oKd&J5Te&J>]h&eYfi&eYik',)&o'GM5q'GM5q'GM8s'bqGu'bqK
"()@Z$()@]&(Ddl((Ddl((Ddo*(`4),(`4),(`4,.)&X;0)&X;0)&X>2)B'M4)B'M4)B'M4)B'M4)B'P
6)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_9*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E
3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E
3%!<E3%!<E3%~>
<~!!!!"!<N<(!WrN-"9er4"U5/9#7(S@#RLeD#mq"I$OdFP$k3XT%1WjY%hK9`&.oKd&J>]i',2,p'GV>t
'c%Q#()Ic'(Dmu+(`=2/)&aD3)B0V7)]Th;*$$%?*?H7C*ZcCF+!2UJ+<VgN+X&$R+sJ3T+sJ6V,9nHZ
,U=Z^,pai`,palb-71&d-71)f-RU;j-n$Jl-n$Mn.4H\p.4H_r.Olnt.Olr!.k<,#.k<,#.k</%/1`>'
/1`>'/1`A)/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
856.081 299.468 mo
856.081 299.468 li
827.266 299.468 801.197 284.508 782.359 260.382 cv
763.517 236.253 751.879 202.951 751.878 166.175 cv
751.879 129.4 763.517 96.0977 782.359 71.9691 cv
801.197 47.8429 827.266 32.8824 856.081 32.8829 cv
856.081 32.8829 li
884.897 32.8824 910.966 47.8432 929.804 71.9691 cv
948.646 96.0977 960.284 129.4 960.285 166.175 cv
960.285 166.175 li
960.285 166.175 li
960.285 166.175 li
960.284 202.951 948.646 236.253 929.804 260.382 cv
910.966 284.508 884.897 299.468 856.081 299.468 cv
856.081 33.8829 mo
827.624 33.8831 801.842 48.6493 783.147 72.5847 cv
764.455 96.5179 752.878 129.611 752.878 166.175 cv
752.878 202.74 764.455 235.833 783.147 259.766 cv
801.842 283.701 827.624 298.467 856.081 298.468 cv
884.539 298.467 910.321 283.701 929.016 259.766 cv
947.708 235.833 959.285 202.74 959.285 166.175 cv
959.285 129.611 947.708 96.5179 929.016 72.5847 cv
910.321 48.6493 884.539 33.8831 856.081 33.8829 cv
960.285 166.175 mo
960.285 166.175 li
960.285 166.175 li
0 0 0 .25098 cmyk
f
417.388 349.672 mo
417.386 349.672 417.384 349.672 417.382 349.672 cv
417.38 349.672 417.378 349.672 417.376 349.672 cv
415.825 349.672 414.235 348.765 412.624 346.877 cv
409.806 343.58 407.08 337.38 404.64 328.866 cv
402.292 320.689 400.192 310.381 398.421 298.406 cv
402.294 293.288 404.381 287.874 404.382 282.258 cv
404.382 282.258 li
404.382 282.258 li
404.381 274.948 400.844 267.98 394.439 261.562 cv
393.115 243.889 392.381 224.41 392.382 203.955 cv
392.382 163.603 395.236 127.069 399.844 100.65 cv
402.147 87.4421 404.891 76.7604 407.919 69.4192 cv
409.431 65.7495 411.017 62.9167 412.624 61.0331 cv
414.235 59.1454 415.825 58.2382 417.376 58.2382 cv
417.378 58.2382 417.38 58.2382 417.382 58.2382 cv
417.384 58.2382 417.386 58.2382 417.388 58.2382 cv
418.94 58.2382 420.53 59.1453 422.141 61.0331 cv
424.959 64.3304 427.685 70.5301 430.124 79.0444 cv
437.463 104.601 442.384 150.996 442.382 203.955 cv
442.383 244.307 439.529 280.841 434.921 307.26 cv
432.618 320.468 429.874 331.15 426.846 338.491 cv
425.334 342.161 423.748 344.993 422.141 346.877 cv
420.53 348.765 418.939 349.672 417.388 349.672 cv
level3{
gsave
clp
[104.951 0 0 104.951 417.382 203.955 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0383852 .135825 .183068 .00787389 ]
/C1 [0 0 0 0 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[104.951 0 0 104.951 417.382 203.955 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!**$!<E3%!<E3%!<E3&!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9
\l3"U,&5"U,&5"U,&5"U,&5"U5/8"pP89"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6
tJ=#6tM?#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE#mgnE#m
gnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE~>
<~z!<E3%!WiE*!s8W."9\i2"U,&6"pP;;#6tM?#RC\B#mgnF$47+J$O[=N$k*OQ%1NaU%LrsY%M''\%hB3
_&.fBb&J5Te&eYfi&ebol',)&o'GM5q'bqGu'bqK"()@Z$(Ddl((Ddo*(`4),(`=2/)&X;0)B'M4)B'M
5)]K_8)]K_8*#oq<*#oq<*??.@*??.@*??1B*Zc@D*Zc@D*ZlIG+!2RH+!2RH+!;[K+<VdL+<VdL+<Vd
L+X&!P+X&!P+X&!P+X&!P+X&!P+X&$R+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T~>
<~!!!!"!<E6'!s8W."9\l3"U5/9#6tM?#RLeD$47+J$O[@O$k3XT%LrsZ%hB0^&.fEc&J>]h&ebol'GM5q
'bqH!()@Z%(Ddl)(`4)-)&X>2)B'P6)]K_9*#oq=*??.A*Zc@D+!2RH+!;[K+<_mO+X&$R+sJ3T,9nEX
,:"N[,U=W],pai`,pjrc-71&d-RU8h-RU8i-n$Jl-n$Mn.4H\p.4H_r.Olnt.Olnt.k<,#.k<,#.k</%
/1`>'/1`>'/1`>'/M/P+/M/P+/M/P+/M/P+/M/S-/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
~>
<~zzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<
E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<
E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!W
iE)!WiE)~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
417.382 350.672 mo
415.415 350.669 413.57 349.531 411.863 347.526 cv
410.15 345.513 408.533 342.601 406.994 338.872 cv
403.921 331.415 401.17 320.684 398.859 307.432 cv
398.413 304.876 397.984 302.226 397.572 299.489 cv
397.864 299.13 398.147 298.768 398.421 298.406 cv
400.192 310.381 402.292 320.689 404.64 328.866 cv
407.08 337.38 409.806 343.58 412.624 346.877 cv
414.235 348.765 415.825 349.672 417.376 349.672 cv
417.378 349.672 417.38 349.672 417.382 349.672 cv
417.384 349.672 417.386 349.672 417.388 349.672 cv
418.939 349.672 420.53 348.765 422.141 346.877 cv
423.748 344.993 425.334 342.161 426.846 338.491 cv
429.874 331.15 432.618 320.468 434.921 307.26 cv
439.529 280.841 442.383 244.307 442.382 203.955 cv
442.384 150.996 437.463 104.601 430.124 79.0444 cv
427.685 70.5301 424.959 64.3304 422.141 61.0331 cv
420.53 59.1453 418.94 58.2382 417.388 58.2382 cv
417.386 58.2382 417.384 58.2382 417.382 58.2382 cv
417.38 58.2382 417.378 58.2382 417.376 58.2382 cv
415.825 58.2382 414.235 59.1454 412.624 61.0331 cv
411.017 62.9167 409.431 65.7495 407.919 69.4192 cv
404.891 76.7604 402.147 87.4421 399.844 100.65 cv
395.236 127.069 392.382 163.603 392.382 203.955 cv
392.381 224.41 393.115 243.889 394.439 261.562 cv
394.088 261.21 393.727 260.859 393.359 260.51 cv
392.086 243.11 391.383 224.003 391.382 203.955 cv
391.384 150.925 396.296 104.501 403.679 78.7686 cv
406.147 70.1867 408.871 63.9043 411.863 60.3846 cv
413.57 58.3792 415.415 57.2406 417.382 57.2383 cv
419.35 57.2406 421.195 58.3792 422.902 60.3846 cv
424.615 62.3965 426.232 65.3088 427.77 69.0382 cv
430.844 76.495 433.594 87.2259 435.906 100.478 cv
440.528 126.979 443.382 163.554 443.382 203.955 cv
443.382 203.955 li
443.382 203.955 li
443.382 203.955 li
443.38 256.984 438.468 303.409 431.086 329.141 cv
428.618 337.723 425.894 344.006 422.902 347.526 cv
421.195 349.531 419.35 350.669 417.382 350.672 cv
443.382 203.955 mo
443.382 203.955 li
443.382 203.955 li
0 0 0 .25098 cmyk
f
235.925 342.058 mo
235.923 342.058 235.923 342.058 235.921 342.058 cv
189.59 342.059 147.645 335.312 117.325 324.426 cv
102.165 318.984 89.9141 312.505 81.4837 305.348 cv
73.0477 298.185 68.4594 290.384 68.4609 282.258 cv
68.4594 274.132 73.0477 266.331 81.4837 259.168 cv
94.1294 248.429 115.371 239.229 142.131 232.742 cv
168.89 226.252 201.171 222.458 235.918 222.458 cv
235.92 222.458 235.919 222.458 235.921 222.458 cv
282.253 222.457 324.199 229.203 354.519 240.09 cv
369.678 245.531 381.929 252.01 390.36 259.168 cv
391.463 260.104 392.5 261.052 393.47 262.01 cv
394.462 275.161 395.782 287.314 397.37 298.133 cv
395.462 300.599 393.116 303.008 390.36 305.348 cv
377.714 316.087 356.473 325.286 329.712 331.774 cv
302.953 338.264 270.672 342.058 235.925 342.058 cv
level3{
gsave
clp
[126.188 0 0 126.188 235.921 282.258 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0925182 .175194 .00787389 .000984237 ]
/C1 [0 0 0 0 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.188 0 0 126.188 235.921 282.258 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!!!$#!<E3&!WiE)!s8W-!s8Z/"9\i1"U,&5"U,)7"pP89#6tJ=#6tM?#RC\A#RLeD#mgnF$47+I$47.
K$O[=M$O[@O$k*OQ$k3XT%1NaU%1WjX%LrsY%Ls![%hB0]%hB0^&.fBa&.fBa&.oKd&J5Te&J5Tf&eYf
i&eYfi&eYfj',)#m',)#m',)#m'GM5q'GM5q'GM5q'GM5r'bqGu'bqGu'bqGu'bqGu'c%Q#()@Z$()@Z
$()@Z$()@Z$()@Z$()@Z$(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(~>
<~!!!!"!<E6'!WrN,"9\i2"U5/8#6tJ>#RC_C#mq"H$4@4L$k*OR%1NdW%Ls![%hK9`&J5Te&eYfi',)#n
'GM5r'bqH!()@Z%(Ddl)(`4)-)&X;1)B'M4)]K_8*#oq<*$$%?*?H7C*ZcCF+!2RH+<VdL+<_mO+X&!Q
+sJ3T+sS<W,9nEY,U=W\,UF`_,pai`,pjrc-71&d-RU8h-RU8h-R^Ak-n$Jl-n$Mn.4H\p.4H\p.4Qes
.Olnt.Olnt.Olnu.k<,#.k<,#.k<,#.k<,#.kE5&/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
<~zzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<
E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<
E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!W
iE)!WiE)~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
398.216 296.998 mo
396.743 286.784 395.507 275.396 394.558 263.118 cv
400.306 269.165 403.383 275.602 403.382 282.258 cv
403.383 287.322 401.601 292.261 398.216 296.998 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 407.202 ]ct
[10.56 0 0 35.04 393.6 109.602 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 22 
/H 73 
/M[22 0 0 -73 0 73 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 22 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
lQ5aep-S?nq&eo(lQ5Xbr^-NLn0%WNlN6AnmmI%?lQGj%pB'Y%lU0t\lN6AnqEsg@rupbPlN6AnlU1Uo
mi_W3m/lSps$Z6AqB>DPlN6JqrZ:u*n3cpnocWQ%lQ5jio0`*mq&nu)lQ5afp-\9lr?1D-p`B&KnjN=A
lQPQqlQ5I^r^6W-miguulQ5@[lQPTr!!;I-lU:%^lN6AnnO37BlQPQqlQ5@[lQPs'p&aP$lU:%^lN6An
qaBsBs!$hRlN6AnlU:Xpn0%c5liQJor^H6Cp`f>RlN6Mrr>ti)nO3$opEAi(lQ5gioL/<qrZ_4_lN6An
oL8OClllEQlN6l'o,dBir']iplN6AnlUCdsmNUrulQ5@\lQY]trrVL-lUCgum3:itlQ5UcqF1<,n070"
lQ5@\p`oDTpB(!hlQ5@\oHX,TlN7#,miMBqn3ugkr$(G.qB,8LlUC+alN6c%p)`NglQb]snfRlQr#Y/m
lQb]smN;ELlUCIkpESu*lQ>F]lQb]sqB,8MlUC+alN6AolUCgum3CoulQ>F]lQbg!rW;C-lUCatmj%-"
lQ>^eq*k-*ng!H%lQ>F]p*B>Vp]C'hlQ?-rm7$Ojq]kD.lQ?'p!(QHHlm)QUlN6AopdXmElm)QVlN6Ao
oLAUElQkctnK7WMmmd7ElQkctlQ>F^lQks$quZ1+lUL1clN6Aoog\[FlQkctlQ>F^lQl<.ncJ,!lUL1c
lN6Aos$lBFlQkctlQ>F^mNhcWlN6AolUL1clN6Z"q&eollQkctlQ>F^pa#JWlN6AolUL1clN7#,miUjb
lQkctlQ>I_!(Q9"lN6AolUL1cnH/RhlQ>F^lQkctlQ>gip."?nlN6AolUL1cqZ?9hlQ>F^lQkctlQ6*r
lpg:dlN6AolUL=gr?U\1lQ>F^lQkctoH3iMlUL1clN6AolULk"r$:kZlN6AolUL^sng*N&rZCPMlULOn
pE]&+lQ>L`s$lH'r?U\1J,~>

%%EndBinary
grestore
np
397.37 298.133 mo
395.782 287.314 394.462 275.161 393.47 262.01 cv
393.843 262.378 394.205 262.747 394.558 263.118 cv
395.507 275.396 396.743 286.784 398.216 296.998 cv
397.944 297.378 397.662 297.756 397.37 298.133 cv
level3{
gsave
clp
[126.188 0 0 126.188 235.921 282.258 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0930104 .175686 .00861207 .189466 ]
/C1 [0 0 0 .187743 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.188 0 0 126.188 235.921 282.258 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!!!$#!<E3&!WiE)!s8W-!s8Z/"9\i1"U,&5"U,)7"pP89#6tJ=#6tM?#RC\A#mgnE#mgnF$47+I$47.
K$O[=M$OdFP$k*OQ$k3XT%1NaU%1WjX%LrsY%M''\%hB0]%hB3_&.fBa&.fBa&J5Te&J5Te&J5Wg&eYf
i&eYfi&ebol',)#m',)#m',)&o'GM5q'GM5q'GM5q'GV>t'bqGu'bqGu'bqGu'bqH!()@Z$()@Z$()@Z
$()@Z$()@Z$()@Z$(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(~>
<~!!!!"!<E6'!WrN,"9\l3"U5/8#6tJ>#RC_C#mq"H$O[=M$k*OR%1NdW%M''\%hK9`&J5Te&eYfj',)#n
'GM5r'bqH!()@Z%(Ddl)(`4)-)&X;1)B'M5)]K_8*#oq<*??.@*?H7C*ZcCF+!2RI+<VdL+X&!P+X&$R
+sJ3T,9nEX,9nHZ,U=W\,UF`_,pai`-71&d-71&e-RU8h-RU8h-n$Jl-n$Jl-n-So.4H\p.4H\p.Olnt
.Olnt.Olnt.P!#".k<,#.k<,#.k<,#.k<,$/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
<~zzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3
%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE
)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE
)!WiE)!WiE)!WiE)~>
<~0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/#"50JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
235.921 343.058 mo
201.099 343.057 168.748 339.258 141.895 332.745 cv
115.042 326.229 93.6887 317.014 80.8365 306.111 cv
72.274 298.845 67.4622 290.783 67.461 282.258 cv
67.4622 273.732 72.274 265.671 80.8365 258.405 cv
89.4047 251.134 101.751 244.62 116.987 239.149 cv
147.456 228.211 189.491 221.459 235.921 221.458 cv
270.744 221.458 303.095 225.258 329.948 231.77 cv
356.801 238.286 378.155 247.502 391.007 258.405 cv
391.825 259.1 392.61 259.802 393.359 260.51 cv
393.395 261.013 393.432 261.51 393.47 262.01 cv
392.5 261.052 391.463 260.104 390.36 259.168 cv
381.929 252.01 369.678 245.531 354.519 240.09 cv
324.199 229.203 282.253 222.457 235.921 222.458 cv
235.919 222.458 235.92 222.458 235.918 222.458 cv
201.171 222.458 168.89 226.252 142.131 232.742 cv
115.371 239.229 94.1294 248.429 81.4837 259.168 cv
73.0477 266.331 68.4594 274.132 68.4609 282.258 cv
68.4594 290.384 73.0477 298.185 81.4837 305.348 cv
89.9141 312.505 102.165 318.984 117.325 324.426 cv
147.645 335.312 189.59 342.059 235.921 342.058 cv
235.923 342.058 235.923 342.058 235.925 342.058 cv
270.672 342.058 302.953 338.264 329.712 331.774 cv
356.473 325.286 377.714 316.087 390.36 305.348 cv
393.116 303.008 395.462 300.599 397.37 298.133 cv
397.437 298.587 397.504 299.04 397.572 299.489 cv
395.727 301.76 393.53 303.97 391.007 306.111 cv
382.439 313.382 370.092 319.896 354.857 325.367 cv
324.387 336.305 282.352 343.057 235.921 343.058 cv
0 0 0 .25098 cmyk
f
398.421 298.406 mo
398.352 297.94 398.284 297.469 398.216 296.998 cv
401.601 292.261 403.383 287.322 403.382 282.258 cv
403.383 275.602 400.306 269.165 394.558 263.118 cv
394.518 262.599 394.478 262.085 394.439 261.562 cv
400.844 267.98 404.381 274.948 404.382 282.258 cv
404.382 282.258 li
404.382 282.258 li
404.382 282.258 li
404.381 287.874 402.294 293.288 398.421 298.406 cv
level3{
gsave
clp
[104.951 0 0 104.951 417.382 203.955 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.029281 .101622 .137793 .25664 ]
/C1 [0 0 0 .251472 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[104.951 0 0 104.951 417.382 203.955 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzz!!**$!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9er4"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,)7"
pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=#
6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=~>
<~z!!**$!<E6'!WiE*!s8W-"9\i1"9er4"U,&6"pP89#6tJ=#6tM?#RC\B#mgnE#mq"H$47+J$O[=M$O[@
O$k*OQ%1NaU%1NaV%LrsY%LrsZ%hB0]%hB3_&.fBa&.fEc&J5Te&J5Tf&eYfi&eYfi',)#m',)#m',2,
p'GM5q'GM5q'bqGu'bqGu'bqGu()@Z$()@Z$()@Z$()@]&(Ddl((Ddl((Ddl((Ddo*(`4),(`4),(`4)
,(`4),(`4),)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0~>
<~z!<E3%!WiE*!s8W."9\l3"U,)7"pP;;#6tM?#RC_C#mgqG$47.K$O[@O$k*OR%1NaV%LrsY%hB0]%hK9
`&.oKd&J5Wg&eYfj',)#m',2,p'GM8s'bqGu()@Z$()@]&(Ddl((`4),(`4,.)&X;0)&aD3)B'M4)B0V
7)]K_8*#oq<*#oq<*$$%?*??.@*??1B*Zc@D*Zc@D+!2RH+!2RH+!2RI+<VdL+<VdL+<VdL+<_mO+X&!
P+X&!P+X&!P+X&$R+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ6V,9nEX,9nEX,9nEX,9nEX~>
<~5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
397.572 299.489 mo
397.504 299.04 397.437 298.587 397.37 298.133 cv
397.662 297.756 397.944 297.378 398.216 296.998 cv
398.284 297.469 398.352 297.94 398.421 298.406 cv
398.147 298.768 397.864 299.13 397.572 299.489 cv
0 0 0 .439216 cmyk
f
394.558 263.118 mo
394.205 262.747 393.843 262.378 393.47 262.01 cv
393.432 261.51 393.395 261.013 393.359 260.51 cv
393.727 260.859 394.088 261.21 394.439 261.562 cv
394.478 262.085 394.518 262.599 394.558 263.118 cv
f
45.7827 358.808 mo
45.7827 6.89063 li
491.617 6.89063 li
491.617 358.558 li
45.5327 358.558 li
45.5327 359.058 li
491.867 359.058 li
492.043 358.984 li
492.117 358.808 li
492.117 6.64063 li
492.043 6.46385 li
491.867 6.39062 li
45.5327 6.39062 li
45.3559 6.46385 li
45.2827 6.64063 li
45.2827 358.808 li
45.7827 358.808 li
cp
0 0 0 0 cmyk
f
45.5327 6.64063 mo
45.5327 11.0576 li
45.5327 358.808 mo
45.5327 354.308 li
45.5327 358.808 mo
45.5327 6.64063 li
45.5327 358.808 mo
491.867 358.808 li
491.867 358.808 mo
491.867 6.64063 li
45.5327 358.808 mo
45.5327 6.64063 li
45.5327 6.64063 mo
491.867 6.64063 li
45.5327 358.808 mo
491.867 358.808 li
0 0 0 .5 cmyk
f
45.0327 6.64063 mo
45.0327 11.0576 li
46.0327 11.0576 li
46.0327 6.64063 li
cp
46.0327 358.808 mo
46.0327 354.308 li
45.0327 354.308 li
45.0327 358.808 li
cp
46.0327 358.808 mo
46.0327 6.64063 li
45.0327 6.64063 li
45.0327 358.808 li
cp
45.5327 359.308 mo
491.867 359.308 li
491.867 358.308 li
45.5327 358.308 li
cp
492.367 358.808 mo
492.367 6.64063 li
491.367 6.64063 li
491.367 358.808 li
cp
46.0327 358.808 mo
46.0327 6.64063 li
45.0327 6.64063 li
45.0327 358.808 li
cp
45.5327 7.14063 mo
491.867 7.14063 li
491.867 6.14063 li
45.5327 6.14063 li
cp
45.5327 359.308 mo
491.867 359.308 li
491.867 358.308 li
45.5327 358.308 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 53 /five putdup 127 /minus putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PTVRLN+Helvetica /Helvetica findfont ct_VMDictPut/PTVRLN+Helvetica*1 [53{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf36.9521 370.89 mo(\1775)[7.00781 0 ]xsh119.866 6.64063 mo
119.866 11.0576 li
119.866 358.808 mo
119.866 354.308 li
0 0 0 .5 cmyk
f
119.366 6.64063 mo
119.366 11.0576 li
120.366 11.0576 li
120.366 6.64063 li
cp
120.366 358.808 mo
120.366 354.308 li
119.366 354.308 li
119.366 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [52{/.notdef}rp /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf111.28 370.89 mo(\1774)[7.00781 0 ]xsh194.283 6.64063 mo
194.283 11.0576 li
194.283 358.808 mo
194.283 354.308 li
0 0 0 .5 cmyk
f
193.783 6.64063 mo
193.783 11.0576 li
194.783 11.0576 li
194.783 6.64063 li
cp
194.783 358.808 mo
194.783 354.308 li
193.783 354.308 li
193.783 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [51{/.notdef}rp /three /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf185.702 370.89 mo(\1773)[7.00781 0 ]xsh268.699 6.64063 mo
268.699 11.0576 li
268.699 358.808 mo
268.699 354.308 li
0 0 0 .5 cmyk
f
268.199 6.64063 mo
268.199 11.0576 li
269.199 11.0576 li
269.199 6.64063 li
cp
269.199 358.808 mo
269.199 354.308 li
268.199 354.308 li
268.199 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [50{/.notdef}rp /two /three /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf260.116 370.89 mo(\1772)[7.00781 0 ]xsh343.032 6.64063 mo
343.032 11.0576 li
343.032 358.808 mo
343.032 354.308 li
0 0 0 .5 cmyk
f
342.532 6.64063 mo
342.532 11.0576 li
343.532 11.0576 li
343.532 6.64063 li
cp
343.532 358.808 mo
343.532 354.308 li
342.532 354.308 li
342.532 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [49{/.notdef}rp /one /two /three /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf334.452 370.89 mo(\1771)[7.00781 0 ]xsh417.449 6.64063 mo
417.449 11.0576 li
417.449 358.808 mo
417.449 354.308 li
0 0 0 .5 cmyk
f
416.949 6.64063 mo
416.949 11.0576 li
417.949 11.0576 li
417.949 6.64063 li
cp
417.949 358.808 mo
417.949 354.308 li
416.949 354.308 li
416.949 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf414.702 370.89 mo(0)sh491.867 6.64063 mo
491.867 11.0576 li
491.867 358.808 mo
491.867 354.308 li
0 0 0 .5 cmyk
f
491.367 6.64063 mo
491.367 11.0576 li
492.367 11.0576 li
492.367 6.64063 li
cp
492.367 358.808 mo
492.367 354.308 li
491.367 354.308 li
491.367 358.808 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf489.116 370.89 mo(1)sh491.867 358.808 mo
487.367 358.808 li
45.5327 358.808 mo
49.9492 358.808 li
0 0 0 .5 cmyk
f
491.867 358.308 mo
487.367 358.308 li
487.367 359.308 li
491.867 359.308 li
cp
45.5327 359.308 mo
49.9492 359.308 li
49.9492 358.308 li
45.5327 358.308 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf20.9521 360.476 mo(\1770.)sh37.1318 360.476 mo(2)sh491.867 319.641 mo
487.367 319.641 li
45.5327 319.641 mo
49.9492 319.641 li
0 0 0 .5 cmyk
f
491.867 319.141 mo
487.367 319.141 li
487.367 320.141 li
491.867 320.141 li
cp
45.5327 320.141 mo
49.9492 320.141 li
49.9492 319.141 li
45.5327 319.141 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf20.9521 323.312 mo(\1770.)sh37.1318 323.312 mo(1)sh491.867 280.474 mo
487.367 280.474 li
45.5327 280.474 mo
49.9492 280.474 li
0 0 0 .5 cmyk
f
491.867 279.974 mo
487.367 279.974 li
487.367 280.974 li
491.867 280.974 li
cp
45.5327 280.974 mo
49.9492 280.974 li
49.9492 279.974 li
45.5327 279.974 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf37.1162 284.14 mo(0)sh491.867 241.391 mo
487.367 241.391 li
45.5327 241.391 mo
49.9492 241.391 li
0 0 0 .5 cmyk
f
491.867 240.891 mo
487.367 240.891 li
487.367 241.891 li
491.867 241.891 li
cp
45.5327 241.891 mo
49.9492 241.891 li
49.9492 240.891 li
45.5327 240.891 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 245.062 mo(0.)[6.67383 0 ]xsh37.124 245.062 mo(1)sh491.867 202.224 mo
487.367 202.224 li
45.5327 202.224 mo
49.9492 202.224 li
0 0 0 .5 cmyk
f
491.867 201.724 mo
487.367 201.724 li
487.367 202.724 li
491.867 202.724 li
cp
45.5327 202.724 mo
49.9492 202.724 li
49.9492 201.724 li
45.5327 201.724 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 205.89 mo(0.)[6.67383 0 ]xsh37.124 205.89 mo(2)sh491.867 163.141 mo
487.367 163.141 li
45.5327 163.141 mo
49.9492 163.141 li
0 0 0 .5 cmyk
f
491.867 162.641 mo
487.367 162.641 li
487.367 163.641 li
491.867 163.641 li
cp
45.5327 163.641 mo
49.9492 163.641 li
49.9492 162.641 li
45.5327 162.641 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 166.804 mo(0.)[6.67383 0 ]xsh37.124 166.804 mo(3)sh491.867 123.974 mo
487.367 123.974 li
45.5327 123.974 mo
49.9492 123.974 li
0 0 0 .5 cmyk
f
491.867 123.474 mo
487.367 123.474 li
487.367 124.474 li
491.867 124.474 li
cp
45.5327 124.474 mo
49.9492 124.474 li
49.9492 123.474 li
45.5327 123.474 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 127.647 mo(0.)[6.67383 0 ]xsh37.124 127.647 mo(4)sh491.867 84.8906 mo
487.367 84.8906 li
45.5327 84.8906 mo
49.9492 84.8906 li
0 0 0 .5 cmyk
f
491.867 84.3906 mo
487.367 84.3906 li
487.367 85.3906 li
491.867 85.3906 li
cp
45.5327 85.3906 mo
49.9492 85.3906 li
49.9492 84.3906 li
45.5327 84.3906 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 88.5537 mo(0.)[6.67383 0 ]xsh37.124 88.5537 mo(5)sh491.867 45.7241 mo
487.367 45.7241 li
45.5327 45.7241 mo
49.9492 45.7241 li
0 0 0 .5 cmyk
f
491.867 45.2241 mo
487.367 45.2241 li
487.367 46.2241 li
491.867 46.2241 li
cp
45.5327 46.2241 mo
49.9492 46.2241 li
49.9492 45.2241 li
45.5327 45.2241 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 72{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 49.3896 mo(0.)[6.67383 0 ]xsh37.124 49.3896 mo(6)sh491.867 6.64063 mo
487.367 6.64063 li
45.5327 6.64063 mo
49.9492 6.64063 li
0 0 0 .5 cmyk
f
491.867 6.14063 mo
487.367 6.14063 li
487.367 7.14063 li
491.867 7.14063 li
cp
45.5327 7.14063 mo
49.9492 7.14063 li
49.9492 6.14063 li
45.5327 6.14063 li
cp
0 0 0 1 cmyk
f
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven 71{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf26.7803 10.3037 mo(0.)[6.67383 0 ]xsh37.124 10.3037 mo(7)sh492.367 358.808 mo
492.367 6.64063 li
491.367 6.64063 li
491.367 358.808 li
cp
46.0327 358.808 mo
46.0327 6.64063 li
45.0327 6.64063 li
45.0327 358.808 li
cp
45.5327 7.14063 mo
491.867 7.14063 li
491.867 6.14063 li
45.5327 6.14063 li
cp
45.5327 359.308 mo
491.867 359.308 li
491.867 358.308 li
45.5327 358.308 li
cp
f
164.449 278.724 mo
169.283 278.724 li
169.283 283.558 li
164.449 283.558 li
164.449 278.724 li
cp
241.116 279.224 mo
245.949 279.224 li
245.949 284.058 li
241.116 284.058 li
241.116 279.224 li
cp
229.116 279.141 mo
233.949 279.141 li
233.949 283.974 li
229.116 283.974 li
229.116 279.141 li
cp
167.283 278.558 mo
172.116 278.558 li
172.116 283.391 li
167.283 283.391 li
167.283 278.558 li
cp
202.116 278.474 mo
206.949 278.474 li
206.949 283.308 li
202.116 283.308 li
202.116 278.474 li
cp
174.449 278.558 mo
179.283 278.558 li
179.283 283.391 li
174.449 283.391 li
174.449 278.558 li
cp
222.283 280.641 mo
227.116 280.641 li
227.116 285.474 li
222.283 285.474 li
222.283 280.641 li
cp
390.617 288.891 mo
395.449 288.891 li
395.449 293.724 li
390.617 293.724 li
390.617 288.891 li
cp
391.032 290.891 mo
395.867 290.891 li
395.867 295.724 li
391.032 295.724 li
391.032 290.891 li
cp
404.283 286.808 mo
409.117 286.808 li
409.117 291.641 li
404.283 291.641 li
404.283 286.808 li
cp
399.617 288.474 mo
404.449 288.474 li
404.449 293.308 li
399.617 293.308 li
399.617 288.474 li
cp
408.199 293.558 mo
413.033 293.558 li
413.033 298.391 li
408.199 298.391 li
408.199 293.558 li
cp
351.449 282.808 mo
356.282 282.808 li
356.282 287.641 li
351.449 287.641 li
351.449 282.808 li
cp
373.532 282.308 mo
378.367 282.308 li
378.367 287.141 li
373.532 287.141 li
373.532 282.308 li
cp
412.033 252.058 mo
416.867 252.058 li
416.867 256.891 li
412.033 256.891 li
412.033 252.058 li
cp
404.783 277.808 mo
409.617 277.808 li
409.617 282.641 li
404.783 282.641 li
404.783 277.808 li
cp
402.699 277.891 mo
407.533 277.891 li
407.533 282.724 li
402.699 282.724 li
402.699 277.891 li
cp
399.117 277.474 mo
403.949 277.474 li
403.949 282.308 li
399.117 282.308 li
399.117 277.474 li
cp
390.032 277.641 mo
394.867 277.641 li
394.867 282.474 li
390.032 282.474 li
390.032 277.641 li
cp
317.367 277.308 mo
322.199 277.308 li
322.199 282.141 li
317.367 282.141 li
317.367 277.308 li
cp
415.199 278.224 mo
420.033 278.224 li
420.033 283.058 li
415.199 283.058 li
415.199 278.224 li
cp
415.283 278.391 mo
420.117 278.391 li
420.117 283.224 li
415.283 283.224 li
415.283 278.391 li
cp
415.117 278.391 mo
419.949 278.391 li
419.949 283.224 li
415.117 283.224 li
415.117 278.391 li
cp
415.283 279.891 mo
420.117 279.891 li
420.117 284.724 li
415.283 284.724 li
415.283 279.891 li
cp
415.199 278.474 mo
420.033 278.474 li
420.033 283.308 li
415.199 283.308 li
415.199 278.474 li
cp
410.533 277.808 mo
415.367 277.808 li
415.367 282.641 li
410.533 282.641 li
410.533 277.808 li
cp
409.949 277.558 mo
414.783 277.558 li
414.783 282.391 li
409.949 282.391 li
409.949 277.558 li
cp
411.783 276.308 mo
416.617 276.308 li
416.617 281.141 li
411.783 281.141 li
411.783 276.308 li
cp
413.199 276.474 mo
418.033 276.474 li
418.033 281.308 li
413.199 281.308 li
413.199 276.474 li
cp
407.117 275.724 mo
411.949 275.724 li
411.949 280.558 li
407.117 280.558 li
407.117 275.724 li
cp
78.9492 277.391 mo
83.7827 277.391 li
83.7827 282.224 li
78.9492 282.224 li
78.9492 277.391 li
cp
233.616 277.558 mo
238.449 277.558 li
238.449 282.391 li
233.616 282.391 li
233.616 277.558 li
cp
355.699 278.808 mo
360.532 278.808 li
360.532 283.641 li
355.699 283.641 li
355.699 278.808 li
cp
351.699 277.641 mo
356.532 277.641 li
356.532 282.474 li
351.699 282.474 li
351.699 277.641 li
cp
409.199 277.808 mo
414.033 277.808 li
414.033 282.641 li
409.199 282.641 li
409.199 277.808 li
cp
410.533 277.474 mo
415.367 277.474 li
415.367 282.308 li
410.533 282.308 li
410.533 277.474 li
cp
415.199 278.058 mo
420.033 278.058 li
420.033 282.891 li
415.199 282.891 li
415.199 278.058 li
cp
386.699 277.641 mo
391.532 277.641 li
391.532 282.474 li
386.699 282.474 li
386.699 277.641 li
cp
159.949 277.641 mo
164.783 277.641 li
164.783 282.474 li
159.949 282.474 li
159.949 277.641 li
cp
176.783 278.391 mo
181.616 278.391 li
181.616 283.224 li
176.783 283.224 li
176.783 278.391 li
cp
178.616 277.724 mo
183.449 277.724 li
183.449 282.558 li
178.616 282.558 li
178.616 277.724 li
cp
171.033 276.724 mo
175.866 276.724 li
175.866 281.558 li
171.033 281.558 li
171.033 276.724 li
cp
246.949 276.391 mo
251.783 276.391 li
251.783 281.224 li
246.949 281.224 li
246.949 276.391 li
cp
356.032 109.224 mo
360.867 109.224 li
360.867 114.058 li
356.032 114.058 li
356.032 109.224 li
cp
376.532 171.641 mo
381.367 171.641 li
381.367 176.474 li
376.532 176.474 li
376.532 171.641 li
cp
395.282 212.808 mo
400.117 212.808 li
400.117 217.641 li
395.282 217.641 li
395.282 212.808 li
cp
396.617 247.974 mo
401.449 247.974 li
401.449 252.808 li
396.617 252.808 li
396.617 247.974 li
cp
406.283 280.141 mo
411.117 280.141 li
411.117 284.974 li
406.283 284.974 li
406.283 280.141 li
cp
410.033 193.058 mo
414.867 193.058 li
414.867 197.891 li
410.033 197.891 li
410.033 193.058 li
cp
405.949 173.974 mo
410.783 173.974 li
410.783 178.808 li
405.949 178.808 li
405.949 173.974 li
cp
407.699 72.3906 mo
412.533 72.3906 li
412.533 77.2241 li
407.699 77.2241 li
407.699 72.3906 li
cp
406.283 168.641 mo
411.117 168.641 li
411.117 173.474 li
406.283 173.474 li
406.283 168.641 li
cp
413.949 279.058 mo
418.783 279.058 li
418.783 283.891 li
413.949 283.891 li
413.949 279.058 li
cp
362.782 278.808 mo
367.617 278.808 li
367.617 283.641 li
362.782 283.641 li
362.782 278.808 li
cp
357.949 279.391 mo
362.782 279.391 li
362.782 284.224 li
357.949 284.224 li
357.949 279.391 li
cp
342.699 281.308 mo
347.532 281.308 li
347.532 286.141 li
342.699 286.141 li
342.699 281.308 li
cp
282.449 277.641 mo
287.282 277.641 li
287.282 282.474 li
282.449 282.474 li
282.449 277.641 li
cp
389.449 268.724 mo
394.282 268.724 li
394.282 273.558 li
389.449 273.558 li
389.449 268.724 li
cp
384.282 271.558 mo
389.117 271.558 li
389.117 276.391 li
384.282 276.391 li
384.282 271.558 li
cp
403.367 266.308 mo
408.199 266.308 li
408.199 271.141 li
403.367 271.141 li
403.367 266.308 li
cp
405.617 275.808 mo
410.449 275.808 li
410.449 280.641 li
405.617 280.641 li
405.617 275.808 li
cp
292.199 291.224 mo
297.032 291.224 li
297.032 296.058 li
292.199 296.058 li
292.199 291.224 li
cp
297.699 279.974 mo
302.532 279.974 li
302.532 284.808 li
297.699 284.808 li
297.699 279.974 li
cp
417.699 280.891 mo
422.533 280.891 li
422.533 285.724 li
417.699 285.724 li
417.699 280.891 li
cp
417.699 278.391 mo
422.533 278.391 li
422.533 283.224 li
417.699 283.224 li
417.699 278.391 li
cp
418.617 279.058 mo
423.449 279.058 li
423.449 283.891 li
418.617 283.891 li
418.617 279.058 li
cp
422.699 309.558 mo
427.533 309.558 li
427.533 314.391 li
422.699 314.391 li
422.699 309.558 li
cp
422.283 297.308 mo
427.117 297.308 li
427.117 302.141 li
422.283 302.141 li
422.283 297.308 li
cp
420.617 300.224 mo
425.449 300.224 li
425.449 305.058 li
420.617 305.058 li
420.617 300.224 li
cp
415.949 266.391 mo
420.783 266.391 li
420.783 271.224 li
415.949 271.224 li
415.949 266.391 li
cp
412.283 278.141 mo
417.117 278.141 li
417.117 282.974 li
412.283 282.974 li
412.283 278.141 li
cp
414.283 279.391 mo
419.117 279.391 li
419.117 284.224 li
414.283 284.224 li
414.283 279.391 li
cp
414.367 277.558 mo
419.199 277.558 li
419.199 282.391 li
414.367 282.391 li
414.367 277.558 li
cp
418.533 337.724 mo
423.367 337.724 li
423.367 342.558 li
418.533 342.558 li
418.533 337.724 li
cp
418.617 322.391 mo
423.449 322.391 li
423.449 327.224 li
418.617 327.224 li
418.617 322.391 li
cp
417.199 285.391 mo
422.033 285.391 li
422.033 290.224 li
417.199 290.224 li
417.199 285.391 li
cp
418.033 279.058 mo
422.867 279.058 li
422.867 283.891 li
418.033 283.891 li
418.033 279.058 li
cp
420.449 307.891 mo
425.283 307.891 li
425.283 312.724 li
420.449 312.724 li
420.449 307.891 li
cp
420.033 306.558 mo
424.867 306.558 li
424.867 311.391 li
420.033 311.391 li
420.033 306.558 li
cp
418.699 309.808 mo
423.533 309.808 li
423.533 314.641 li
418.699 314.641 li
418.699 309.808 li
cp
417.699 299.808 mo
422.533 299.808 li
422.533 304.641 li
417.699 304.641 li
417.699 299.808 li
cp
210.116 275.474 mo
214.949 275.474 li
214.949 280.308 li
210.116 280.308 li
210.116 275.474 li
cp
161.699 276.474 mo
166.533 276.474 li
166.533 281.308 li
161.699 281.308 li
161.699 276.474 li
cp
317.282 270.224 mo
322.117 270.224 li
322.117 275.058 li
317.282 275.058 li
317.282 270.224 li
cp
381.199 277.224 mo
386.032 277.224 li
386.032 282.058 li
381.199 282.058 li
381.199 277.224 li
cp
384.282 280.224 mo
389.117 280.224 li
389.117 285.058 li
384.282 285.058 li
384.282 280.224 li
cp
395.949 279.558 mo
400.782 279.558 li
400.782 284.391 li
395.949 284.391 li
395.949 279.558 li
cp
405.117 295.558 mo
409.949 295.558 li
409.949 300.391 li
405.117 300.391 li
405.117 295.558 li
cp
404.617 308.891 mo
409.449 308.891 li
409.449 313.724 li
404.617 313.724 li
404.617 308.891 li
cp
415.033 277.224 mo
419.867 277.224 li
419.867 282.058 li
415.033 282.058 li
415.033 277.224 li
cp
415.033 278.474 mo
419.867 278.474 li
419.867 283.308 li
415.033 283.308 li
415.033 278.474 li
cp
415.033 277.891 mo
419.867 277.891 li
419.867 282.724 li
415.033 282.724 li
415.033 277.891 li
cp
414.783 277.224 mo
419.617 277.224 li
419.617 282.058 li
414.783 282.058 li
414.783 277.224 li
cp
414.949 277.891 mo
419.783 277.891 li
419.783 282.724 li
414.949 282.724 li
414.949 277.891 li
cp
414.867 281.724 mo
419.699 281.724 li
419.699 286.558 li
414.867 286.558 li
414.867 281.724 li
cp
417.033 281.391 mo
421.867 281.391 li
421.867 286.224 li
417.033 286.224 li
417.033 281.391 li
cp
415.033 284.974 mo
419.867 284.974 li
419.867 289.808 li
415.033 289.808 li
415.033 284.974 li
cp
416.367 276.974 mo
421.199 276.974 li
421.199 281.808 li
416.367 281.808 li
416.367 276.974 li
cp
415.783 250.224 mo
420.617 250.224 li
420.617 255.058 li
415.783 255.058 li
415.783 250.224 li
cp
415.199 278.474 mo
420.033 278.474 li
420.033 283.308 li
415.199 283.308 li
415.199 278.474 li
cp
415.367 277.558 mo
420.199 277.558 li
420.199 282.391 li
415.367 282.391 li
415.367 277.558 li
cp
415.117 278.308 mo
419.949 278.308 li
419.949 283.141 li
415.117 283.141 li
415.117 278.308 li
cp
415.199 299.808 mo
420.033 299.808 li
420.033 304.641 li
415.199 304.641 li
415.199 299.808 li
cp
415.033 278.558 mo
419.867 278.558 li
419.867 283.391 li
415.033 283.391 li
415.033 278.558 li
cp
414.617 283.808 mo
419.449 283.808 li
419.449 288.641 li
414.617 288.641 li
414.617 283.808 li
cp
413.449 287.891 mo
418.283 287.891 li
418.283 292.724 li
413.449 292.724 li
413.449 287.891 li
cp
415.449 303.141 mo
420.283 303.141 li
420.283 307.974 li
415.449 307.974 li
415.449 303.141 li
cp
346.532 258.058 mo
351.367 258.058 li
351.367 262.891 li
346.532 262.891 li
346.532 258.058 li
cp
374.117 278.641 mo
378.949 278.641 li
378.949 283.474 li
374.117 283.474 li
374.117 278.641 li
cp
375.617 278.558 mo
380.449 278.558 li
380.449 283.391 li
375.617 283.391 li
375.617 278.558 li
cp
378.949 278.308 mo
383.782 278.308 li
383.782 283.141 li
378.949 283.141 li
378.949 278.308 li
cp
409.949 278.391 mo
414.783 278.391 li
414.783 283.224 li
409.949 283.224 li
409.949 278.391 li
cp
376.949 277.891 mo
381.782 277.891 li
381.782 282.724 li
376.949 282.724 li
376.949 277.891 li
cp
377.949 278.058 mo
382.782 278.058 li
382.782 282.891 li
377.949 282.891 li
377.949 278.058 li
cp
407.033 277.974 mo
411.867 277.974 li
411.867 282.808 li
407.033 282.808 li
407.033 277.974 li
cp
398.532 278.224 mo
403.367 278.224 li
403.367 283.058 li
398.532 283.058 li
398.532 278.224 li
cp
413.367 285.724 mo
418.199 285.724 li
418.199 290.558 li
413.367 290.558 li
413.367 285.724 li
cp
411.949 289.808 mo
416.783 289.808 li
416.783 294.641 li
411.949 294.641 li
411.949 289.808 li
cp
415.699 286.724 mo
420.533 286.724 li
420.533 291.558 li
415.699 291.558 li
415.699 286.724 li
cp
415.617 283.974 mo
420.449 283.974 li
420.449 288.808 li
415.617 288.808 li
415.617 283.974 li
cp
415.617 280.058 mo
420.449 280.058 li
420.449 284.891 li
415.617 284.891 li
415.617 280.058 li
cp
417.199 274.891 mo
422.033 274.891 li
422.033 279.724 li
417.199 279.724 li
417.199 274.891 li
cp
417.283 274.058 mo
422.117 274.058 li
422.117 278.891 li
417.283 278.891 li
417.283 274.058 li
cp
417.033 275.808 mo
421.867 275.808 li
421.867 280.641 li
417.033 280.641 li
417.033 275.808 li
cp
416.617 276.141 mo
421.449 276.141 li
421.449 280.974 li
416.617 280.974 li
416.617 276.141 li
cp
415.199 277.974 mo
420.033 277.974 li
420.033 282.808 li
415.199 282.808 li
415.199 277.974 li
cp
415.283 278.141 mo
420.117 278.141 li
420.117 282.974 li
415.283 282.974 li
415.283 278.141 li
cp
415.199 278.308 mo
420.033 278.308 li
420.033 283.141 li
415.199 283.141 li
415.199 278.308 li
cp
415.283 278.224 mo
420.117 278.224 li
420.117 283.058 li
415.283 283.058 li
415.283 278.224 li
cp
415.367 278.224 mo
420.199 278.224 li
420.199 283.058 li
415.367 283.058 li
415.367 278.224 li
cp
414.033 254.141 mo
418.867 254.141 li
418.867 258.974 li
414.033 258.974 li
414.033 254.141 li
cp
414.367 270.558 mo
419.199 270.558 li
419.199 275.391 li
414.367 275.391 li
414.367 270.558 li
cp
415.033 274.224 mo
419.867 274.224 li
419.867 279.058 li
415.033 279.058 li
415.033 274.224 li
cp
414.867 275.308 mo
419.699 275.308 li
419.699 280.141 li
414.867 280.141 li
414.867 275.308 li
cp
414.949 273.641 mo
419.783 273.641 li
419.783 278.474 li
414.949 278.474 li
414.949 273.641 li
cp
415.033 273.974 mo
419.867 273.974 li
419.867 278.808 li
415.033 278.808 li
415.033 273.974 li
cp
414.867 275.391 mo
419.699 275.391 li
419.699 280.224 li
414.867 280.224 li
414.867 275.391 li
cp
200.699 273.308 mo
205.533 273.308 li
205.533 278.141 li
200.699 278.141 li
200.699 273.308 li
cp
157.116 38.4741 mo
161.949 38.4741 li
161.949 43.3076 li
157.116 43.3076 li
157.116 38.4741 li
cp
146.366 268.308 mo
151.199 268.308 li
151.199 273.141 li
146.366 273.141 li
146.366 268.308 li
cp
215.949 273.224 mo
220.783 273.224 li
220.783 278.058 li
215.949 278.058 li
215.949 273.224 li
cp
415.033 277.474 mo
419.867 277.474 li
419.867 282.308 li
415.033 282.308 li
415.033 277.474 li
cp
410.699 277.141 mo
415.533 277.141 li
415.533 281.974 li
410.699 281.974 li
410.699 277.141 li
cp
415.033 276.724 mo
419.867 276.724 li
419.867 281.558 li
415.033 281.558 li
415.033 276.724 li
cp
414.199 270.391 mo
419.033 270.391 li
419.033 275.224 li
414.199 275.224 li
414.199 270.391 li
cp
409.617 264.641 mo
414.449 264.641 li
414.449 269.474 li
409.617 269.474 li
409.617 264.641 li
cp
399.032 277.058 mo
403.867 277.058 li
403.867 281.891 li
399.032 281.891 li
399.032 277.058 li
cp
398.032 277.391 mo
402.867 277.391 li
402.867 282.224 li
398.032 282.224 li
398.032 277.391 li
cp
395.282 276.808 mo
400.117 276.808 li
400.117 281.641 li
395.282 281.641 li
395.282 276.808 li
cp
398.449 277.891 mo
403.283 277.891 li
403.283 282.724 li
398.449 282.724 li
398.449 277.891 li
cp
408.367 278.224 mo
413.199 278.224 li
413.199 283.058 li
408.367 283.058 li
408.367 278.224 li
cp
405.783 278.224 mo
410.617 278.224 li
410.617 283.058 li
405.783 283.058 li
405.783 278.224 li
cp
414.617 278.224 mo
419.449 278.224 li
419.449 283.058 li
414.617 283.058 li
414.617 278.224 li
cp
273.032 278.224 mo
277.867 278.224 li
277.867 283.058 li
273.032 283.058 li
273.032 278.224 li
cp
408.783 277.974 mo
413.617 277.974 li
413.617 282.808 li
408.783 282.808 li
408.783 277.974 li
cp
414.533 277.808 mo
419.367 277.808 li
419.367 282.641 li
414.533 282.641 li
414.533 277.808 li
cp
392.617 273.391 mo
397.449 273.391 li
397.449 278.224 li
392.617 278.224 li
392.617 273.391 li
cp
409.033 277.974 mo
413.867 277.974 li
413.867 282.808 li
409.033 282.808 li
409.033 277.974 li
cp
411.033 278.141 mo
415.867 278.141 li
415.867 282.974 li
411.033 282.974 li
411.033 278.141 li
cp
408.199 278.141 mo
413.033 278.141 li
413.033 282.974 li
408.199 282.974 li
408.199 278.141 li
cp
412.949 277.808 mo
417.783 277.808 li
417.783 282.641 li
412.949 282.641 li
412.949 277.808 li
cp
408.283 277.891 mo
413.117 277.891 li
413.117 282.724 li
408.283 282.724 li
408.283 277.891 li
cp
409.867 277.808 mo
414.699 277.808 li
414.699 282.641 li
409.867 282.641 li
409.867 277.808 li
cp
412.117 277.974 mo
416.949 277.974 li
416.949 282.808 li
412.117 282.808 li
412.117 277.974 li
cp
414.199 277.891 mo
419.033 277.891 li
419.033 282.724 li
414.199 282.724 li
414.199 277.891 li
cp
413.033 275.308 mo
417.867 275.308 li
417.867 280.141 li
413.033 280.141 li
413.033 275.308 li
cp
413.949 278.058 mo
418.783 278.058 li
418.783 282.891 li
413.949 282.891 li
413.949 278.058 li
cp
412.367 277.974 mo
417.199 277.974 li
417.199 282.808 li
412.367 282.808 li
412.367 277.974 li
cp
410.199 277.974 mo
415.033 277.974 li
415.033 282.808 li
410.199 282.808 li
410.199 277.974 li
cp
413.533 277.808 mo
418.367 277.808 li
418.367 282.641 li
413.533 282.641 li
413.533 277.808 li
cp
414.617 277.808 mo
419.449 277.808 li
419.449 282.641 li
414.617 282.641 li
414.617 277.808 li
cp
414.533 277.558 mo
419.367 277.558 li
419.367 282.391 li
414.533 282.391 li
414.533 277.558 li
cp
410.199 277.808 mo
415.033 277.808 li
415.033 282.641 li
410.199 282.641 li
410.199 277.808 li
cp
407.367 278.058 mo
412.199 278.058 li
412.199 282.891 li
407.367 282.891 li
407.367 278.058 li
cp
414.699 277.974 mo
419.533 277.974 li
419.533 282.808 li
414.699 282.808 li
414.699 277.974 li
cp
407.533 278.391 mo
412.367 278.391 li
412.367 283.224 li
407.533 283.224 li
407.533 278.391 li
cp
409.283 277.974 mo
414.117 277.974 li
414.117 282.808 li
409.283 282.808 li
409.283 277.974 li
cp
409.867 277.974 mo
414.699 277.974 li
414.699 282.808 li
409.867 282.808 li
409.867 277.974 li
cp
414.699 277.974 mo
419.533 277.974 li
419.533 282.808 li
414.699 282.808 li
414.699 277.974 li
cp
414.533 277.891 mo
419.367 277.891 li
419.367 282.724 li
414.533 282.724 li
414.533 277.891 li
cp
411.867 277.974 mo
416.699 277.974 li
416.699 282.808 li
411.867 282.808 li
411.867 277.974 li
cp
412.867 277.974 mo
417.699 277.974 li
417.699 282.808 li
412.867 282.808 li
412.867 277.974 li
cp
410.033 277.891 mo
414.867 277.891 li
414.867 282.724 li
410.033 282.724 li
410.033 277.891 li
cp
408.117 277.391 mo
412.949 277.391 li
412.949 282.224 li
408.117 282.224 li
408.117 277.391 li
cp
404.117 278.058 mo
408.949 278.058 li
408.949 282.891 li
404.117 282.891 li
404.117 278.058 li
cp
411.033 278.058 mo
415.867 278.058 li
415.867 282.891 li
411.033 282.891 li
411.033 278.058 li
cp
413.783 277.974 mo
418.617 277.974 li
418.617 282.808 li
413.783 282.808 li
413.783 277.974 li
cp
413.949 278.058 mo
418.783 278.058 li
418.783 282.891 li
413.949 282.891 li
413.949 278.058 li
cp
412.199 277.808 mo
417.033 277.808 li
417.033 282.641 li
412.199 282.641 li
412.199 277.808 li
cp
414.617 277.974 mo
419.449 277.974 li
419.449 282.808 li
414.617 282.808 li
414.617 277.974 li
cp
412.117 277.891 mo
416.949 277.891 li
416.949 282.724 li
412.117 282.724 li
412.117 277.891 li
cp
412.699 278.224 mo
417.533 278.224 li
417.533 283.058 li
412.699 283.058 li
412.699 278.224 li
cp
411.699 277.891 mo
416.533 277.891 li
416.533 282.724 li
411.699 282.724 li
411.699 277.891 li
cp
414.533 277.974 mo
419.367 277.974 li
419.367 282.808 li
414.533 282.808 li
414.533 277.974 li
cp
404.617 277.974 mo
409.449 277.974 li
409.449 282.808 li
404.617 282.808 li
404.617 277.974 li
cp
389.032 277.891 mo
393.867 277.891 li
393.867 282.724 li
389.032 282.724 li
389.032 277.891 li
cp
373.282 262.808 mo
378.117 262.808 li
378.117 267.641 li
373.282 267.641 li
373.282 262.808 li
cp
414.617 277.808 mo
419.449 277.808 li
419.449 282.641 li
414.617 282.641 li
414.617 277.808 li
cp
414.033 278.474 mo
418.867 278.474 li
418.867 283.308 li
414.033 283.308 li
414.033 278.474 li
cp
414.283 277.891 mo
419.117 277.891 li
419.117 282.724 li
414.283 282.724 li
414.283 277.891 li
cp
0 0 0 .5 cmyk
f
164.449 278.724 mo
164.449 279.224 li
168.783 279.224 li
168.783 283.058 li
164.949 283.058 li
164.949 278.724 li
164.449 278.724 li
164.449 279.224 li
164.449 278.724 li
163.949 278.724 li
163.949 284.058 li
169.783 284.058 li
169.783 278.224 li
163.949 278.224 li
163.949 278.724 li
164.449 278.724 li
cp
241.116 279.224 mo
241.116 279.724 li
245.449 279.724 li
245.449 283.558 li
241.616 283.558 li
241.616 279.224 li
241.116 279.224 li
241.116 279.724 li
241.116 279.224 li
240.616 279.224 li
240.616 284.558 li
246.449 284.558 li
246.449 278.724 li
240.616 278.724 li
240.616 279.224 li
241.116 279.224 li
cp
229.116 279.141 mo
229.116 279.641 li
233.449 279.641 li
233.449 283.474 li
229.616 283.474 li
229.616 279.141 li
229.116 279.141 li
229.116 279.641 li
229.116 279.141 li
228.616 279.141 li
228.616 284.474 li
234.449 284.474 li
234.449 278.641 li
228.616 278.641 li
228.616 279.141 li
229.116 279.141 li
cp
167.283 278.558 mo
167.283 279.058 li
171.616 279.058 li
171.616 282.891 li
167.783 282.891 li
167.783 278.558 li
167.283 278.558 li
167.283 279.058 li
167.283 278.558 li
166.783 278.558 li
166.783 283.891 li
172.616 283.891 li
172.616 278.058 li
166.783 278.058 li
166.783 278.558 li
167.283 278.558 li
cp
202.116 278.474 mo
202.116 278.974 li
206.449 278.974 li
206.449 282.808 li
202.616 282.808 li
202.616 278.474 li
202.116 278.474 li
202.116 278.974 li
202.116 278.474 li
201.616 278.474 li
201.616 283.808 li
207.449 283.808 li
207.449 277.974 li
201.616 277.974 li
201.616 278.474 li
202.116 278.474 li
cp
174.449 278.558 mo
174.449 279.058 li
178.783 279.058 li
178.783 282.891 li
174.949 282.891 li
174.949 278.558 li
174.449 278.558 li
174.449 279.058 li
174.449 278.558 li
173.949 278.558 li
173.949 283.891 li
179.783 283.891 li
179.783 278.058 li
173.949 278.058 li
173.949 278.558 li
174.449 278.558 li
cp
222.283 280.641 mo
222.283 281.141 li
226.616 281.141 li
226.616 284.974 li
222.783 284.974 li
222.783 280.641 li
222.283 280.641 li
222.283 281.141 li
222.283 280.641 li
221.783 280.641 li
221.783 285.974 li
227.616 285.974 li
227.616 280.141 li
221.783 280.141 li
221.783 280.641 li
222.283 280.641 li
cp
390.617 288.891 mo
390.617 289.391 li
394.949 289.391 li
394.949 293.224 li
391.117 293.224 li
391.117 288.891 li
390.617 288.891 li
390.617 289.391 li
390.617 288.891 li
390.117 288.891 li
390.117 294.224 li
395.949 294.224 li
395.949 288.391 li
390.117 288.391 li
390.117 288.891 li
390.617 288.891 li
cp
391.032 290.891 mo
391.032 291.391 li
395.367 291.391 li
395.367 295.224 li
391.532 295.224 li
391.532 290.891 li
391.032 290.891 li
391.032 291.391 li
391.032 290.891 li
390.532 290.891 li
390.532 296.224 li
396.367 296.224 li
396.367 290.391 li
390.532 290.391 li
390.532 290.891 li
391.032 290.891 li
cp
404.283 286.808 mo
404.283 287.308 li
408.617 287.308 li
408.617 291.141 li
404.783 291.141 li
404.783 286.808 li
404.283 286.808 li
404.283 287.308 li
404.283 286.808 li
403.783 286.808 li
403.783 292.141 li
409.617 292.141 li
409.617 286.308 li
403.783 286.308 li
403.783 286.808 li
404.283 286.808 li
cp
399.617 288.474 mo
399.617 288.974 li
403.949 288.974 li
403.949 292.808 li
400.117 292.808 li
400.117 288.474 li
399.617 288.474 li
399.617 288.974 li
399.617 288.474 li
399.117 288.474 li
399.117 293.808 li
404.949 293.808 li
404.949 287.974 li
399.117 287.974 li
399.117 288.474 li
399.617 288.474 li
cp
408.199 293.558 mo
408.199 294.058 li
412.533 294.058 li
412.533 297.891 li
408.699 297.891 li
408.699 293.558 li
408.199 293.558 li
408.199 294.058 li
408.199 293.558 li
407.699 293.558 li
407.699 298.891 li
413.533 298.891 li
413.533 293.058 li
407.699 293.058 li
407.699 293.558 li
408.199 293.558 li
cp
351.449 282.808 mo
351.449 283.308 li
355.782 283.308 li
355.782 287.141 li
351.949 287.141 li
351.949 282.808 li
351.449 282.808 li
351.449 283.308 li
351.449 282.808 li
350.949 282.808 li
350.949 288.141 li
356.782 288.141 li
356.782 282.308 li
350.949 282.308 li
350.949 282.808 li
351.449 282.808 li
cp
373.532 282.308 mo
373.532 282.808 li
377.867 282.808 li
377.867 286.641 li
374.032 286.641 li
374.032 282.308 li
373.532 282.308 li
373.532 282.808 li
373.532 282.308 li
373.032 282.308 li
373.032 287.641 li
378.867 287.641 li
378.867 281.808 li
373.032 281.808 li
373.032 282.308 li
373.532 282.308 li
cp
412.033 252.058 mo
412.033 252.558 li
416.367 252.558 li
416.367 256.391 li
412.533 256.391 li
412.533 252.058 li
412.033 252.058 li
412.033 252.558 li
412.033 252.058 li
411.533 252.058 li
411.533 257.391 li
417.367 257.391 li
417.367 251.558 li
411.533 251.558 li
411.533 252.058 li
412.033 252.058 li
cp
404.783 277.808 mo
404.783 278.308 li
409.117 278.308 li
409.117 282.141 li
405.283 282.141 li
405.283 277.808 li
404.783 277.808 li
404.783 278.308 li
404.783 277.808 li
404.283 277.808 li
404.283 283.141 li
410.117 283.141 li
410.117 277.308 li
404.283 277.308 li
404.283 277.808 li
404.783 277.808 li
cp
402.699 277.891 mo
402.699 278.391 li
407.033 278.391 li
407.033 282.224 li
403.199 282.224 li
403.199 277.891 li
402.699 277.891 li
402.699 278.391 li
402.699 277.891 li
402.199 277.891 li
402.199 283.224 li
408.033 283.224 li
408.033 277.391 li
402.199 277.391 li
402.199 277.891 li
402.699 277.891 li
cp
399.117 277.474 mo
399.117 277.974 li
403.449 277.974 li
403.449 281.808 li
399.617 281.808 li
399.617 277.474 li
399.117 277.474 li
399.117 277.974 li
399.117 277.474 li
398.617 277.474 li
398.617 282.808 li
404.449 282.808 li
404.449 276.974 li
398.617 276.974 li
398.617 277.474 li
399.117 277.474 li
cp
390.032 277.641 mo
390.032 278.141 li
394.367 278.141 li
394.367 281.974 li
390.532 281.974 li
390.532 277.641 li
390.032 277.641 li
390.032 278.141 li
390.032 277.641 li
389.532 277.641 li
389.532 282.974 li
395.367 282.974 li
395.367 277.141 li
389.532 277.141 li
389.532 277.641 li
390.032 277.641 li
cp
317.367 277.308 mo
317.367 277.808 li
321.699 277.808 li
321.699 281.641 li
317.867 281.641 li
317.867 277.308 li
317.367 277.308 li
317.367 277.808 li
317.367 277.308 li
316.867 277.308 li
316.867 282.641 li
322.699 282.641 li
322.699 276.808 li
316.867 276.808 li
316.867 277.308 li
317.367 277.308 li
cp
415.199 278.224 mo
415.199 278.724 li
419.533 278.724 li
419.533 282.558 li
415.699 282.558 li
415.699 278.224 li
415.199 278.224 li
415.199 278.724 li
415.199 278.224 li
414.699 278.224 li
414.699 283.558 li
420.533 283.558 li
420.533 277.724 li
414.699 277.724 li
414.699 278.224 li
415.199 278.224 li
cp
415.283 278.391 mo
415.283 278.891 li
419.617 278.891 li
419.617 282.724 li
415.783 282.724 li
415.783 278.391 li
415.283 278.391 li
415.283 278.891 li
415.283 278.391 li
414.783 278.391 li
414.783 283.724 li
420.617 283.724 li
420.617 277.891 li
414.783 277.891 li
414.783 278.391 li
415.283 278.391 li
cp
415.117 278.391 mo
415.117 278.891 li
419.449 278.891 li
419.449 282.724 li
415.617 282.724 li
415.617 278.391 li
415.117 278.391 li
415.117 278.891 li
415.117 278.391 li
414.617 278.391 li
414.617 283.724 li
420.449 283.724 li
420.449 277.891 li
414.617 277.891 li
414.617 278.391 li
415.117 278.391 li
cp
415.283 279.891 mo
415.283 280.391 li
419.617 280.391 li
419.617 284.224 li
415.783 284.224 li
415.783 279.891 li
415.283 279.891 li
415.283 280.391 li
415.283 279.891 li
414.783 279.891 li
414.783 285.224 li
420.617 285.224 li
420.617 279.391 li
414.783 279.391 li
414.783 279.891 li
415.283 279.891 li
cp
415.199 278.474 mo
415.199 278.974 li
419.533 278.974 li
419.533 282.808 li
415.699 282.808 li
415.699 278.474 li
415.199 278.474 li
415.199 278.974 li
415.199 278.474 li
414.699 278.474 li
414.699 283.808 li
420.533 283.808 li
420.533 277.974 li
414.699 277.974 li
414.699 278.474 li
415.199 278.474 li
cp
410.533 277.808 mo
410.533 278.308 li
414.867 278.308 li
414.867 282.141 li
411.033 282.141 li
411.033 277.808 li
410.533 277.808 li
410.533 278.308 li
410.533 277.808 li
410.033 277.808 li
410.033 283.141 li
415.867 283.141 li
415.867 277.308 li
410.033 277.308 li
410.033 277.808 li
410.533 277.808 li
cp
409.949 277.558 mo
409.949 278.058 li
414.283 278.058 li
414.283 281.891 li
410.449 281.891 li
410.449 277.558 li
409.949 277.558 li
409.949 278.058 li
409.949 277.558 li
409.449 277.558 li
409.449 282.891 li
415.283 282.891 li
415.283 277.058 li
409.449 277.058 li
409.449 277.558 li
409.949 277.558 li
cp
411.783 276.308 mo
411.783 276.808 li
416.117 276.808 li
416.117 280.641 li
412.283 280.641 li
412.283 276.308 li
411.783 276.308 li
411.783 276.808 li
411.783 276.308 li
411.283 276.308 li
411.283 281.641 li
417.117 281.641 li
417.117 275.808 li
411.283 275.808 li
411.283 276.308 li
411.783 276.308 li
cp
413.199 276.474 mo
413.199 276.974 li
417.533 276.974 li
417.533 280.808 li
413.699 280.808 li
413.699 276.474 li
413.199 276.474 li
413.199 276.974 li
413.199 276.474 li
412.699 276.474 li
412.699 281.808 li
418.533 281.808 li
418.533 275.974 li
412.699 275.974 li
412.699 276.474 li
413.199 276.474 li
cp
407.117 275.724 mo
407.117 276.224 li
411.449 276.224 li
411.449 280.058 li
407.617 280.058 li
407.617 275.724 li
407.117 275.724 li
407.117 276.224 li
407.117 275.724 li
406.617 275.724 li
406.617 281.058 li
412.449 281.058 li
412.449 275.224 li
406.617 275.224 li
406.617 275.724 li
407.117 275.724 li
cp
78.9492 277.391 mo
78.9492 277.891 li
83.2827 277.891 li
83.2827 281.724 li
79.4492 281.724 li
79.4492 277.391 li
78.9492 277.391 li
78.9492 277.891 li
78.9492 277.391 li
78.4492 277.391 li
78.4492 282.724 li
84.2827 282.724 li
84.2827 276.891 li
78.4492 276.891 li
78.4492 277.391 li
78.9492 277.391 li
cp
233.616 277.558 mo
233.616 278.058 li
237.949 278.058 li
237.949 281.891 li
234.116 281.891 li
234.116 277.558 li
233.616 277.558 li
233.616 278.058 li
233.616 277.558 li
233.116 277.558 li
233.116 282.891 li
238.949 282.891 li
238.949 277.058 li
233.116 277.058 li
233.116 277.558 li
233.616 277.558 li
cp
355.699 278.808 mo
355.699 279.308 li
360.032 279.308 li
360.032 283.141 li
356.199 283.141 li
356.199 278.808 li
355.699 278.808 li
355.699 279.308 li
355.699 278.808 li
355.199 278.808 li
355.199 284.141 li
361.032 284.141 li
361.032 278.308 li
355.199 278.308 li
355.199 278.808 li
355.699 278.808 li
cp
351.699 277.641 mo
351.699 278.141 li
356.032 278.141 li
356.032 281.974 li
352.199 281.974 li
352.199 277.641 li
351.699 277.641 li
351.699 278.141 li
351.699 277.641 li
351.199 277.641 li
351.199 282.974 li
357.032 282.974 li
357.032 277.141 li
351.199 277.141 li
351.199 277.641 li
351.699 277.641 li
cp
409.199 277.808 mo
409.199 278.308 li
413.533 278.308 li
413.533 282.141 li
409.699 282.141 li
409.699 277.808 li
409.199 277.808 li
409.199 278.308 li
409.199 277.808 li
408.699 277.808 li
408.699 283.141 li
414.533 283.141 li
414.533 277.308 li
408.699 277.308 li
408.699 277.808 li
409.199 277.808 li
cp
410.533 277.474 mo
410.533 277.974 li
414.867 277.974 li
414.867 281.808 li
411.033 281.808 li
411.033 277.474 li
410.533 277.474 li
410.533 277.974 li
410.533 277.474 li
410.033 277.474 li
410.033 282.808 li
415.867 282.808 li
415.867 276.974 li
410.033 276.974 li
410.033 277.474 li
410.533 277.474 li
cp
415.199 278.058 mo
415.199 278.558 li
419.533 278.558 li
419.533 282.391 li
415.699 282.391 li
415.699 278.058 li
415.199 278.058 li
415.199 278.558 li
415.199 278.058 li
414.699 278.058 li
414.699 283.391 li
420.533 283.391 li
420.533 277.558 li
414.699 277.558 li
414.699 278.058 li
415.199 278.058 li
cp
386.699 277.641 mo
386.699 278.141 li
391.032 278.141 li
391.032 281.974 li
387.199 281.974 li
387.199 277.641 li
386.699 277.641 li
386.699 278.141 li
386.699 277.641 li
386.199 277.641 li
386.199 282.974 li
392.032 282.974 li
392.032 277.141 li
386.199 277.141 li
386.199 277.641 li
386.699 277.641 li
cp
159.949 277.641 mo
159.949 278.141 li
164.283 278.141 li
164.283 281.974 li
160.449 281.974 li
160.449 277.641 li
159.949 277.641 li
159.949 278.141 li
159.949 277.641 li
159.449 277.641 li
159.449 282.974 li
165.283 282.974 li
165.283 277.141 li
159.449 277.141 li
159.449 277.641 li
159.949 277.641 li
cp
176.783 278.391 mo
176.783 278.891 li
181.116 278.891 li
181.116 282.724 li
177.283 282.724 li
177.283 278.391 li
176.783 278.391 li
176.783 278.891 li
176.783 278.391 li
176.283 278.391 li
176.283 283.724 li
182.116 283.724 li
182.116 277.891 li
176.283 277.891 li
176.283 278.391 li
176.783 278.391 li
cp
178.616 277.724 mo
178.616 278.224 li
182.949 278.224 li
182.949 282.058 li
179.116 282.058 li
179.116 277.724 li
178.616 277.724 li
178.616 278.224 li
178.616 277.724 li
178.116 277.724 li
178.116 283.058 li
183.949 283.058 li
183.949 277.224 li
178.116 277.224 li
178.116 277.724 li
178.616 277.724 li
cp
171.033 276.724 mo
171.033 277.224 li
175.366 277.224 li
175.366 281.058 li
171.533 281.058 li
171.533 276.724 li
171.033 276.724 li
171.033 277.224 li
171.033 276.724 li
170.533 276.724 li
170.533 282.058 li
176.366 282.058 li
176.366 276.224 li
170.533 276.224 li
170.533 276.724 li
171.033 276.724 li
cp
246.949 276.391 mo
246.949 276.891 li
251.283 276.891 li
251.283 280.724 li
247.449 280.724 li
247.449 276.391 li
246.949 276.391 li
246.949 276.891 li
246.949 276.391 li
246.449 276.391 li
246.449 281.724 li
252.283 281.724 li
252.283 275.891 li
246.449 275.891 li
246.449 276.391 li
246.949 276.391 li
cp
356.032 109.224 mo
356.032 109.724 li
360.367 109.724 li
360.367 113.558 li
356.532 113.558 li
356.532 109.224 li
356.032 109.224 li
356.032 109.724 li
356.032 109.224 li
355.532 109.224 li
355.532 114.558 li
361.367 114.558 li
361.367 108.724 li
355.532 108.724 li
355.532 109.224 li
356.032 109.224 li
cp
376.532 171.641 mo
376.532 172.141 li
380.867 172.141 li
380.867 175.974 li
377.032 175.974 li
377.032 171.641 li
376.532 171.641 li
376.532 172.141 li
376.532 171.641 li
376.032 171.641 li
376.032 176.974 li
381.867 176.974 li
381.867 171.141 li
376.032 171.141 li
376.032 171.641 li
376.532 171.641 li
cp
395.282 212.808 mo
395.282 213.308 li
399.617 213.308 li
399.617 217.141 li
395.782 217.141 li
395.782 212.808 li
395.282 212.808 li
395.282 213.308 li
395.282 212.808 li
394.782 212.808 li
394.782 218.141 li
400.617 218.141 li
400.617 212.308 li
394.782 212.308 li
394.782 212.808 li
395.282 212.808 li
cp
396.617 247.974 mo
396.617 248.474 li
400.949 248.474 li
400.949 252.308 li
397.117 252.308 li
397.117 247.974 li
396.617 247.974 li
396.617 248.474 li
396.617 247.974 li
396.117 247.974 li
396.117 253.308 li
401.949 253.308 li
401.949 247.474 li
396.117 247.474 li
396.117 247.974 li
396.617 247.974 li
cp
406.283 280.141 mo
406.283 280.641 li
410.617 280.641 li
410.617 284.474 li
406.783 284.474 li
406.783 280.141 li
406.283 280.141 li
406.283 280.641 li
406.283 280.141 li
405.783 280.141 li
405.783 285.474 li
411.617 285.474 li
411.617 279.641 li
405.783 279.641 li
405.783 280.141 li
406.283 280.141 li
cp
410.033 193.058 mo
410.033 193.558 li
414.367 193.558 li
414.367 197.391 li
410.533 197.391 li
410.533 193.058 li
410.033 193.058 li
410.033 193.558 li
410.033 193.058 li
409.533 193.058 li
409.533 198.391 li
415.367 198.391 li
415.367 192.558 li
409.533 192.558 li
409.533 193.058 li
410.033 193.058 li
cp
405.949 173.974 mo
405.949 174.474 li
410.283 174.474 li
410.283 178.308 li
406.449 178.308 li
406.449 173.974 li
405.949 173.974 li
405.949 174.474 li
405.949 173.974 li
405.449 173.974 li
405.449 179.308 li
411.283 179.308 li
411.283 173.474 li
405.449 173.474 li
405.449 173.974 li
405.949 173.974 li
cp
407.699 72.3906 mo
407.699 72.8906 li
412.033 72.8906 li
412.033 76.7241 li
408.199 76.7241 li
408.199 72.3906 li
407.699 72.3906 li
407.699 72.8906 li
407.699 72.3906 li
407.199 72.3906 li
407.199 77.7241 li
413.033 77.7241 li
413.033 71.8906 li
407.199 71.8906 li
407.199 72.3906 li
407.699 72.3906 li
cp
406.283 168.641 mo
406.283 169.141 li
410.617 169.141 li
410.617 172.974 li
406.783 172.974 li
406.783 168.641 li
406.283 168.641 li
406.283 169.141 li
406.283 168.641 li
405.783 168.641 li
405.783 173.974 li
411.617 173.974 li
411.617 168.141 li
405.783 168.141 li
405.783 168.641 li
406.283 168.641 li
cp
413.949 279.058 mo
413.949 279.558 li
418.283 279.558 li
418.283 283.391 li
414.449 283.391 li
414.449 279.058 li
413.949 279.058 li
413.949 279.558 li
413.949 279.058 li
413.449 279.058 li
413.449 284.391 li
419.283 284.391 li
419.283 278.558 li
413.449 278.558 li
413.449 279.058 li
413.949 279.058 li
cp
362.782 278.808 mo
362.782 279.308 li
367.117 279.308 li
367.117 283.141 li
363.282 283.141 li
363.282 278.808 li
362.782 278.808 li
362.782 279.308 li
362.782 278.808 li
362.282 278.808 li
362.282 284.141 li
368.117 284.141 li
368.117 278.308 li
362.282 278.308 li
362.282 278.808 li
362.782 278.808 li
cp
357.949 279.391 mo
357.949 279.891 li
362.282 279.891 li
362.282 283.724 li
358.449 283.724 li
358.449 279.391 li
357.949 279.391 li
357.949 279.891 li
357.949 279.391 li
357.449 279.391 li
357.449 284.724 li
363.282 284.724 li
363.282 278.891 li
357.449 278.891 li
357.449 279.391 li
357.949 279.391 li
cp
342.699 281.308 mo
342.699 281.808 li
347.032 281.808 li
347.032 285.641 li
343.199 285.641 li
343.199 281.308 li
342.699 281.308 li
342.699 281.808 li
342.699 281.308 li
342.199 281.308 li
342.199 286.641 li
348.032 286.641 li
348.032 280.808 li
342.199 280.808 li
342.199 281.308 li
342.699 281.308 li
cp
282.449 277.641 mo
282.449 278.141 li
286.782 278.141 li
286.782 281.974 li
282.949 281.974 li
282.949 277.641 li
282.449 277.641 li
282.449 278.141 li
282.449 277.641 li
281.949 277.641 li
281.949 282.974 li
287.782 282.974 li
287.782 277.141 li
281.949 277.141 li
281.949 277.641 li
282.449 277.641 li
cp
389.449 268.724 mo
389.449 269.224 li
393.782 269.224 li
393.782 273.058 li
389.949 273.058 li
389.949 268.724 li
389.449 268.724 li
389.449 269.224 li
389.449 268.724 li
388.949 268.724 li
388.949 274.058 li
394.782 274.058 li
394.782 268.224 li
388.949 268.224 li
388.949 268.724 li
389.449 268.724 li
cp
384.282 271.558 mo
384.282 272.058 li
388.617 272.058 li
388.617 275.891 li
384.782 275.891 li
384.782 271.558 li
384.282 271.558 li
384.282 272.058 li
384.282 271.558 li
383.782 271.558 li
383.782 276.891 li
389.617 276.891 li
389.617 271.058 li
383.782 271.058 li
383.782 271.558 li
384.282 271.558 li
cp
403.367 266.308 mo
403.367 266.808 li
407.699 266.808 li
407.699 270.641 li
403.867 270.641 li
403.867 266.308 li
403.367 266.308 li
403.367 266.808 li
403.367 266.308 li
402.867 266.308 li
402.867 271.641 li
408.699 271.641 li
408.699 265.808 li
402.867 265.808 li
402.867 266.308 li
403.367 266.308 li
cp
405.617 275.808 mo
405.617 276.308 li
409.949 276.308 li
409.949 280.141 li
406.117 280.141 li
406.117 275.808 li
405.617 275.808 li
405.617 276.308 li
405.617 275.808 li
405.117 275.808 li
405.117 281.141 li
410.949 281.141 li
410.949 275.308 li
405.117 275.308 li
405.117 275.808 li
405.617 275.808 li
cp
292.199 291.224 mo
292.199 291.724 li
296.532 291.724 li
296.532 295.558 li
292.699 295.558 li
292.699 291.224 li
292.199 291.224 li
292.199 291.724 li
292.199 291.224 li
291.699 291.224 li
291.699 296.558 li
297.532 296.558 li
297.532 290.724 li
291.699 290.724 li
291.699 291.224 li
292.199 291.224 li
cp
297.699 279.974 mo
297.699 280.474 li
302.032 280.474 li
302.032 284.308 li
298.199 284.308 li
298.199 279.974 li
297.699 279.974 li
297.699 280.474 li
297.699 279.974 li
297.199 279.974 li
297.199 285.308 li
303.032 285.308 li
303.032 279.474 li
297.199 279.474 li
297.199 279.974 li
297.699 279.974 li
cp
417.699 280.891 mo
417.699 281.391 li
422.033 281.391 li
422.033 285.224 li
418.199 285.224 li
418.199 280.891 li
417.699 280.891 li
417.699 281.391 li
417.699 280.891 li
417.199 280.891 li
417.199 286.224 li
423.033 286.224 li
423.033 280.391 li
417.199 280.391 li
417.199 280.891 li
417.699 280.891 li
cp
417.699 278.391 mo
417.699 278.891 li
422.033 278.891 li
422.033 282.724 li
418.199 282.724 li
418.199 278.391 li
417.699 278.391 li
417.699 278.891 li
417.699 278.391 li
417.199 278.391 li
417.199 283.724 li
423.033 283.724 li
423.033 277.891 li
417.199 277.891 li
417.199 278.391 li
417.699 278.391 li
cp
418.617 279.058 mo
418.617 279.558 li
422.949 279.558 li
422.949 283.391 li
419.117 283.391 li
419.117 279.058 li
418.617 279.058 li
418.617 279.558 li
418.617 279.058 li
418.117 279.058 li
418.117 284.391 li
423.949 284.391 li
423.949 278.558 li
418.117 278.558 li
418.117 279.058 li
418.617 279.058 li
cp
422.699 309.558 mo
422.699 310.058 li
427.033 310.058 li
427.033 313.891 li
423.199 313.891 li
423.199 309.558 li
422.699 309.558 li
422.699 310.058 li
422.699 309.558 li
422.199 309.558 li
422.199 314.891 li
428.033 314.891 li
428.033 309.058 li
422.199 309.058 li
422.199 309.558 li
422.699 309.558 li
cp
422.283 297.308 mo
422.283 297.808 li
426.617 297.808 li
426.617 301.641 li
422.783 301.641 li
422.783 297.308 li
422.283 297.308 li
422.283 297.808 li
422.283 297.308 li
421.783 297.308 li
421.783 302.641 li
427.617 302.641 li
427.617 296.808 li
421.783 296.808 li
421.783 297.308 li
422.283 297.308 li
cp
420.617 300.224 mo
420.617 300.724 li
424.949 300.724 li
424.949 304.558 li
421.117 304.558 li
421.117 300.224 li
420.617 300.224 li
420.617 300.724 li
420.617 300.224 li
420.117 300.224 li
420.117 305.558 li
425.949 305.558 li
425.949 299.724 li
420.117 299.724 li
420.117 300.224 li
420.617 300.224 li
cp
415.949 266.391 mo
415.949 266.891 li
420.283 266.891 li
420.283 270.724 li
416.449 270.724 li
416.449 266.391 li
415.949 266.391 li
415.949 266.891 li
415.949 266.391 li
415.449 266.391 li
415.449 271.724 li
421.283 271.724 li
421.283 265.891 li
415.449 265.891 li
415.449 266.391 li
415.949 266.391 li
cp
412.283 278.141 mo
412.283 278.641 li
416.617 278.641 li
416.617 282.474 li
412.783 282.474 li
412.783 278.141 li
412.283 278.141 li
412.283 278.641 li
412.283 278.141 li
411.783 278.141 li
411.783 283.474 li
417.617 283.474 li
417.617 277.641 li
411.783 277.641 li
411.783 278.141 li
412.283 278.141 li
cp
414.283 279.391 mo
414.283 279.891 li
418.617 279.891 li
418.617 283.724 li
414.783 283.724 li
414.783 279.391 li
414.283 279.391 li
414.283 279.891 li
414.283 279.391 li
413.783 279.391 li
413.783 284.724 li
419.617 284.724 li
419.617 278.891 li
413.783 278.891 li
413.783 279.391 li
414.283 279.391 li
cp
414.367 277.558 mo
414.367 278.058 li
418.699 278.058 li
418.699 281.891 li
414.867 281.891 li
414.867 277.558 li
414.367 277.558 li
414.367 278.058 li
414.367 277.558 li
413.867 277.558 li
413.867 282.891 li
419.699 282.891 li
419.699 277.058 li
413.867 277.058 li
413.867 277.558 li
414.367 277.558 li
cp
418.533 337.724 mo
418.533 338.224 li
422.867 338.224 li
422.867 342.058 li
419.033 342.058 li
419.033 337.724 li
418.533 337.724 li
418.533 338.224 li
418.533 337.724 li
418.033 337.724 li
418.033 343.058 li
423.867 343.058 li
423.867 337.224 li
418.033 337.224 li
418.033 337.724 li
418.533 337.724 li
cp
418.617 322.391 mo
418.617 322.891 li
422.949 322.891 li
422.949 326.724 li
419.117 326.724 li
419.117 322.391 li
418.617 322.391 li
418.617 322.891 li
418.617 322.391 li
418.117 322.391 li
418.117 327.724 li
423.949 327.724 li
423.949 321.891 li
418.117 321.891 li
418.117 322.391 li
418.617 322.391 li
cp
417.199 285.391 mo
417.199 285.891 li
421.533 285.891 li
421.533 289.724 li
417.699 289.724 li
417.699 285.391 li
417.199 285.391 li
417.199 285.891 li
417.199 285.391 li
416.699 285.391 li
416.699 290.724 li
422.533 290.724 li
422.533 284.891 li
416.699 284.891 li
416.699 285.391 li
417.199 285.391 li
cp
418.033 279.058 mo
418.033 279.558 li
422.367 279.558 li
422.367 283.391 li
418.533 283.391 li
418.533 279.058 li
418.033 279.058 li
418.033 279.558 li
418.033 279.058 li
417.533 279.058 li
417.533 284.391 li
423.367 284.391 li
423.367 278.558 li
417.533 278.558 li
417.533 279.058 li
418.033 279.058 li
cp
420.449 307.891 mo
420.449 308.391 li
424.783 308.391 li
424.783 312.224 li
420.949 312.224 li
420.949 307.891 li
420.449 307.891 li
420.449 308.391 li
420.449 307.891 li
419.949 307.891 li
419.949 313.224 li
425.783 313.224 li
425.783 307.391 li
419.949 307.391 li
419.949 307.891 li
420.449 307.891 li
cp
420.033 306.558 mo
420.033 307.058 li
424.367 307.058 li
424.367 310.891 li
420.533 310.891 li
420.533 306.558 li
420.033 306.558 li
420.033 307.058 li
420.033 306.558 li
419.533 306.558 li
419.533 311.891 li
425.367 311.891 li
425.367 306.058 li
419.533 306.058 li
419.533 306.558 li
420.033 306.558 li
cp
418.699 309.808 mo
418.699 310.308 li
423.033 310.308 li
423.033 314.141 li
419.199 314.141 li
419.199 309.808 li
418.699 309.808 li
418.699 310.308 li
418.699 309.808 li
418.199 309.808 li
418.199 315.141 li
424.033 315.141 li
424.033 309.308 li
418.199 309.308 li
418.199 309.808 li
418.699 309.808 li
cp
417.699 299.808 mo
417.699 300.308 li
422.033 300.308 li
422.033 304.141 li
418.199 304.141 li
418.199 299.808 li
417.699 299.808 li
417.699 300.308 li
417.699 299.808 li
417.199 299.808 li
417.199 305.141 li
423.033 305.141 li
423.033 299.308 li
417.199 299.308 li
417.199 299.808 li
417.699 299.808 li
cp
210.116 275.474 mo
210.116 275.974 li
214.449 275.974 li
214.449 279.808 li
210.616 279.808 li
210.616 275.474 li
210.116 275.474 li
210.116 275.974 li
210.116 275.474 li
209.616 275.474 li
209.616 280.808 li
215.449 280.808 li
215.449 274.974 li
209.616 274.974 li
209.616 275.474 li
210.116 275.474 li
cp
161.699 276.474 mo
161.699 276.974 li
166.033 276.974 li
166.033 280.808 li
162.199 280.808 li
162.199 276.474 li
161.699 276.474 li
161.699 276.974 li
161.699 276.474 li
161.199 276.474 li
161.199 281.808 li
167.033 281.808 li
167.033 275.974 li
161.199 275.974 li
161.199 276.474 li
161.699 276.474 li
cp
317.282 270.224 mo
317.282 270.724 li
321.617 270.724 li
321.617 274.558 li
317.782 274.558 li
317.782 270.224 li
317.282 270.224 li
317.282 270.724 li
317.282 270.224 li
316.782 270.224 li
316.782 275.558 li
322.617 275.558 li
322.617 269.724 li
316.782 269.724 li
316.782 270.224 li
317.282 270.224 li
cp
381.199 277.224 mo
381.199 277.724 li
385.532 277.724 li
385.532 281.558 li
381.699 281.558 li
381.699 277.224 li
381.199 277.224 li
381.199 277.724 li
381.199 277.224 li
380.699 277.224 li
380.699 282.558 li
386.532 282.558 li
386.532 276.724 li
380.699 276.724 li
380.699 277.224 li
381.199 277.224 li
cp
384.282 280.224 mo
384.282 280.724 li
388.617 280.724 li
388.617 284.558 li
384.782 284.558 li
384.782 280.224 li
384.282 280.224 li
384.282 280.724 li
384.282 280.224 li
383.782 280.224 li
383.782 285.558 li
389.617 285.558 li
389.617 279.724 li
383.782 279.724 li
383.782 280.224 li
384.282 280.224 li
cp
395.949 279.558 mo
395.949 280.058 li
400.282 280.058 li
400.282 283.891 li
396.449 283.891 li
396.449 279.558 li
395.949 279.558 li
395.949 280.058 li
395.949 279.558 li
395.449 279.558 li
395.449 284.891 li
401.282 284.891 li
401.282 279.058 li
395.449 279.058 li
395.449 279.558 li
395.949 279.558 li
cp
405.117 295.558 mo
405.117 296.058 li
409.449 296.058 li
409.449 299.891 li
405.617 299.891 li
405.617 295.558 li
405.117 295.558 li
405.117 296.058 li
405.117 295.558 li
404.617 295.558 li
404.617 300.891 li
410.449 300.891 li
410.449 295.058 li
404.617 295.058 li
404.617 295.558 li
405.117 295.558 li
cp
404.617 308.891 mo
404.617 309.391 li
408.949 309.391 li
408.949 313.224 li
405.117 313.224 li
405.117 308.891 li
404.617 308.891 li
404.617 309.391 li
404.617 308.891 li
404.117 308.891 li
404.117 314.224 li
409.949 314.224 li
409.949 308.391 li
404.117 308.391 li
404.117 308.891 li
404.617 308.891 li
cp
415.033 277.224 mo
415.033 277.724 li
419.367 277.724 li
419.367 281.558 li
415.533 281.558 li
415.533 277.224 li
415.033 277.224 li
415.033 277.724 li
415.033 277.224 li
414.533 277.224 li
414.533 282.558 li
420.367 282.558 li
420.367 276.724 li
414.533 276.724 li
414.533 277.224 li
415.033 277.224 li
cp
415.033 278.474 mo
415.033 278.974 li
419.367 278.974 li
419.367 282.808 li
415.533 282.808 li
415.533 278.474 li
415.033 278.474 li
415.033 278.974 li
415.033 278.474 li
414.533 278.474 li
414.533 283.808 li
420.367 283.808 li
420.367 277.974 li
414.533 277.974 li
414.533 278.474 li
415.033 278.474 li
cp
415.033 277.891 mo
415.033 278.391 li
419.367 278.391 li
419.367 282.224 li
415.533 282.224 li
415.533 277.891 li
415.033 277.891 li
415.033 278.391 li
415.033 277.891 li
414.533 277.891 li
414.533 283.224 li
420.367 283.224 li
420.367 277.391 li
414.533 277.391 li
414.533 277.891 li
415.033 277.891 li
cp
414.783 277.224 mo
414.783 277.724 li
419.117 277.724 li
419.117 281.558 li
415.283 281.558 li
415.283 277.224 li
414.783 277.224 li
414.783 277.724 li
414.783 277.224 li
414.283 277.224 li
414.283 282.558 li
420.117 282.558 li
420.117 276.724 li
414.283 276.724 li
414.283 277.224 li
414.783 277.224 li
cp
414.949 277.891 mo
414.949 278.391 li
419.283 278.391 li
419.283 282.224 li
415.449 282.224 li
415.449 277.891 li
414.949 277.891 li
414.949 278.391 li
414.949 277.891 li
414.449 277.891 li
414.449 283.224 li
420.283 283.224 li
420.283 277.391 li
414.449 277.391 li
414.449 277.891 li
414.949 277.891 li
cp
414.867 281.724 mo
414.867 282.224 li
419.199 282.224 li
419.199 286.058 li
415.367 286.058 li
415.367 281.724 li
414.867 281.724 li
414.867 282.224 li
414.867 281.724 li
414.367 281.724 li
414.367 287.058 li
420.199 287.058 li
420.199 281.224 li
414.367 281.224 li
414.367 281.724 li
414.867 281.724 li
cp
417.033 281.391 mo
417.033 281.891 li
421.367 281.891 li
421.367 285.724 li
417.533 285.724 li
417.533 281.391 li
417.033 281.391 li
417.033 281.891 li
417.033 281.391 li
416.533 281.391 li
416.533 286.724 li
422.367 286.724 li
422.367 280.891 li
416.533 280.891 li
416.533 281.391 li
417.033 281.391 li
cp
415.033 284.974 mo
415.033 285.474 li
419.367 285.474 li
419.367 289.308 li
415.533 289.308 li
415.533 284.974 li
415.033 284.974 li
415.033 285.474 li
415.033 284.974 li
414.533 284.974 li
414.533 290.308 li
420.367 290.308 li
420.367 284.474 li
414.533 284.474 li
414.533 284.974 li
415.033 284.974 li
cp
416.367 276.974 mo
416.367 277.474 li
420.699 277.474 li
420.699 281.308 li
416.867 281.308 li
416.867 276.974 li
416.367 276.974 li
416.367 277.474 li
416.367 276.974 li
415.867 276.974 li
415.867 282.308 li
421.699 282.308 li
421.699 276.474 li
415.867 276.474 li
415.867 276.974 li
416.367 276.974 li
cp
415.783 250.224 mo
415.783 250.724 li
420.117 250.724 li
420.117 254.558 li
416.283 254.558 li
416.283 250.224 li
415.783 250.224 li
415.783 250.724 li
415.783 250.224 li
415.283 250.224 li
415.283 255.558 li
421.117 255.558 li
421.117 249.724 li
415.283 249.724 li
415.283 250.224 li
415.783 250.224 li
cp
415.199 278.474 mo
415.199 278.974 li
419.533 278.974 li
419.533 282.808 li
415.699 282.808 li
415.699 278.474 li
415.199 278.474 li
415.199 278.974 li
415.199 278.474 li
414.699 278.474 li
414.699 283.808 li
420.533 283.808 li
420.533 277.974 li
414.699 277.974 li
414.699 278.474 li
415.199 278.474 li
cp
415.367 277.558 mo
415.367 278.058 li
419.699 278.058 li
419.699 281.891 li
415.867 281.891 li
415.867 277.558 li
415.367 277.558 li
415.367 278.058 li
415.367 277.558 li
414.867 277.558 li
414.867 282.891 li
420.699 282.891 li
420.699 277.058 li
414.867 277.058 li
414.867 277.558 li
415.367 277.558 li
cp
415.117 278.308 mo
415.117 278.808 li
419.449 278.808 li
419.449 282.641 li
415.617 282.641 li
415.617 278.308 li
415.117 278.308 li
415.117 278.808 li
415.117 278.308 li
414.617 278.308 li
414.617 283.641 li
420.449 283.641 li
420.449 277.808 li
414.617 277.808 li
414.617 278.308 li
415.117 278.308 li
cp
415.199 299.808 mo
415.199 300.308 li
419.533 300.308 li
419.533 304.141 li
415.699 304.141 li
415.699 299.808 li
415.199 299.808 li
415.199 300.308 li
415.199 299.808 li
414.699 299.808 li
414.699 305.141 li
420.533 305.141 li
420.533 299.308 li
414.699 299.308 li
414.699 299.808 li
415.199 299.808 li
cp
415.033 278.558 mo
415.033 279.058 li
419.367 279.058 li
419.367 282.891 li
415.533 282.891 li
415.533 278.558 li
415.033 278.558 li
415.033 279.058 li
415.033 278.558 li
414.533 278.558 li
414.533 283.891 li
420.367 283.891 li
420.367 278.058 li
414.533 278.058 li
414.533 278.558 li
415.033 278.558 li
cp
414.617 283.808 mo
414.617 284.308 li
418.949 284.308 li
418.949 288.141 li
415.117 288.141 li
415.117 283.808 li
414.617 283.808 li
414.617 284.308 li
414.617 283.808 li
414.117 283.808 li
414.117 289.141 li
419.949 289.141 li
419.949 283.308 li
414.117 283.308 li
414.117 283.808 li
414.617 283.808 li
cp
413.449 287.891 mo
413.449 288.391 li
417.783 288.391 li
417.783 292.224 li
413.949 292.224 li
413.949 287.891 li
413.449 287.891 li
413.449 288.391 li
413.449 287.891 li
412.949 287.891 li
412.949 293.224 li
418.783 293.224 li
418.783 287.391 li
412.949 287.391 li
412.949 287.891 li
413.449 287.891 li
cp
415.449 303.141 mo
415.449 303.641 li
419.783 303.641 li
419.783 307.474 li
415.949 307.474 li
415.949 303.141 li
415.449 303.141 li
415.449 303.641 li
415.449 303.141 li
414.949 303.141 li
414.949 308.474 li
420.783 308.474 li
420.783 302.641 li
414.949 302.641 li
414.949 303.141 li
415.449 303.141 li
cp
346.532 258.058 mo
346.532 258.558 li
350.867 258.558 li
350.867 262.391 li
347.032 262.391 li
347.032 258.058 li
346.532 258.058 li
346.532 258.558 li
346.532 258.058 li
346.032 258.058 li
346.032 263.391 li
351.867 263.391 li
351.867 257.558 li
346.032 257.558 li
346.032 258.058 li
346.532 258.058 li
cp
374.117 278.641 mo
374.117 279.141 li
378.449 279.141 li
378.449 282.974 li
374.617 282.974 li
374.617 278.641 li
374.117 278.641 li
374.117 279.141 li
374.117 278.641 li
373.617 278.641 li
373.617 283.974 li
379.449 283.974 li
379.449 278.141 li
373.617 278.141 li
373.617 278.641 li
374.117 278.641 li
cp
375.617 278.558 mo
375.617 279.058 li
379.949 279.058 li
379.949 282.891 li
376.117 282.891 li
376.117 278.558 li
375.617 278.558 li
375.617 279.058 li
375.617 278.558 li
375.117 278.558 li
375.117 283.891 li
380.949 283.891 li
380.949 278.058 li
375.117 278.058 li
375.117 278.558 li
375.617 278.558 li
cp
378.949 278.308 mo
378.949 278.808 li
383.282 278.808 li
383.282 282.641 li
379.449 282.641 li
379.449 278.308 li
378.949 278.308 li
378.949 278.808 li
378.949 278.308 li
378.449 278.308 li
378.449 283.641 li
384.282 283.641 li
384.282 277.808 li
378.449 277.808 li
378.449 278.308 li
378.949 278.308 li
cp
409.949 278.391 mo
409.949 278.891 li
414.283 278.891 li
414.283 282.724 li
410.449 282.724 li
410.449 278.391 li
409.949 278.391 li
409.949 278.891 li
409.949 278.391 li
409.449 278.391 li
409.449 283.724 li
415.283 283.724 li
415.283 277.891 li
409.449 277.891 li
409.449 278.391 li
409.949 278.391 li
cp
376.949 277.891 mo
376.949 278.391 li
381.282 278.391 li
381.282 282.224 li
377.449 282.224 li
377.449 277.891 li
376.949 277.891 li
376.949 278.391 li
376.949 277.891 li
376.449 277.891 li
376.449 283.224 li
382.282 283.224 li
382.282 277.391 li
376.449 277.391 li
376.449 277.891 li
376.949 277.891 li
cp
377.949 278.058 mo
377.949 278.558 li
382.282 278.558 li
382.282 282.391 li
378.449 282.391 li
378.449 278.058 li
377.949 278.058 li
377.949 278.558 li
377.949 278.058 li
377.449 278.058 li
377.449 283.391 li
383.282 283.391 li
383.282 277.558 li
377.449 277.558 li
377.449 278.058 li
377.949 278.058 li
cp
407.033 277.974 mo
407.033 278.474 li
411.367 278.474 li
411.367 282.308 li
407.533 282.308 li
407.533 277.974 li
407.033 277.974 li
407.033 278.474 li
407.033 277.974 li
406.533 277.974 li
406.533 283.308 li
412.367 283.308 li
412.367 277.474 li
406.533 277.474 li
406.533 277.974 li
407.033 277.974 li
cp
398.532 278.224 mo
398.532 278.724 li
402.867 278.724 li
402.867 282.558 li
399.032 282.558 li
399.032 278.224 li
398.532 278.224 li
398.532 278.724 li
398.532 278.224 li
398.032 278.224 li
398.032 283.558 li
403.867 283.558 li
403.867 277.724 li
398.032 277.724 li
398.032 278.224 li
398.532 278.224 li
cp
413.367 285.724 mo
413.367 286.224 li
417.699 286.224 li
417.699 290.058 li
413.867 290.058 li
413.867 285.724 li
413.367 285.724 li
413.367 286.224 li
413.367 285.724 li
412.867 285.724 li
412.867 291.058 li
418.699 291.058 li
418.699 285.224 li
412.867 285.224 li
412.867 285.724 li
413.367 285.724 li
cp
411.949 289.808 mo
411.949 290.308 li
416.283 290.308 li
416.283 294.141 li
412.449 294.141 li
412.449 289.808 li
411.949 289.808 li
411.949 290.308 li
411.949 289.808 li
411.449 289.808 li
411.449 295.141 li
417.283 295.141 li
417.283 289.308 li
411.449 289.308 li
411.449 289.808 li
411.949 289.808 li
cp
415.699 286.724 mo
415.699 287.224 li
420.033 287.224 li
420.033 291.058 li
416.199 291.058 li
416.199 286.724 li
415.699 286.724 li
415.699 287.224 li
415.699 286.724 li
415.199 286.724 li
415.199 292.058 li
421.033 292.058 li
421.033 286.224 li
415.199 286.224 li
415.199 286.724 li
415.699 286.724 li
cp
415.617 283.974 mo
415.617 284.474 li
419.949 284.474 li
419.949 288.308 li
416.117 288.308 li
416.117 283.974 li
415.617 283.974 li
415.617 284.474 li
415.617 283.974 li
415.117 283.974 li
415.117 289.308 li
420.949 289.308 li
420.949 283.474 li
415.117 283.474 li
415.117 283.974 li
415.617 283.974 li
cp
415.617 280.058 mo
415.617 280.558 li
419.949 280.558 li
419.949 284.391 li
416.117 284.391 li
416.117 280.058 li
415.617 280.058 li
415.617 280.558 li
415.617 280.058 li
415.117 280.058 li
415.117 285.391 li
420.949 285.391 li
420.949 279.558 li
415.117 279.558 li
415.117 280.058 li
415.617 280.058 li
cp
417.199 274.891 mo
417.199 275.391 li
421.533 275.391 li
421.533 279.224 li
417.699 279.224 li
417.699 274.891 li
417.199 274.891 li
417.199 275.391 li
417.199 274.891 li
416.699 274.891 li
416.699 280.224 li
422.533 280.224 li
422.533 274.391 li
416.699 274.391 li
416.699 274.891 li
417.199 274.891 li
cp
417.283 274.058 mo
417.283 274.558 li
421.617 274.558 li
421.617 278.391 li
417.783 278.391 li
417.783 274.058 li
417.283 274.058 li
417.283 274.558 li
417.283 274.058 li
416.783 274.058 li
416.783 279.391 li
422.617 279.391 li
422.617 273.558 li
416.783 273.558 li
416.783 274.058 li
417.283 274.058 li
cp
417.033 275.808 mo
417.033 276.308 li
421.367 276.308 li
421.367 280.141 li
417.533 280.141 li
417.533 275.808 li
417.033 275.808 li
417.033 276.308 li
417.033 275.808 li
416.533 275.808 li
416.533 281.141 li
422.367 281.141 li
422.367 275.308 li
416.533 275.308 li
416.533 275.808 li
417.033 275.808 li
cp
416.617 276.141 mo
416.617 276.641 li
420.949 276.641 li
420.949 280.474 li
417.117 280.474 li
417.117 276.141 li
416.617 276.141 li
416.617 276.641 li
416.617 276.141 li
416.117 276.141 li
416.117 281.474 li
421.949 281.474 li
421.949 275.641 li
416.117 275.641 li
416.117 276.141 li
416.617 276.141 li
cp
415.199 277.974 mo
415.199 278.474 li
419.533 278.474 li
419.533 282.308 li
415.699 282.308 li
415.699 277.974 li
415.199 277.974 li
415.199 278.474 li
415.199 277.974 li
414.699 277.974 li
414.699 283.308 li
420.533 283.308 li
420.533 277.474 li
414.699 277.474 li
414.699 277.974 li
415.199 277.974 li
cp
415.283 278.141 mo
415.283 278.641 li
419.617 278.641 li
419.617 282.474 li
415.783 282.474 li
415.783 278.141 li
415.283 278.141 li
415.283 278.641 li
415.283 278.141 li
414.783 278.141 li
414.783 283.474 li
420.617 283.474 li
420.617 277.641 li
414.783 277.641 li
414.783 278.141 li
415.283 278.141 li
cp
415.199 278.308 mo
415.199 278.808 li
419.533 278.808 li
419.533 282.641 li
415.699 282.641 li
415.699 278.308 li
415.199 278.308 li
415.199 278.808 li
415.199 278.308 li
414.699 278.308 li
414.699 283.641 li
420.533 283.641 li
420.533 277.808 li
414.699 277.808 li
414.699 278.308 li
415.199 278.308 li
cp
415.283 278.224 mo
415.283 278.724 li
419.617 278.724 li
419.617 282.558 li
415.783 282.558 li
415.783 278.224 li
415.283 278.224 li
415.283 278.724 li
415.283 278.224 li
414.783 278.224 li
414.783 283.558 li
420.617 283.558 li
420.617 277.724 li
414.783 277.724 li
414.783 278.224 li
415.283 278.224 li
cp
415.367 278.224 mo
415.367 278.724 li
419.699 278.724 li
419.699 282.558 li
415.867 282.558 li
415.867 278.224 li
415.367 278.224 li
415.367 278.724 li
415.367 278.224 li
414.867 278.224 li
414.867 283.558 li
420.699 283.558 li
420.699 277.724 li
414.867 277.724 li
414.867 278.224 li
415.367 278.224 li
cp
414.033 254.141 mo
414.033 254.641 li
418.367 254.641 li
418.367 258.474 li
414.533 258.474 li
414.533 254.141 li
414.033 254.141 li
414.033 254.641 li
414.033 254.141 li
413.533 254.141 li
413.533 259.474 li
419.367 259.474 li
419.367 253.641 li
413.533 253.641 li
413.533 254.141 li
414.033 254.141 li
cp
414.367 270.558 mo
414.367 271.058 li
418.699 271.058 li
418.699 274.891 li
414.867 274.891 li
414.867 270.558 li
414.367 270.558 li
414.367 271.058 li
414.367 270.558 li
413.867 270.558 li
413.867 275.891 li
419.699 275.891 li
419.699 270.058 li
413.867 270.058 li
413.867 270.558 li
414.367 270.558 li
cp
415.033 274.224 mo
415.033 274.724 li
419.367 274.724 li
419.367 278.558 li
415.533 278.558 li
415.533 274.224 li
415.033 274.224 li
415.033 274.724 li
415.033 274.224 li
414.533 274.224 li
414.533 279.558 li
420.367 279.558 li
420.367 273.724 li
414.533 273.724 li
414.533 274.224 li
415.033 274.224 li
cp
414.867 275.308 mo
414.867 275.808 li
419.199 275.808 li
419.199 279.641 li
415.367 279.641 li
415.367 275.308 li
414.867 275.308 li
414.867 275.808 li
414.867 275.308 li
414.367 275.308 li
414.367 280.641 li
420.199 280.641 li
420.199 274.808 li
414.367 274.808 li
414.367 275.308 li
414.867 275.308 li
cp
414.949 273.641 mo
414.949 274.141 li
419.283 274.141 li
419.283 277.974 li
415.449 277.974 li
415.449 273.641 li
414.949 273.641 li
414.949 274.141 li
414.949 273.641 li
414.449 273.641 li
414.449 278.974 li
420.283 278.974 li
420.283 273.141 li
414.449 273.141 li
414.449 273.641 li
414.949 273.641 li
cp
415.033 273.974 mo
415.033 274.474 li
419.367 274.474 li
419.367 278.308 li
415.533 278.308 li
415.533 273.974 li
415.033 273.974 li
415.033 274.474 li
415.033 273.974 li
414.533 273.974 li
414.533 279.308 li
420.367 279.308 li
420.367 273.474 li
414.533 273.474 li
414.533 273.974 li
415.033 273.974 li
cp
414.867 275.391 mo
414.867 275.891 li
419.199 275.891 li
419.199 279.724 li
415.367 279.724 li
415.367 275.391 li
414.867 275.391 li
414.867 275.891 li
414.867 275.391 li
414.367 275.391 li
414.367 280.724 li
420.199 280.724 li
420.199 274.891 li
414.367 274.891 li
414.367 275.391 li
414.867 275.391 li
cp
200.699 273.308 mo
200.699 273.808 li
205.033 273.808 li
205.033 277.641 li
201.199 277.641 li
201.199 273.308 li
200.699 273.308 li
200.699 273.808 li
200.699 273.308 li
200.199 273.308 li
200.199 278.641 li
206.033 278.641 li
206.033 272.808 li
200.199 272.808 li
200.199 273.308 li
200.699 273.308 li
cp
157.116 38.4741 mo
157.116 38.9741 li
161.449 38.9741 li
161.449 42.8076 li
157.616 42.8076 li
157.616 38.4741 li
157.116 38.4741 li
157.116 38.9741 li
157.116 38.4741 li
156.616 38.4741 li
156.616 43.8076 li
162.449 43.8076 li
162.449 37.9741 li
156.616 37.9741 li
156.616 38.4741 li
157.116 38.4741 li
cp
146.366 268.308 mo
146.366 268.808 li
150.699 268.808 li
150.699 272.641 li
146.866 272.641 li
146.866 268.308 li
146.366 268.308 li
146.366 268.808 li
146.366 268.308 li
145.866 268.308 li
145.866 273.641 li
151.699 273.641 li
151.699 267.808 li
145.866 267.808 li
145.866 268.308 li
146.366 268.308 li
cp
215.949 273.224 mo
215.949 273.724 li
220.283 273.724 li
220.283 277.558 li
216.449 277.558 li
216.449 273.224 li
215.949 273.224 li
215.949 273.724 li
215.949 273.224 li
215.449 273.224 li
215.449 278.558 li
221.283 278.558 li
221.283 272.724 li
215.449 272.724 li
215.449 273.224 li
215.949 273.224 li
cp
415.033 277.474 mo
415.033 277.974 li
419.367 277.974 li
419.367 281.808 li
415.533 281.808 li
415.533 277.474 li
415.033 277.474 li
415.033 277.974 li
415.033 277.474 li
414.533 277.474 li
414.533 282.808 li
420.367 282.808 li
420.367 276.974 li
414.533 276.974 li
414.533 277.474 li
415.033 277.474 li
cp
410.699 277.141 mo
410.699 277.641 li
415.033 277.641 li
415.033 281.474 li
411.199 281.474 li
411.199 277.141 li
410.699 277.141 li
410.699 277.641 li
410.699 277.141 li
410.199 277.141 li
410.199 282.474 li
416.033 282.474 li
416.033 276.641 li
410.199 276.641 li
410.199 277.141 li
410.699 277.141 li
cp
415.033 276.724 mo
415.033 277.224 li
419.367 277.224 li
419.367 281.058 li
415.533 281.058 li
415.533 276.724 li
415.033 276.724 li
415.033 277.224 li
415.033 276.724 li
414.533 276.724 li
414.533 282.058 li
420.367 282.058 li
420.367 276.224 li
414.533 276.224 li
414.533 276.724 li
415.033 276.724 li
cp
414.199 270.391 mo
414.199 270.891 li
418.533 270.891 li
418.533 274.724 li
414.699 274.724 li
414.699 270.391 li
414.199 270.391 li
414.199 270.891 li
414.199 270.391 li
413.699 270.391 li
413.699 275.724 li
419.533 275.724 li
419.533 269.891 li
413.699 269.891 li
413.699 270.391 li
414.199 270.391 li
cp
409.617 264.641 mo
409.617 265.141 li
413.949 265.141 li
413.949 268.974 li
410.117 268.974 li
410.117 264.641 li
409.617 264.641 li
409.617 265.141 li
409.617 264.641 li
409.117 264.641 li
409.117 269.974 li
414.949 269.974 li
414.949 264.141 li
409.117 264.141 li
409.117 264.641 li
409.617 264.641 li
cp
399.032 277.058 mo
399.032 277.558 li
403.367 277.558 li
403.367 281.391 li
399.532 281.391 li
399.532 277.058 li
399.032 277.058 li
399.032 277.558 li
399.032 277.058 li
398.532 277.058 li
398.532 282.391 li
404.367 282.391 li
404.367 276.558 li
398.532 276.558 li
398.532 277.058 li
399.032 277.058 li
cp
398.032 277.391 mo
398.032 277.891 li
402.367 277.891 li
402.367 281.724 li
398.532 281.724 li
398.532 277.391 li
398.032 277.391 li
398.032 277.891 li
398.032 277.391 li
397.532 277.391 li
397.532 282.724 li
403.367 282.724 li
403.367 276.891 li
397.532 276.891 li
397.532 277.391 li
398.032 277.391 li
cp
395.282 276.808 mo
395.282 277.308 li
399.617 277.308 li
399.617 281.141 li
395.782 281.141 li
395.782 276.808 li
395.282 276.808 li
395.282 277.308 li
395.282 276.808 li
394.782 276.808 li
394.782 282.141 li
400.617 282.141 li
400.617 276.308 li
394.782 276.308 li
394.782 276.808 li
395.282 276.808 li
cp
398.449 277.891 mo
398.449 278.391 li
402.783 278.391 li
402.783 282.224 li
398.949 282.224 li
398.949 277.891 li
398.449 277.891 li
398.449 278.391 li
398.449 277.891 li
397.949 277.891 li
397.949 283.224 li
403.783 283.224 li
403.783 277.391 li
397.949 277.391 li
397.949 277.891 li
398.449 277.891 li
cp
408.367 278.224 mo
408.367 278.724 li
412.699 278.724 li
412.699 282.558 li
408.867 282.558 li
408.867 278.224 li
408.367 278.224 li
408.367 278.724 li
408.367 278.224 li
407.867 278.224 li
407.867 283.558 li
413.699 283.558 li
413.699 277.724 li
407.867 277.724 li
407.867 278.224 li
408.367 278.224 li
cp
405.783 278.224 mo
405.783 278.724 li
410.117 278.724 li
410.117 282.558 li
406.283 282.558 li
406.283 278.224 li
405.783 278.224 li
405.783 278.724 li
405.783 278.224 li
405.283 278.224 li
405.283 283.558 li
411.117 283.558 li
411.117 277.724 li
405.283 277.724 li
405.283 278.224 li
405.783 278.224 li
cp
414.617 278.224 mo
414.617 278.724 li
418.949 278.724 li
418.949 282.558 li
415.117 282.558 li
415.117 278.224 li
414.617 278.224 li
414.617 278.724 li
414.617 278.224 li
414.117 278.224 li
414.117 283.558 li
419.949 283.558 li
419.949 277.724 li
414.117 277.724 li
414.117 278.224 li
414.617 278.224 li
cp
273.032 278.224 mo
273.032 278.724 li
277.367 278.724 li
277.367 282.558 li
273.532 282.558 li
273.532 278.224 li
273.032 278.224 li
273.032 278.724 li
273.032 278.224 li
272.532 278.224 li
272.532 283.558 li
278.367 283.558 li
278.367 277.724 li
272.532 277.724 li
272.532 278.224 li
273.032 278.224 li
cp
408.783 277.974 mo
408.783 278.474 li
413.117 278.474 li
413.117 282.308 li
409.283 282.308 li
409.283 277.974 li
408.783 277.974 li
408.783 278.474 li
408.783 277.974 li
408.283 277.974 li
408.283 283.308 li
414.117 283.308 li
414.117 277.474 li
408.283 277.474 li
408.283 277.974 li
408.783 277.974 li
cp
414.533 277.808 mo
414.533 278.308 li
418.867 278.308 li
418.867 282.141 li
415.033 282.141 li
415.033 277.808 li
414.533 277.808 li
414.533 278.308 li
414.533 277.808 li
414.033 277.808 li
414.033 283.141 li
419.867 283.141 li
419.867 277.308 li
414.033 277.308 li
414.033 277.808 li
414.533 277.808 li
cp
392.617 273.391 mo
392.617 273.891 li
396.949 273.891 li
396.949 277.724 li
393.117 277.724 li
393.117 273.391 li
392.617 273.391 li
392.617 273.891 li
392.617 273.391 li
392.117 273.391 li
392.117 278.724 li
397.949 278.724 li
397.949 272.891 li
392.117 272.891 li
392.117 273.391 li
392.617 273.391 li
cp
409.033 277.974 mo
409.033 278.474 li
413.367 278.474 li
413.367 282.308 li
409.533 282.308 li
409.533 277.974 li
409.033 277.974 li
409.033 278.474 li
409.033 277.974 li
408.533 277.974 li
408.533 283.308 li
414.367 283.308 li
414.367 277.474 li
408.533 277.474 li
408.533 277.974 li
409.033 277.974 li
cp
411.033 278.141 mo
411.033 278.641 li
415.367 278.641 li
415.367 282.474 li
411.533 282.474 li
411.533 278.141 li
411.033 278.141 li
411.033 278.641 li
411.033 278.141 li
410.533 278.141 li
410.533 283.474 li
416.367 283.474 li
416.367 277.641 li
410.533 277.641 li
410.533 278.141 li
411.033 278.141 li
cp
408.199 278.141 mo
408.199 278.641 li
412.533 278.641 li
412.533 282.474 li
408.699 282.474 li
408.699 278.141 li
408.199 278.141 li
408.199 278.641 li
408.199 278.141 li
407.699 278.141 li
407.699 283.474 li
413.533 283.474 li
413.533 277.641 li
407.699 277.641 li
407.699 278.141 li
408.199 278.141 li
cp
412.949 277.808 mo
412.949 278.308 li
417.283 278.308 li
417.283 282.141 li
413.449 282.141 li
413.449 277.808 li
412.949 277.808 li
412.949 278.308 li
412.949 277.808 li
412.449 277.808 li
412.449 283.141 li
418.283 283.141 li
418.283 277.308 li
412.449 277.308 li
412.449 277.808 li
412.949 277.808 li
cp
408.283 277.891 mo
408.283 278.391 li
412.617 278.391 li
412.617 282.224 li
408.783 282.224 li
408.783 277.891 li
408.283 277.891 li
408.283 278.391 li
408.283 277.891 li
407.783 277.891 li
407.783 283.224 li
413.617 283.224 li
413.617 277.391 li
407.783 277.391 li
407.783 277.891 li
408.283 277.891 li
cp
409.867 277.808 mo
409.867 278.308 li
414.199 278.308 li
414.199 282.141 li
410.367 282.141 li
410.367 277.808 li
409.867 277.808 li
409.867 278.308 li
409.867 277.808 li
409.367 277.808 li
409.367 283.141 li
415.199 283.141 li
415.199 277.308 li
409.367 277.308 li
409.367 277.808 li
409.867 277.808 li
cp
412.117 277.974 mo
412.117 278.474 li
416.449 278.474 li
416.449 282.308 li
412.617 282.308 li
412.617 277.974 li
412.117 277.974 li
412.117 278.474 li
412.117 277.974 li
411.617 277.974 li
411.617 283.308 li
417.449 283.308 li
417.449 277.474 li
411.617 277.474 li
411.617 277.974 li
412.117 277.974 li
cp
414.199 277.891 mo
414.199 278.391 li
418.533 278.391 li
418.533 282.224 li
414.699 282.224 li
414.699 277.891 li
414.199 277.891 li
414.199 278.391 li
414.199 277.891 li
413.699 277.891 li
413.699 283.224 li
419.533 283.224 li
419.533 277.391 li
413.699 277.391 li
413.699 277.891 li
414.199 277.891 li
cp
413.033 275.308 mo
413.033 275.808 li
417.367 275.808 li
417.367 279.641 li
413.533 279.641 li
413.533 275.308 li
413.033 275.308 li
413.033 275.808 li
413.033 275.308 li
412.533 275.308 li
412.533 280.641 li
418.367 280.641 li
418.367 274.808 li
412.533 274.808 li
412.533 275.308 li
413.033 275.308 li
cp
413.949 278.058 mo
413.949 278.558 li
418.283 278.558 li
418.283 282.391 li
414.449 282.391 li
414.449 278.058 li
413.949 278.058 li
413.949 278.558 li
413.949 278.058 li
413.449 278.058 li
413.449 283.391 li
419.283 283.391 li
419.283 277.558 li
413.449 277.558 li
413.449 278.058 li
413.949 278.058 li
cp
412.367 277.974 mo
412.367 278.474 li
416.699 278.474 li
416.699 282.308 li
412.867 282.308 li
412.867 277.974 li
412.367 277.974 li
412.367 278.474 li
412.367 277.974 li
411.867 277.974 li
411.867 283.308 li
417.699 283.308 li
417.699 277.474 li
411.867 277.474 li
411.867 277.974 li
412.367 277.974 li
cp
410.199 277.974 mo
410.199 278.474 li
414.533 278.474 li
414.533 282.308 li
410.699 282.308 li
410.699 277.974 li
410.199 277.974 li
410.199 278.474 li
410.199 277.974 li
409.699 277.974 li
409.699 283.308 li
415.533 283.308 li
415.533 277.474 li
409.699 277.474 li
409.699 277.974 li
410.199 277.974 li
cp
413.533 277.808 mo
413.533 278.308 li
417.867 278.308 li
417.867 282.141 li
414.033 282.141 li
414.033 277.808 li
413.533 277.808 li
413.533 278.308 li
413.533 277.808 li
413.033 277.808 li
413.033 283.141 li
418.867 283.141 li
418.867 277.308 li
413.033 277.308 li
413.033 277.808 li
413.533 277.808 li
cp
414.617 277.808 mo
414.617 278.308 li
418.949 278.308 li
418.949 282.141 li
415.117 282.141 li
415.117 277.808 li
414.617 277.808 li
414.617 278.308 li
414.617 277.808 li
414.117 277.808 li
414.117 283.141 li
419.949 283.141 li
419.949 277.308 li
414.117 277.308 li
414.117 277.808 li
414.617 277.808 li
cp
414.533 277.558 mo
414.533 278.058 li
418.867 278.058 li
418.867 281.891 li
415.033 281.891 li
415.033 277.558 li
414.533 277.558 li
414.533 278.058 li
414.533 277.558 li
414.033 277.558 li
414.033 282.891 li
419.867 282.891 li
419.867 277.058 li
414.033 277.058 li
414.033 277.558 li
414.533 277.558 li
cp
410.199 277.808 mo
410.199 278.308 li
414.533 278.308 li
414.533 282.141 li
410.699 282.141 li
410.699 277.808 li
410.199 277.808 li
410.199 278.308 li
410.199 277.808 li
409.699 277.808 li
409.699 283.141 li
415.533 283.141 li
415.533 277.308 li
409.699 277.308 li
409.699 277.808 li
410.199 277.808 li
cp
407.367 278.058 mo
407.367 278.558 li
411.699 278.558 li
411.699 282.391 li
407.867 282.391 li
407.867 278.058 li
407.367 278.058 li
407.367 278.558 li
407.367 278.058 li
406.867 278.058 li
406.867 283.391 li
412.699 283.391 li
412.699 277.558 li
406.867 277.558 li
406.867 278.058 li
407.367 278.058 li
cp
414.699 277.974 mo
414.699 278.474 li
419.033 278.474 li
419.033 282.308 li
415.199 282.308 li
415.199 277.974 li
414.699 277.974 li
414.699 278.474 li
414.699 277.974 li
414.199 277.974 li
414.199 283.308 li
420.033 283.308 li
420.033 277.474 li
414.199 277.474 li
414.199 277.974 li
414.699 277.974 li
cp
407.533 278.391 mo
407.533 278.891 li
411.867 278.891 li
411.867 282.724 li
408.033 282.724 li
408.033 278.391 li
407.533 278.391 li
407.533 278.891 li
407.533 278.391 li
407.033 278.391 li
407.033 283.724 li
412.867 283.724 li
412.867 277.891 li
407.033 277.891 li
407.033 278.391 li
407.533 278.391 li
cp
409.283 277.974 mo
409.283 278.474 li
413.617 278.474 li
413.617 282.308 li
409.783 282.308 li
409.783 277.974 li
409.283 277.974 li
409.283 278.474 li
409.283 277.974 li
408.783 277.974 li
408.783 283.308 li
414.617 283.308 li
414.617 277.474 li
408.783 277.474 li
408.783 277.974 li
409.283 277.974 li
cp
409.867 277.974 mo
409.867 278.474 li
414.199 278.474 li
414.199 282.308 li
410.367 282.308 li
410.367 277.974 li
409.867 277.974 li
409.867 278.474 li
409.867 277.974 li
409.367 277.974 li
409.367 283.308 li
415.199 283.308 li
415.199 277.474 li
409.367 277.474 li
409.367 277.974 li
409.867 277.974 li
cp
414.699 277.974 mo
414.699 278.474 li
419.033 278.474 li
419.033 282.308 li
415.199 282.308 li
415.199 277.974 li
414.699 277.974 li
414.699 278.474 li
414.699 277.974 li
414.199 277.974 li
414.199 283.308 li
420.033 283.308 li
420.033 277.474 li
414.199 277.474 li
414.199 277.974 li
414.699 277.974 li
cp
414.533 277.891 mo
414.533 278.391 li
418.867 278.391 li
418.867 282.224 li
415.033 282.224 li
415.033 277.891 li
414.533 277.891 li
414.533 278.391 li
414.533 277.891 li
414.033 277.891 li
414.033 283.224 li
419.867 283.224 li
419.867 277.391 li
414.033 277.391 li
414.033 277.891 li
414.533 277.891 li
cp
411.867 277.974 mo
411.867 278.474 li
416.199 278.474 li
416.199 282.308 li
412.367 282.308 li
412.367 277.974 li
411.867 277.974 li
411.867 278.474 li
411.867 277.974 li
411.367 277.974 li
411.367 283.308 li
417.199 283.308 li
417.199 277.474 li
411.367 277.474 li
411.367 277.974 li
411.867 277.974 li
cp
412.867 277.974 mo
412.867 278.474 li
417.199 278.474 li
417.199 282.308 li
413.367 282.308 li
413.367 277.974 li
412.867 277.974 li
412.867 278.474 li
412.867 277.974 li
412.367 277.974 li
412.367 283.308 li
418.199 283.308 li
418.199 277.474 li
412.367 277.474 li
412.367 277.974 li
412.867 277.974 li
cp
410.033 277.891 mo
410.033 278.391 li
414.367 278.391 li
414.367 282.224 li
410.533 282.224 li
410.533 277.891 li
410.033 277.891 li
410.033 278.391 li
410.033 277.891 li
409.533 277.891 li
409.533 283.224 li
415.367 283.224 li
415.367 277.391 li
409.533 277.391 li
409.533 277.891 li
410.033 277.891 li
cp
408.117 277.391 mo
408.117 277.891 li
412.449 277.891 li
412.449 281.724 li
408.617 281.724 li
408.617 277.391 li
408.117 277.391 li
408.117 277.891 li
408.117 277.391 li
407.617 277.391 li
407.617 282.724 li
413.449 282.724 li
413.449 276.891 li
407.617 276.891 li
407.617 277.391 li
408.117 277.391 li
cp
404.117 278.058 mo
404.117 278.558 li
408.449 278.558 li
408.449 282.391 li
404.617 282.391 li
404.617 278.058 li
404.117 278.058 li
404.117 278.558 li
404.117 278.058 li
403.617 278.058 li
403.617 283.391 li
409.449 283.391 li
409.449 277.558 li
403.617 277.558 li
403.617 278.058 li
404.117 278.058 li
cp
411.033 278.058 mo
411.033 278.558 li
415.367 278.558 li
415.367 282.391 li
411.533 282.391 li
411.533 278.058 li
411.033 278.058 li
411.033 278.558 li
411.033 278.058 li
410.533 278.058 li
410.533 283.391 li
416.367 283.391 li
416.367 277.558 li
410.533 277.558 li
410.533 278.058 li
411.033 278.058 li
cp
413.783 277.974 mo
413.783 278.474 li
418.117 278.474 li
418.117 282.308 li
414.283 282.308 li
414.283 277.974 li
413.783 277.974 li
413.783 278.474 li
413.783 277.974 li
413.283 277.974 li
413.283 283.308 li
419.117 283.308 li
419.117 277.474 li
413.283 277.474 li
413.283 277.974 li
413.783 277.974 li
cp
413.949 278.058 mo
413.949 278.558 li
418.283 278.558 li
418.283 282.391 li
414.449 282.391 li
414.449 278.058 li
413.949 278.058 li
413.949 278.558 li
413.949 278.058 li
413.449 278.058 li
413.449 283.391 li
419.283 283.391 li
419.283 277.558 li
413.449 277.558 li
413.449 278.058 li
413.949 278.058 li
cp
412.199 277.808 mo
412.199 278.308 li
416.533 278.308 li
416.533 282.141 li
412.699 282.141 li
412.699 277.808 li
412.199 277.808 li
412.199 278.308 li
412.199 277.808 li
411.699 277.808 li
411.699 283.141 li
417.533 283.141 li
417.533 277.308 li
411.699 277.308 li
411.699 277.808 li
412.199 277.808 li
cp
414.617 277.974 mo
414.617 278.474 li
418.949 278.474 li
418.949 282.308 li
415.117 282.308 li
415.117 277.974 li
414.617 277.974 li
414.617 278.474 li
414.617 277.974 li
414.117 277.974 li
414.117 283.308 li
419.949 283.308 li
419.949 277.474 li
414.117 277.474 li
414.117 277.974 li
414.617 277.974 li
cp
412.117 277.891 mo
412.117 278.391 li
416.449 278.391 li
416.449 282.224 li
412.617 282.224 li
412.617 277.891 li
412.117 277.891 li
412.117 278.391 li
412.117 277.891 li
411.617 277.891 li
411.617 283.224 li
417.449 283.224 li
417.449 277.391 li
411.617 277.391 li
411.617 277.891 li
412.117 277.891 li
cp
412.699 278.224 mo
412.699 278.724 li
417.033 278.724 li
417.033 282.558 li
413.199 282.558 li
413.199 278.224 li
412.699 278.224 li
412.699 278.724 li
412.699 278.224 li
412.199 278.224 li
412.199 283.558 li
418.033 283.558 li
418.033 277.724 li
412.199 277.724 li
412.199 278.224 li
412.699 278.224 li
cp
411.699 277.891 mo
411.699 278.391 li
416.033 278.391 li
416.033 282.224 li
412.199 282.224 li
412.199 277.891 li
411.699 277.891 li
411.699 278.391 li
411.699 277.891 li
411.199 277.891 li
411.199 283.224 li
417.033 283.224 li
417.033 277.391 li
411.199 277.391 li
411.199 277.891 li
411.699 277.891 li
cp
414.533 277.974 mo
414.533 278.474 li
418.867 278.474 li
418.867 282.308 li
415.033 282.308 li
415.033 277.974 li
414.533 277.974 li
414.533 278.474 li
414.533 277.974 li
414.033 277.974 li
414.033 283.308 li
419.867 283.308 li
419.867 277.474 li
414.033 277.474 li
414.033 277.974 li
414.533 277.974 li
cp
404.617 277.974 mo
404.617 278.474 li
408.949 278.474 li
408.949 282.308 li
405.117 282.308 li
405.117 277.974 li
404.617 277.974 li
404.617 278.474 li
404.617 277.974 li
404.117 277.974 li
404.117 283.308 li
409.949 283.308 li
409.949 277.474 li
404.117 277.474 li
404.117 277.974 li
404.617 277.974 li
cp
389.032 277.891 mo
389.032 278.391 li
393.367 278.391 li
393.367 282.224 li
389.532 282.224 li
389.532 277.891 li
389.032 277.891 li
389.032 278.391 li
389.032 277.891 li
388.532 277.891 li
388.532 283.224 li
394.367 283.224 li
394.367 277.391 li
388.532 277.391 li
388.532 277.891 li
389.032 277.891 li
cp
373.282 262.808 mo
373.282 263.308 li
377.617 263.308 li
377.617 267.141 li
373.782 267.141 li
373.782 262.808 li
373.282 262.808 li
373.282 263.308 li
373.282 262.808 li
372.782 262.808 li
372.782 268.141 li
378.617 268.141 li
378.617 262.308 li
372.782 262.308 li
372.782 262.808 li
373.282 262.808 li
cp
414.617 277.808 mo
414.617 278.308 li
418.949 278.308 li
418.949 282.141 li
415.117 282.141 li
415.117 277.808 li
414.617 277.808 li
414.617 278.308 li
414.617 277.808 li
414.117 277.808 li
414.117 283.141 li
419.949 283.141 li
419.949 277.308 li
414.117 277.308 li
414.117 277.808 li
414.617 277.808 li
cp
414.033 278.474 mo
414.033 278.974 li
418.367 278.974 li
418.367 282.808 li
414.533 282.808 li
414.533 278.474 li
414.033 278.474 li
414.033 278.974 li
414.033 278.474 li
413.533 278.474 li
413.533 283.808 li
419.367 283.808 li
419.367 277.974 li
413.533 277.974 li
413.533 278.474 li
414.033 278.474 li
cp
414.283 277.891 mo
414.283 278.391 li
418.617 278.391 li
418.617 282.224 li
414.783 282.224 li
414.783 277.891 li
414.283 277.891 li
414.283 278.391 li
414.283 277.891 li
413.783 277.891 li
413.783 283.224 li
419.617 283.224 li
419.617 277.391 li
413.783 277.391 li
413.783 277.891 li
414.283 277.891 li
cp
0 0 0 1 cmyk
f
411.699 277.891 mo
416.533 277.891 li
416.533 282.724 li
411.699 282.724 li
411.699 277.891 li
cp
407.867 277.474 mo
412.699 277.474 li
412.699 282.308 li
407.867 282.308 li
407.867 277.474 li
cp
410.949 277.891 mo
415.783 277.891 li
415.783 282.724 li
410.949 282.724 li
410.949 277.891 li
cp
412.617 277.974 mo
417.449 277.974 li
417.449 282.808 li
412.617 282.808 li
412.617 277.974 li
cp
412.949 277.891 mo
417.783 277.891 li
417.783 282.724 li
412.949 282.724 li
412.949 277.891 li
cp
409.867 277.474 mo
414.699 277.474 li
414.699 282.308 li
409.867 282.308 li
409.867 277.474 li
cp
409.533 277.808 mo
414.367 277.808 li
414.367 282.641 li
409.533 282.641 li
409.533 277.808 li
cp
414.117 277.974 mo
418.949 277.974 li
418.949 282.808 li
414.117 282.808 li
414.117 277.974 li
cp
414.033 278.058 mo
418.867 278.058 li
418.867 282.891 li
414.033 282.891 li
414.033 278.058 li
cp
412.867 277.891 mo
417.699 277.891 li
417.699 282.724 li
412.867 282.724 li
412.867 277.891 li
cp
405.283 277.974 mo
410.117 277.974 li
410.117 282.808 li
405.283 282.808 li
405.283 277.974 li
cp
414.117 277.891 mo
418.949 277.891 li
418.949 282.724 li
414.117 282.724 li
414.117 277.891 li
cp
408.449 276.308 mo
413.283 276.308 li
413.283 281.141 li
408.449 281.141 li
408.449 276.308 li
cp
411.367 277.974 mo
416.199 277.974 li
416.199 282.808 li
411.367 282.808 li
411.367 277.974 li
cp
412.699 277.974 mo
417.533 277.974 li
417.533 282.808 li
412.699 282.808 li
412.699 277.974 li
cp
410.867 277.974 mo
415.699 277.974 li
415.699 282.808 li
410.867 282.808 li
410.867 277.974 li
cp
410.699 278.058 mo
415.533 278.058 li
415.533 282.891 li
410.699 282.891 li
410.699 278.058 li
cp
413.283 277.891 mo
418.117 277.891 li
418.117 282.724 li
413.283 282.724 li
413.283 277.891 li
cp
414.367 277.974 mo
419.199 277.974 li
419.199 282.808 li
414.367 282.808 li
414.367 277.974 li
cp
408.117 277.974 mo
412.949 277.974 li
412.949 282.808 li
408.117 282.808 li
408.117 277.974 li
cp
410.283 277.974 mo
415.117 277.974 li
415.117 282.808 li
410.283 282.808 li
410.283 277.974 li
cp
412.117 277.974 mo
416.949 277.974 li
416.949 282.808 li
412.117 282.808 li
412.117 277.974 li
cp
414.117 277.974 mo
418.949 277.974 li
418.949 282.808 li
414.117 282.808 li
414.117 277.974 li
cp
404.867 277.974 mo
409.699 277.974 li
409.699 282.808 li
404.867 282.808 li
404.867 277.974 li
cp
411.283 277.808 mo
416.117 277.808 li
416.117 282.641 li
411.283 282.641 li
411.283 277.808 li
cp
408.783 277.891 mo
413.617 277.891 li
413.617 282.724 li
408.783 282.724 li
408.783 277.891 li
cp
412.033 277.891 mo
416.867 277.891 li
416.867 282.724 li
412.033 282.724 li
412.033 277.891 li
cp
411.867 277.974 mo
416.699 277.974 li
416.699 282.808 li
411.867 282.808 li
411.867 277.974 li
cp
410.867 277.974 mo
415.699 277.974 li
415.699 282.808 li
410.867 282.808 li
410.867 277.974 li
cp
410.367 277.974 mo
415.199 277.974 li
415.199 282.808 li
410.367 282.808 li
410.367 277.974 li
cp
410.199 277.808 mo
415.033 277.808 li
415.033 282.641 li
410.199 282.641 li
410.199 277.808 li
cp
409.699 277.974 mo
414.533 277.974 li
414.533 282.808 li
409.699 282.808 li
409.699 277.974 li
cp
411.283 277.891 mo
416.117 277.891 li
416.117 282.724 li
411.283 282.724 li
411.283 277.891 li
cp
414.199 277.891 mo
419.033 277.891 li
419.033 282.724 li
414.199 282.724 li
414.199 277.891 li
cp
409.949 277.974 mo
414.783 277.974 li
414.783 282.808 li
409.949 282.808 li
409.949 277.974 li
cp
408.699 277.974 mo
413.533 277.974 li
413.533 282.808 li
408.699 282.808 li
408.699 277.974 li
cp
409.783 277.891 mo
414.617 277.891 li
414.617 282.724 li
409.783 282.724 li
409.783 277.891 li
cp
411.033 277.974 mo
415.867 277.974 li
415.867 282.808 li
411.033 282.808 li
411.033 277.974 li
cp
409.867 277.808 mo
414.699 277.808 li
414.699 282.641 li
409.867 282.641 li
409.867 277.808 li
cp
411.617 278.058 mo
416.449 278.058 li
416.449 282.891 li
411.617 282.891 li
411.617 278.058 li
cp
410.199 277.974 mo
415.033 277.974 li
415.033 282.808 li
410.199 282.808 li
410.199 277.974 li
cp
414.117 277.891 mo
418.949 277.891 li
418.949 282.724 li
414.117 282.724 li
414.117 277.891 li
cp
410.033 277.974 mo
414.867 277.974 li
414.867 282.808 li
410.033 282.808 li
410.033 277.974 li
cp
410.867 277.058 mo
415.699 277.058 li
415.699 281.891 li
410.867 281.891 li
410.867 277.058 li
cp
412.199 278.058 mo
417.033 278.058 li
417.033 282.891 li
412.199 282.891 li
412.199 278.058 li
cp
411.783 277.974 mo
416.617 277.974 li
416.617 282.808 li
411.783 282.808 li
411.783 277.974 li
cp
414.283 277.974 mo
419.117 277.974 li
419.117 282.808 li
414.283 282.808 li
414.283 277.974 li
cp
409.449 278.058 mo
414.283 278.058 li
414.283 282.891 li
409.449 282.891 li
409.449 278.058 li
cp
404.533 277.891 mo
409.367 277.891 li
409.367 282.724 li
404.533 282.724 li
404.533 277.891 li
cp
413.533 277.974 mo
418.367 277.974 li
418.367 282.808 li
413.533 282.808 li
413.533 277.974 li
cp
414.283 277.974 mo
419.117 277.974 li
419.117 282.808 li
414.283 282.808 li
414.283 277.974 li
cp
410.867 277.641 mo
415.699 277.641 li
415.699 282.474 li
410.867 282.474 li
410.867 277.641 li
cp
414.117 278.058 mo
418.949 278.058 li
418.949 282.891 li
414.117 282.891 li
414.117 278.058 li
cp
411.449 277.808 mo
416.283 277.808 li
416.283 282.641 li
411.449 282.641 li
411.449 277.808 li
cp
413.033 277.891 mo
417.867 277.891 li
417.867 282.724 li
413.033 282.724 li
413.033 277.891 li
cp
407.617 277.808 mo
412.449 277.808 li
412.449 282.641 li
407.617 282.641 li
407.617 277.808 li
cp
414.367 277.891 mo
419.199 277.891 li
419.199 282.724 li
414.367 282.724 li
414.367 277.891 li
cp
413.283 278.224 mo
418.117 278.224 li
418.117 283.058 li
413.283 283.058 li
413.283 278.224 li
cp
413.033 277.974 mo
417.867 277.974 li
417.867 282.808 li
413.033 282.808 li
413.033 277.974 li
cp
412.033 277.891 mo
416.867 277.891 li
416.867 282.724 li
412.033 282.724 li
412.033 277.891 li
cp
409.283 277.974 mo
414.117 277.974 li
414.117 282.808 li
409.283 282.808 li
409.283 277.974 li
cp
405.783 278.058 mo
410.617 278.058 li
410.617 282.891 li
405.783 282.891 li
405.783 278.058 li
cp
414.367 277.808 mo
419.199 277.808 li
419.199 282.641 li
414.367 282.641 li
414.367 277.808 li
cp
413.117 277.974 mo
417.949 277.974 li
417.949 282.808 li
413.117 282.808 li
413.117 277.974 li
cp
396.032 277.141 mo
400.867 277.141 li
400.867 281.974 li
396.032 281.974 li
396.032 277.141 li
cp
413.199 277.974 mo
418.033 277.974 li
418.033 282.808 li
413.199 282.808 li
413.199 277.974 li
cp
409.949 277.891 mo
414.783 277.891 li
414.783 282.724 li
409.949 282.724 li
409.949 277.891 li
cp
412.283 277.974 mo
417.117 277.974 li
417.117 282.808 li
412.283 282.808 li
412.283 277.974 li
cp
405.117 277.974 mo
409.949 277.974 li
409.949 282.808 li
405.117 282.808 li
405.117 277.974 li
cp
412.617 277.891 mo
417.449 277.891 li
417.449 282.724 li
412.617 282.724 li
412.617 277.891 li
cp
409.033 277.974 mo
413.867 277.974 li
413.867 282.808 li
409.033 282.808 li
409.033 277.974 li
cp
412.533 265.058 mo
417.367 265.058 li
417.367 269.891 li
412.533 269.891 li
412.533 265.058 li
cp
410.117 277.974 mo
414.949 277.974 li
414.949 282.808 li
410.117 282.808 li
410.117 277.974 li
cp
408.783 277.974 mo
413.617 277.974 li
413.617 282.808 li
408.783 282.808 li
408.783 277.974 li
cp
406.699 277.974 mo
411.533 277.974 li
411.533 282.808 li
406.699 282.808 li
406.699 277.974 li
cp
414.949 277.974 mo
419.783 277.974 li
419.783 282.808 li
414.949 282.808 li
414.949 277.974 li
cp
413.033 277.974 mo
417.867 277.974 li
417.867 282.808 li
413.033 282.808 li
413.033 277.974 li
cp
414.533 277.974 mo
419.367 277.974 li
419.367 282.808 li
414.533 282.808 li
414.533 277.974 li
cp
410.867 277.974 mo
415.699 277.974 li
415.699 282.808 li
410.867 282.808 li
410.867 277.974 li
cp
413.117 277.974 mo
417.949 277.974 li
417.949 282.808 li
413.117 282.808 li
413.117 277.974 li
cp
412.367 277.891 mo
417.199 277.891 li
417.199 282.724 li
412.367 282.724 li
412.367 277.891 li
cp
410.949 278.141 mo
415.783 278.141 li
415.783 282.974 li
410.949 282.974 li
410.949 278.141 li
cp
408.367 277.891 mo
413.199 277.891 li
413.199 282.724 li
408.367 282.724 li
408.367 277.891 li
cp
409.783 277.974 mo
414.617 277.974 li
414.617 282.808 li
409.783 282.808 li
409.783 277.974 li
cp
407.783 277.808 mo
412.617 277.808 li
412.617 282.641 li
407.783 282.641 li
407.783 277.808 li
cp
411.867 277.891 mo
416.699 277.891 li
416.699 282.724 li
411.867 282.724 li
411.867 277.891 li
cp
412.699 277.641 mo
417.533 277.641 li
417.533 282.474 li
412.699 282.474 li
412.699 277.641 li
cp
411.367 277.891 mo
416.199 277.891 li
416.199 282.724 li
411.367 282.724 li
411.367 277.891 li
cp
413.699 277.974 mo
418.533 277.974 li
418.533 282.808 li
413.699 282.808 li
413.699 277.974 li
cp
410.449 277.641 mo
415.283 277.641 li
415.283 282.474 li
410.449 282.474 li
410.449 277.641 li
cp
412.033 277.974 mo
416.867 277.974 li
416.867 282.808 li
412.033 282.808 li
412.033 277.974 li
cp
414.533 277.891 mo
419.367 277.891 li
419.367 282.724 li
414.533 282.724 li
414.533 277.891 li
cp
414.949 277.891 mo
419.783 277.891 li
419.783 282.724 li
414.949 282.724 li
414.949 277.891 li
cp
410.617 277.808 mo
415.449 277.808 li
415.449 282.641 li
410.617 282.641 li
410.617 277.808 li
cp
411.617 277.974 mo
416.449 277.974 li
416.449 282.808 li
411.617 282.808 li
411.617 277.974 li
cp
411.283 277.891 mo
416.117 277.891 li
416.117 282.724 li
411.283 282.724 li
411.283 277.891 li
cp
412.033 277.974 mo
416.867 277.974 li
416.867 282.808 li
412.033 282.808 li
412.033 277.974 li
cp
412.617 277.891 mo
417.449 277.891 li
417.449 282.724 li
412.617 282.724 li
412.617 277.891 li
cp
412.117 277.891 mo
416.949 277.891 li
416.949 282.724 li
412.117 282.724 li
412.117 277.891 li
cp
410.033 277.891 mo
414.867 277.891 li
414.867 282.724 li
410.033 282.724 li
410.033 277.891 li
cp
414.533 277.974 mo
419.367 277.974 li
419.367 282.808 li
414.533 282.808 li
414.533 277.974 li
cp
413.699 277.974 mo
418.533 277.974 li
418.533 282.808 li
413.699 282.808 li
413.699 277.974 li
cp
411.533 277.891 mo
416.367 277.891 li
416.367 282.724 li
411.533 282.724 li
411.533 277.891 li
cp
408.783 293.141 mo
413.617 293.141 li
413.617 297.974 li
408.783 297.974 li
408.783 293.141 li
cp
362.949 282.308 mo
367.782 282.308 li
367.782 287.141 li
362.949 287.141 li
362.949 282.308 li
cp
88.4492 275.058 mo
93.2827 275.058 li
93.2827 279.891 li
88.4492 279.891 li
88.4492 275.058 li
cp
97.6157 277.974 mo
102.449 277.974 li
102.449 282.808 li
97.6157 282.808 li
97.6157 277.974 li
cp
247.699 292.891 mo
252.532 292.891 li
252.532 297.724 li
247.699 297.724 li
247.699 292.891 li
cp
229.116 292.308 mo
233.949 292.308 li
233.949 297.141 li
229.116 297.141 li
229.116 292.308 li
cp
161.783 280.141 mo
166.616 280.141 li
166.616 284.974 li
161.783 284.974 li
161.783 280.141 li
cp
139.866 278.974 mo
144.699 278.974 li
144.699 283.808 li
139.866 283.808 li
139.866 278.974 li
cp
121.449 278.891 mo
126.283 278.891 li
126.283 283.724 li
121.449 283.724 li
121.449 278.891 li
cp
0 0 0 .5 cmyk
f
411.699 277.891 mo
411.699 278.391 li
416.033 278.391 li
416.033 282.224 li
412.199 282.224 li
412.199 277.891 li
411.699 277.891 li
411.699 278.391 li
411.699 277.891 li
411.199 277.891 li
411.199 283.224 li
417.033 283.224 li
417.033 277.391 li
411.199 277.391 li
411.199 277.891 li
411.699 277.891 li
cp
407.867 277.474 mo
407.867 277.974 li
412.199 277.974 li
412.199 281.808 li
408.367 281.808 li
408.367 277.474 li
407.867 277.474 li
407.867 277.974 li
407.867 277.474 li
407.367 277.474 li
407.367 282.808 li
413.199 282.808 li
413.199 276.974 li
407.367 276.974 li
407.367 277.474 li
407.867 277.474 li
cp
410.949 277.891 mo
410.949 278.391 li
415.283 278.391 li
415.283 282.224 li
411.449 282.224 li
411.449 277.891 li
410.949 277.891 li
410.949 278.391 li
410.949 277.891 li
410.449 277.891 li
410.449 283.224 li
416.283 283.224 li
416.283 277.391 li
410.449 277.391 li
410.449 277.891 li
410.949 277.891 li
cp
412.617 277.974 mo
412.617 278.474 li
416.949 278.474 li
416.949 282.308 li
413.117 282.308 li
413.117 277.974 li
412.617 277.974 li
412.617 278.474 li
412.617 277.974 li
412.117 277.974 li
412.117 283.308 li
417.949 283.308 li
417.949 277.474 li
412.117 277.474 li
412.117 277.974 li
412.617 277.974 li
cp
412.949 277.891 mo
412.949 278.391 li
417.283 278.391 li
417.283 282.224 li
413.449 282.224 li
413.449 277.891 li
412.949 277.891 li
412.949 278.391 li
412.949 277.891 li
412.449 277.891 li
412.449 283.224 li
418.283 283.224 li
418.283 277.391 li
412.449 277.391 li
412.449 277.891 li
412.949 277.891 li
cp
409.867 277.474 mo
409.867 277.974 li
414.199 277.974 li
414.199 281.808 li
410.367 281.808 li
410.367 277.474 li
409.867 277.474 li
409.867 277.974 li
409.867 277.474 li
409.367 277.474 li
409.367 282.808 li
415.199 282.808 li
415.199 276.974 li
409.367 276.974 li
409.367 277.474 li
409.867 277.474 li
cp
409.533 277.808 mo
409.533 278.308 li
413.867 278.308 li
413.867 282.141 li
410.033 282.141 li
410.033 277.808 li
409.533 277.808 li
409.533 278.308 li
409.533 277.808 li
409.033 277.808 li
409.033 283.141 li
414.867 283.141 li
414.867 277.308 li
409.033 277.308 li
409.033 277.808 li
409.533 277.808 li
cp
414.117 277.974 mo
414.117 278.474 li
418.449 278.474 li
418.449 282.308 li
414.617 282.308 li
414.617 277.974 li
414.117 277.974 li
414.117 278.474 li
414.117 277.974 li
413.617 277.974 li
413.617 283.308 li
419.449 283.308 li
419.449 277.474 li
413.617 277.474 li
413.617 277.974 li
414.117 277.974 li
cp
414.033 278.058 mo
414.033 278.558 li
418.367 278.558 li
418.367 282.391 li
414.533 282.391 li
414.533 278.058 li
414.033 278.058 li
414.033 278.558 li
414.033 278.058 li
413.533 278.058 li
413.533 283.391 li
419.367 283.391 li
419.367 277.558 li
413.533 277.558 li
413.533 278.058 li
414.033 278.058 li
cp
412.867 277.891 mo
412.867 278.391 li
417.199 278.391 li
417.199 282.224 li
413.367 282.224 li
413.367 277.891 li
412.867 277.891 li
412.867 278.391 li
412.867 277.891 li
412.367 277.891 li
412.367 283.224 li
418.199 283.224 li
418.199 277.391 li
412.367 277.391 li
412.367 277.891 li
412.867 277.891 li
cp
405.283 277.974 mo
405.283 278.474 li
409.617 278.474 li
409.617 282.308 li
405.783 282.308 li
405.783 277.974 li
405.283 277.974 li
405.283 278.474 li
405.283 277.974 li
404.783 277.974 li
404.783 283.308 li
410.617 283.308 li
410.617 277.474 li
404.783 277.474 li
404.783 277.974 li
405.283 277.974 li
cp
414.117 277.891 mo
414.117 278.391 li
418.449 278.391 li
418.449 282.224 li
414.617 282.224 li
414.617 277.891 li
414.117 277.891 li
414.117 278.391 li
414.117 277.891 li
413.617 277.891 li
413.617 283.224 li
419.449 283.224 li
419.449 277.391 li
413.617 277.391 li
413.617 277.891 li
414.117 277.891 li
cp
408.449 276.308 mo
408.449 276.808 li
412.783 276.808 li
412.783 280.641 li
408.949 280.641 li
408.949 276.308 li
408.449 276.308 li
408.449 276.808 li
408.449 276.308 li
407.949 276.308 li
407.949 281.641 li
413.783 281.641 li
413.783 275.808 li
407.949 275.808 li
407.949 276.308 li
408.449 276.308 li
cp
411.367 277.974 mo
411.367 278.474 li
415.699 278.474 li
415.699 282.308 li
411.867 282.308 li
411.867 277.974 li
411.367 277.974 li
411.367 278.474 li
411.367 277.974 li
410.867 277.974 li
410.867 283.308 li
416.699 283.308 li
416.699 277.474 li
410.867 277.474 li
410.867 277.974 li
411.367 277.974 li
cp
412.699 277.974 mo
412.699 278.474 li
417.033 278.474 li
417.033 282.308 li
413.199 282.308 li
413.199 277.974 li
412.699 277.974 li
412.699 278.474 li
412.699 277.974 li
412.199 277.974 li
412.199 283.308 li
418.033 283.308 li
418.033 277.474 li
412.199 277.474 li
412.199 277.974 li
412.699 277.974 li
cp
410.867 277.974 mo
410.867 278.474 li
415.199 278.474 li
415.199 282.308 li
411.367 282.308 li
411.367 277.974 li
410.867 277.974 li
410.867 278.474 li
410.867 277.974 li
410.367 277.974 li
410.367 283.308 li
416.199 283.308 li
416.199 277.474 li
410.367 277.474 li
410.367 277.974 li
410.867 277.974 li
cp
410.699 278.058 mo
410.699 278.558 li
415.033 278.558 li
415.033 282.391 li
411.199 282.391 li
411.199 278.058 li
410.699 278.058 li
410.699 278.558 li
410.699 278.058 li
410.199 278.058 li
410.199 283.391 li
416.033 283.391 li
416.033 277.558 li
410.199 277.558 li
410.199 278.058 li
410.699 278.058 li
cp
413.283 277.891 mo
413.283 278.391 li
417.617 278.391 li
417.617 282.224 li
413.783 282.224 li
413.783 277.891 li
413.283 277.891 li
413.283 278.391 li
413.283 277.891 li
412.783 277.891 li
412.783 283.224 li
418.617 283.224 li
418.617 277.391 li
412.783 277.391 li
412.783 277.891 li
413.283 277.891 li
cp
414.367 277.974 mo
414.367 278.474 li
418.699 278.474 li
418.699 282.308 li
414.867 282.308 li
414.867 277.974 li
414.367 277.974 li
414.367 278.474 li
414.367 277.974 li
413.867 277.974 li
413.867 283.308 li
419.699 283.308 li
419.699 277.474 li
413.867 277.474 li
413.867 277.974 li
414.367 277.974 li
cp
408.117 277.974 mo
408.117 278.474 li
412.449 278.474 li
412.449 282.308 li
408.617 282.308 li
408.617 277.974 li
408.117 277.974 li
408.117 278.474 li
408.117 277.974 li
407.617 277.974 li
407.617 283.308 li
413.449 283.308 li
413.449 277.474 li
407.617 277.474 li
407.617 277.974 li
408.117 277.974 li
cp
410.283 277.974 mo
410.283 278.474 li
414.617 278.474 li
414.617 282.308 li
410.783 282.308 li
410.783 277.974 li
410.283 277.974 li
410.283 278.474 li
410.283 277.974 li
409.783 277.974 li
409.783 283.308 li
415.617 283.308 li
415.617 277.474 li
409.783 277.474 li
409.783 277.974 li
410.283 277.974 li
cp
412.117 277.974 mo
412.117 278.474 li
416.449 278.474 li
416.449 282.308 li
412.617 282.308 li
412.617 277.974 li
412.117 277.974 li
412.117 278.474 li
412.117 277.974 li
411.617 277.974 li
411.617 283.308 li
417.449 283.308 li
417.449 277.474 li
411.617 277.474 li
411.617 277.974 li
412.117 277.974 li
cp
414.117 277.974 mo
414.117 278.474 li
418.449 278.474 li
418.449 282.308 li
414.617 282.308 li
414.617 277.974 li
414.117 277.974 li
414.117 278.474 li
414.117 277.974 li
413.617 277.974 li
413.617 283.308 li
419.449 283.308 li
419.449 277.474 li
413.617 277.474 li
413.617 277.974 li
414.117 277.974 li
cp
404.867 277.974 mo
404.867 278.474 li
409.199 278.474 li
409.199 282.308 li
405.367 282.308 li
405.367 277.974 li
404.867 277.974 li
404.867 278.474 li
404.867 277.974 li
404.367 277.974 li
404.367 283.308 li
410.199 283.308 li
410.199 277.474 li
404.367 277.474 li
404.367 277.974 li
404.867 277.974 li
cp
411.283 277.808 mo
411.283 278.308 li
415.617 278.308 li
415.617 282.141 li
411.783 282.141 li
411.783 277.808 li
411.283 277.808 li
411.283 278.308 li
411.283 277.808 li
410.783 277.808 li
410.783 283.141 li
416.617 283.141 li
416.617 277.308 li
410.783 277.308 li
410.783 277.808 li
411.283 277.808 li
cp
408.783 277.891 mo
408.783 278.391 li
413.117 278.391 li
413.117 282.224 li
409.283 282.224 li
409.283 277.891 li
408.783 277.891 li
408.783 278.391 li
408.783 277.891 li
408.283 277.891 li
408.283 283.224 li
414.117 283.224 li
414.117 277.391 li
408.283 277.391 li
408.283 277.891 li
408.783 277.891 li
cp
412.033 277.891 mo
412.033 278.391 li
416.367 278.391 li
416.367 282.224 li
412.533 282.224 li
412.533 277.891 li
412.033 277.891 li
412.033 278.391 li
412.033 277.891 li
411.533 277.891 li
411.533 283.224 li
417.367 283.224 li
417.367 277.391 li
411.533 277.391 li
411.533 277.891 li
412.033 277.891 li
cp
411.867 277.974 mo
411.867 278.474 li
416.199 278.474 li
416.199 282.308 li
412.367 282.308 li
412.367 277.974 li
411.867 277.974 li
411.867 278.474 li
411.867 277.974 li
411.367 277.974 li
411.367 283.308 li
417.199 283.308 li
417.199 277.474 li
411.367 277.474 li
411.367 277.974 li
411.867 277.974 li
cp
410.867 277.974 mo
410.867 278.474 li
415.199 278.474 li
415.199 282.308 li
411.367 282.308 li
411.367 277.974 li
410.867 277.974 li
410.867 278.474 li
410.867 277.974 li
410.367 277.974 li
410.367 283.308 li
416.199 283.308 li
416.199 277.474 li
410.367 277.474 li
410.367 277.974 li
410.867 277.974 li
cp
410.367 277.974 mo
410.367 278.474 li
414.699 278.474 li
414.699 282.308 li
410.867 282.308 li
410.867 277.974 li
410.367 277.974 li
410.367 278.474 li
410.367 277.974 li
409.867 277.974 li
409.867 283.308 li
415.699 283.308 li
415.699 277.474 li
409.867 277.474 li
409.867 277.974 li
410.367 277.974 li
cp
410.199 277.808 mo
410.199 278.308 li
414.533 278.308 li
414.533 282.141 li
410.699 282.141 li
410.699 277.808 li
410.199 277.808 li
410.199 278.308 li
410.199 277.808 li
409.699 277.808 li
409.699 283.141 li
415.533 283.141 li
415.533 277.308 li
409.699 277.308 li
409.699 277.808 li
410.199 277.808 li
cp
409.699 277.974 mo
409.699 278.474 li
414.033 278.474 li
414.033 282.308 li
410.199 282.308 li
410.199 277.974 li
409.699 277.974 li
409.699 278.474 li
409.699 277.974 li
409.199 277.974 li
409.199 283.308 li
415.033 283.308 li
415.033 277.474 li
409.199 277.474 li
409.199 277.974 li
409.699 277.974 li
cp
411.283 277.891 mo
411.283 278.391 li
415.617 278.391 li
415.617 282.224 li
411.783 282.224 li
411.783 277.891 li
411.283 277.891 li
411.283 278.391 li
411.283 277.891 li
410.783 277.891 li
410.783 283.224 li
416.617 283.224 li
416.617 277.391 li
410.783 277.391 li
410.783 277.891 li
411.283 277.891 li
cp
414.199 277.891 mo
414.199 278.391 li
418.533 278.391 li
418.533 282.224 li
414.699 282.224 li
414.699 277.891 li
414.199 277.891 li
414.199 278.391 li
414.199 277.891 li
413.699 277.891 li
413.699 283.224 li
419.533 283.224 li
419.533 277.391 li
413.699 277.391 li
413.699 277.891 li
414.199 277.891 li
cp
409.949 277.974 mo
409.949 278.474 li
414.283 278.474 li
414.283 282.308 li
410.449 282.308 li
410.449 277.974 li
409.949 277.974 li
409.949 278.474 li
409.949 277.974 li
409.449 277.974 li
409.449 283.308 li
415.283 283.308 li
415.283 277.474 li
409.449 277.474 li
409.449 277.974 li
409.949 277.974 li
cp
408.699 277.974 mo
408.699 278.474 li
413.033 278.474 li
413.033 282.308 li
409.199 282.308 li
409.199 277.974 li
408.699 277.974 li
408.699 278.474 li
408.699 277.974 li
408.199 277.974 li
408.199 283.308 li
414.033 283.308 li
414.033 277.474 li
408.199 277.474 li
408.199 277.974 li
408.699 277.974 li
cp
409.783 277.891 mo
409.783 278.391 li
414.117 278.391 li
414.117 282.224 li
410.283 282.224 li
410.283 277.891 li
409.783 277.891 li
409.783 278.391 li
409.783 277.891 li
409.283 277.891 li
409.283 283.224 li
415.117 283.224 li
415.117 277.391 li
409.283 277.391 li
409.283 277.891 li
409.783 277.891 li
cp
411.033 277.974 mo
411.033 278.474 li
415.367 278.474 li
415.367 282.308 li
411.533 282.308 li
411.533 277.974 li
411.033 277.974 li
411.033 278.474 li
411.033 277.974 li
410.533 277.974 li
410.533 283.308 li
416.367 283.308 li
416.367 277.474 li
410.533 277.474 li
410.533 277.974 li
411.033 277.974 li
cp
409.867 277.808 mo
409.867 278.308 li
414.199 278.308 li
414.199 282.141 li
410.367 282.141 li
410.367 277.808 li
409.867 277.808 li
409.867 278.308 li
409.867 277.808 li
409.367 277.808 li
409.367 283.141 li
415.199 283.141 li
415.199 277.308 li
409.367 277.308 li
409.367 277.808 li
409.867 277.808 li
cp
411.617 278.058 mo
411.617 278.558 li
415.949 278.558 li
415.949 282.391 li
412.117 282.391 li
412.117 278.058 li
411.617 278.058 li
411.617 278.558 li
411.617 278.058 li
411.117 278.058 li
411.117 283.391 li
416.949 283.391 li
416.949 277.558 li
411.117 277.558 li
411.117 278.058 li
411.617 278.058 li
cp
410.199 277.974 mo
410.199 278.474 li
414.533 278.474 li
414.533 282.308 li
410.699 282.308 li
410.699 277.974 li
410.199 277.974 li
410.199 278.474 li
410.199 277.974 li
409.699 277.974 li
409.699 283.308 li
415.533 283.308 li
415.533 277.474 li
409.699 277.474 li
409.699 277.974 li
410.199 277.974 li
cp
414.117 277.891 mo
414.117 278.391 li
418.449 278.391 li
418.449 282.224 li
414.617 282.224 li
414.617 277.891 li
414.117 277.891 li
414.117 278.391 li
414.117 277.891 li
413.617 277.891 li
413.617 283.224 li
419.449 283.224 li
419.449 277.391 li
413.617 277.391 li
413.617 277.891 li
414.117 277.891 li
cp
410.033 277.974 mo
410.033 278.474 li
414.367 278.474 li
414.367 282.308 li
410.533 282.308 li
410.533 277.974 li
410.033 277.974 li
410.033 278.474 li
410.033 277.974 li
409.533 277.974 li
409.533 283.308 li
415.367 283.308 li
415.367 277.474 li
409.533 277.474 li
409.533 277.974 li
410.033 277.974 li
cp
410.867 277.058 mo
410.867 277.558 li
415.199 277.558 li
415.199 281.391 li
411.367 281.391 li
411.367 277.058 li
410.867 277.058 li
410.867 277.558 li
410.867 277.058 li
410.367 277.058 li
410.367 282.391 li
416.199 282.391 li
416.199 276.558 li
410.367 276.558 li
410.367 277.058 li
410.867 277.058 li
cp
412.199 278.058 mo
412.199 278.558 li
416.533 278.558 li
416.533 282.391 li
412.699 282.391 li
412.699 278.058 li
412.199 278.058 li
412.199 278.558 li
412.199 278.058 li
411.699 278.058 li
411.699 283.391 li
417.533 283.391 li
417.533 277.558 li
411.699 277.558 li
411.699 278.058 li
412.199 278.058 li
cp
411.783 277.974 mo
411.783 278.474 li
416.117 278.474 li
416.117 282.308 li
412.283 282.308 li
412.283 277.974 li
411.783 277.974 li
411.783 278.474 li
411.783 277.974 li
411.283 277.974 li
411.283 283.308 li
417.117 283.308 li
417.117 277.474 li
411.283 277.474 li
411.283 277.974 li
411.783 277.974 li
cp
414.283 277.974 mo
414.283 278.474 li
418.617 278.474 li
418.617 282.308 li
414.783 282.308 li
414.783 277.974 li
414.283 277.974 li
414.283 278.474 li
414.283 277.974 li
413.783 277.974 li
413.783 283.308 li
419.617 283.308 li
419.617 277.474 li
413.783 277.474 li
413.783 277.974 li
414.283 277.974 li
cp
409.449 278.058 mo
409.449 278.558 li
413.783 278.558 li
413.783 282.391 li
409.949 282.391 li
409.949 278.058 li
409.449 278.058 li
409.449 278.558 li
409.449 278.058 li
408.949 278.058 li
408.949 283.391 li
414.783 283.391 li
414.783 277.558 li
408.949 277.558 li
408.949 278.058 li
409.449 278.058 li
cp
404.533 277.891 mo
404.533 278.391 li
408.867 278.391 li
408.867 282.224 li
405.033 282.224 li
405.033 277.891 li
404.533 277.891 li
404.533 278.391 li
404.533 277.891 li
404.033 277.891 li
404.033 283.224 li
409.867 283.224 li
409.867 277.391 li
404.033 277.391 li
404.033 277.891 li
404.533 277.891 li
cp
413.533 277.974 mo
413.533 278.474 li
417.867 278.474 li
417.867 282.308 li
414.033 282.308 li
414.033 277.974 li
413.533 277.974 li
413.533 278.474 li
413.533 277.974 li
413.033 277.974 li
413.033 283.308 li
418.867 283.308 li
418.867 277.474 li
413.033 277.474 li
413.033 277.974 li
413.533 277.974 li
cp
414.283 277.974 mo
414.283 278.474 li
418.617 278.474 li
418.617 282.308 li
414.783 282.308 li
414.783 277.974 li
414.283 277.974 li
414.283 278.474 li
414.283 277.974 li
413.783 277.974 li
413.783 283.308 li
419.617 283.308 li
419.617 277.474 li
413.783 277.474 li
413.783 277.974 li
414.283 277.974 li
cp
410.867 277.641 mo
410.867 278.141 li
415.199 278.141 li
415.199 281.974 li
411.367 281.974 li
411.367 277.641 li
410.867 277.641 li
410.867 278.141 li
410.867 277.641 li
410.367 277.641 li
410.367 282.974 li
416.199 282.974 li
416.199 277.141 li
410.367 277.141 li
410.367 277.641 li
410.867 277.641 li
cp
414.117 278.058 mo
414.117 278.558 li
418.449 278.558 li
418.449 282.391 li
414.617 282.391 li
414.617 278.058 li
414.117 278.058 li
414.117 278.558 li
414.117 278.058 li
413.617 278.058 li
413.617 283.391 li
419.449 283.391 li
419.449 277.558 li
413.617 277.558 li
413.617 278.058 li
414.117 278.058 li
cp
411.449 277.808 mo
411.449 278.308 li
415.783 278.308 li
415.783 282.141 li
411.949 282.141 li
411.949 277.808 li
411.449 277.808 li
411.449 278.308 li
411.449 277.808 li
410.949 277.808 li
410.949 283.141 li
416.783 283.141 li
416.783 277.308 li
410.949 277.308 li
410.949 277.808 li
411.449 277.808 li
cp
413.033 277.891 mo
413.033 278.391 li
417.367 278.391 li
417.367 282.224 li
413.533 282.224 li
413.533 277.891 li
413.033 277.891 li
413.033 278.391 li
413.033 277.891 li
412.533 277.891 li
412.533 283.224 li
418.367 283.224 li
418.367 277.391 li
412.533 277.391 li
412.533 277.891 li
413.033 277.891 li
cp
407.617 277.808 mo
407.617 278.308 li
411.949 278.308 li
411.949 282.141 li
408.117 282.141 li
408.117 277.808 li
407.617 277.808 li
407.617 278.308 li
407.617 277.808 li
407.117 277.808 li
407.117 283.141 li
412.949 283.141 li
412.949 277.308 li
407.117 277.308 li
407.117 277.808 li
407.617 277.808 li
cp
414.367 277.891 mo
414.367 278.391 li
418.699 278.391 li
418.699 282.224 li
414.867 282.224 li
414.867 277.891 li
414.367 277.891 li
414.367 278.391 li
414.367 277.891 li
413.867 277.891 li
413.867 283.224 li
419.699 283.224 li
419.699 277.391 li
413.867 277.391 li
413.867 277.891 li
414.367 277.891 li
cp
413.283 278.224 mo
413.283 278.724 li
417.617 278.724 li
417.617 282.558 li
413.783 282.558 li
413.783 278.224 li
413.283 278.224 li
413.283 278.724 li
413.283 278.224 li
412.783 278.224 li
412.783 283.558 li
418.617 283.558 li
418.617 277.724 li
412.783 277.724 li
412.783 278.224 li
413.283 278.224 li
cp
413.033 277.974 mo
413.033 278.474 li
417.367 278.474 li
417.367 282.308 li
413.533 282.308 li
413.533 277.974 li
413.033 277.974 li
413.033 278.474 li
413.033 277.974 li
412.533 277.974 li
412.533 283.308 li
418.367 283.308 li
418.367 277.474 li
412.533 277.474 li
412.533 277.974 li
413.033 277.974 li
cp
412.033 277.891 mo
412.033 278.391 li
416.367 278.391 li
416.367 282.224 li
412.533 282.224 li
412.533 277.891 li
412.033 277.891 li
412.033 278.391 li
412.033 277.891 li
411.533 277.891 li
411.533 283.224 li
417.367 283.224 li
417.367 277.391 li
411.533 277.391 li
411.533 277.891 li
412.033 277.891 li
cp
409.283 277.974 mo
409.283 278.474 li
413.617 278.474 li
413.617 282.308 li
409.783 282.308 li
409.783 277.974 li
409.283 277.974 li
409.283 278.474 li
409.283 277.974 li
408.783 277.974 li
408.783 283.308 li
414.617 283.308 li
414.617 277.474 li
408.783 277.474 li
408.783 277.974 li
409.283 277.974 li
cp
405.783 278.058 mo
405.783 278.558 li
410.117 278.558 li
410.117 282.391 li
406.283 282.391 li
406.283 278.058 li
405.783 278.058 li
405.783 278.558 li
405.783 278.058 li
405.283 278.058 li
405.283 283.391 li
411.117 283.391 li
411.117 277.558 li
405.283 277.558 li
405.283 278.058 li
405.783 278.058 li
cp
414.367 277.808 mo
414.367 278.308 li
418.699 278.308 li
418.699 282.141 li
414.867 282.141 li
414.867 277.808 li
414.367 277.808 li
414.367 278.308 li
414.367 277.808 li
413.867 277.808 li
413.867 283.141 li
419.699 283.141 li
419.699 277.308 li
413.867 277.308 li
413.867 277.808 li
414.367 277.808 li
cp
413.117 277.974 mo
413.117 278.474 li
417.449 278.474 li
417.449 282.308 li
413.617 282.308 li
413.617 277.974 li
413.117 277.974 li
413.117 278.474 li
413.117 277.974 li
412.617 277.974 li
412.617 283.308 li
418.449 283.308 li
418.449 277.474 li
412.617 277.474 li
412.617 277.974 li
413.117 277.974 li
cp
396.032 277.141 mo
396.032 277.641 li
400.367 277.641 li
400.367 281.474 li
396.532 281.474 li
396.532 277.141 li
396.032 277.141 li
396.032 277.641 li
396.032 277.141 li
395.532 277.141 li
395.532 282.474 li
401.367 282.474 li
401.367 276.641 li
395.532 276.641 li
395.532 277.141 li
396.032 277.141 li
cp
413.199 277.974 mo
413.199 278.474 li
417.533 278.474 li
417.533 282.308 li
413.699 282.308 li
413.699 277.974 li
413.199 277.974 li
413.199 278.474 li
413.199 277.974 li
412.699 277.974 li
412.699 283.308 li
418.533 283.308 li
418.533 277.474 li
412.699 277.474 li
412.699 277.974 li
413.199 277.974 li
cp
409.949 277.891 mo
409.949 278.391 li
414.283 278.391 li
414.283 282.224 li
410.449 282.224 li
410.449 277.891 li
409.949 277.891 li
409.949 278.391 li
409.949 277.891 li
409.449 277.891 li
409.449 283.224 li
415.283 283.224 li
415.283 277.391 li
409.449 277.391 li
409.449 277.891 li
409.949 277.891 li
cp
412.283 277.974 mo
412.283 278.474 li
416.617 278.474 li
416.617 282.308 li
412.783 282.308 li
412.783 277.974 li
412.283 277.974 li
412.283 278.474 li
412.283 277.974 li
411.783 277.974 li
411.783 283.308 li
417.617 283.308 li
417.617 277.474 li
411.783 277.474 li
411.783 277.974 li
412.283 277.974 li
cp
405.117 277.974 mo
405.117 278.474 li
409.449 278.474 li
409.449 282.308 li
405.617 282.308 li
405.617 277.974 li
405.117 277.974 li
405.117 278.474 li
405.117 277.974 li
404.617 277.974 li
404.617 283.308 li
410.449 283.308 li
410.449 277.474 li
404.617 277.474 li
404.617 277.974 li
405.117 277.974 li
cp
412.617 277.891 mo
412.617 278.391 li
416.949 278.391 li
416.949 282.224 li
413.117 282.224 li
413.117 277.891 li
412.617 277.891 li
412.617 278.391 li
412.617 277.891 li
412.117 277.891 li
412.117 283.224 li
417.949 283.224 li
417.949 277.391 li
412.117 277.391 li
412.117 277.891 li
412.617 277.891 li
cp
409.033 277.974 mo
409.033 278.474 li
413.367 278.474 li
413.367 282.308 li
409.533 282.308 li
409.533 277.974 li
409.033 277.974 li
409.033 278.474 li
409.033 277.974 li
408.533 277.974 li
408.533 283.308 li
414.367 283.308 li
414.367 277.474 li
408.533 277.474 li
408.533 277.974 li
409.033 277.974 li
cp
412.533 265.058 mo
412.533 265.558 li
416.867 265.558 li
416.867 269.391 li
413.033 269.391 li
413.033 265.058 li
412.533 265.058 li
412.533 265.558 li
412.533 265.058 li
412.033 265.058 li
412.033 270.391 li
417.867 270.391 li
417.867 264.558 li
412.033 264.558 li
412.033 265.058 li
412.533 265.058 li
cp
410.117 277.974 mo
410.117 278.474 li
414.449 278.474 li
414.449 282.308 li
410.617 282.308 li
410.617 277.974 li
410.117 277.974 li
410.117 278.474 li
410.117 277.974 li
409.617 277.974 li
409.617 283.308 li
415.449 283.308 li
415.449 277.474 li
409.617 277.474 li
409.617 277.974 li
410.117 277.974 li
cp
408.783 277.974 mo
408.783 278.474 li
413.117 278.474 li
413.117 282.308 li
409.283 282.308 li
409.283 277.974 li
408.783 277.974 li
408.783 278.474 li
408.783 277.974 li
408.283 277.974 li
408.283 283.308 li
414.117 283.308 li
414.117 277.474 li
408.283 277.474 li
408.283 277.974 li
408.783 277.974 li
cp
406.699 277.974 mo
406.699 278.474 li
411.033 278.474 li
411.033 282.308 li
407.199 282.308 li
407.199 277.974 li
406.699 277.974 li
406.699 278.474 li
406.699 277.974 li
406.199 277.974 li
406.199 283.308 li
412.033 283.308 li
412.033 277.474 li
406.199 277.474 li
406.199 277.974 li
406.699 277.974 li
cp
414.949 277.974 mo
414.949 278.474 li
419.283 278.474 li
419.283 282.308 li
415.449 282.308 li
415.449 277.974 li
414.949 277.974 li
414.949 278.474 li
414.949 277.974 li
414.449 277.974 li
414.449 283.308 li
420.283 283.308 li
420.283 277.474 li
414.449 277.474 li
414.449 277.974 li
414.949 277.974 li
cp
413.033 277.974 mo
413.033 278.474 li
417.367 278.474 li
417.367 282.308 li
413.533 282.308 li
413.533 277.974 li
413.033 277.974 li
413.033 278.474 li
413.033 277.974 li
412.533 277.974 li
412.533 283.308 li
418.367 283.308 li
418.367 277.474 li
412.533 277.474 li
412.533 277.974 li
413.033 277.974 li
cp
414.533 277.974 mo
414.533 278.474 li
418.867 278.474 li
418.867 282.308 li
415.033 282.308 li
415.033 277.974 li
414.533 277.974 li
414.533 278.474 li
414.533 277.974 li
414.033 277.974 li
414.033 283.308 li
419.867 283.308 li
419.867 277.474 li
414.033 277.474 li
414.033 277.974 li
414.533 277.974 li
cp
410.867 277.974 mo
410.867 278.474 li
415.199 278.474 li
415.199 282.308 li
411.367 282.308 li
411.367 277.974 li
410.867 277.974 li
410.867 278.474 li
410.867 277.974 li
410.367 277.974 li
410.367 283.308 li
416.199 283.308 li
416.199 277.474 li
410.367 277.474 li
410.367 277.974 li
410.867 277.974 li
cp
413.117 277.974 mo
413.117 278.474 li
417.449 278.474 li
417.449 282.308 li
413.617 282.308 li
413.617 277.974 li
413.117 277.974 li
413.117 278.474 li
413.117 277.974 li
412.617 277.974 li
412.617 283.308 li
418.449 283.308 li
418.449 277.474 li
412.617 277.474 li
412.617 277.974 li
413.117 277.974 li
cp
412.367 277.891 mo
412.367 278.391 li
416.699 278.391 li
416.699 282.224 li
412.867 282.224 li
412.867 277.891 li
412.367 277.891 li
412.367 278.391 li
412.367 277.891 li
411.867 277.891 li
411.867 283.224 li
417.699 283.224 li
417.699 277.391 li
411.867 277.391 li
411.867 277.891 li
412.367 277.891 li
cp
410.949 278.141 mo
410.949 278.641 li
415.283 278.641 li
415.283 282.474 li
411.449 282.474 li
411.449 278.141 li
410.949 278.141 li
410.949 278.641 li
410.949 278.141 li
410.449 278.141 li
410.449 283.474 li
416.283 283.474 li
416.283 277.641 li
410.449 277.641 li
410.449 278.141 li
410.949 278.141 li
cp
408.367 277.891 mo
408.367 278.391 li
412.699 278.391 li
412.699 282.224 li
408.867 282.224 li
408.867 277.891 li
408.367 277.891 li
408.367 278.391 li
408.367 277.891 li
407.867 277.891 li
407.867 283.224 li
413.699 283.224 li
413.699 277.391 li
407.867 277.391 li
407.867 277.891 li
408.367 277.891 li
cp
409.783 277.974 mo
409.783 278.474 li
414.117 278.474 li
414.117 282.308 li
410.283 282.308 li
410.283 277.974 li
409.783 277.974 li
409.783 278.474 li
409.783 277.974 li
409.283 277.974 li
409.283 283.308 li
415.117 283.308 li
415.117 277.474 li
409.283 277.474 li
409.283 277.974 li
409.783 277.974 li
cp
407.783 277.808 mo
407.783 278.308 li
412.117 278.308 li
412.117 282.141 li
408.283 282.141 li
408.283 277.808 li
407.783 277.808 li
407.783 278.308 li
407.783 277.808 li
407.283 277.808 li
407.283 283.141 li
413.117 283.141 li
413.117 277.308 li
407.283 277.308 li
407.283 277.808 li
407.783 277.808 li
cp
411.867 277.891 mo
411.867 278.391 li
416.199 278.391 li
416.199 282.224 li
412.367 282.224 li
412.367 277.891 li
411.867 277.891 li
411.867 278.391 li
411.867 277.891 li
411.367 277.891 li
411.367 283.224 li
417.199 283.224 li
417.199 277.391 li
411.367 277.391 li
411.367 277.891 li
411.867 277.891 li
cp
412.699 277.641 mo
412.699 278.141 li
417.033 278.141 li
417.033 281.974 li
413.199 281.974 li
413.199 277.641 li
412.699 277.641 li
412.699 278.141 li
412.699 277.641 li
412.199 277.641 li
412.199 282.974 li
418.033 282.974 li
418.033 277.141 li
412.199 277.141 li
412.199 277.641 li
412.699 277.641 li
cp
411.367 277.891 mo
411.367 278.391 li
415.699 278.391 li
415.699 282.224 li
411.867 282.224 li
411.867 277.891 li
411.367 277.891 li
411.367 278.391 li
411.367 277.891 li
410.867 277.891 li
410.867 283.224 li
416.699 283.224 li
416.699 277.391 li
410.867 277.391 li
410.867 277.891 li
411.367 277.891 li
cp
413.699 277.974 mo
413.699 278.474 li
418.033 278.474 li
418.033 282.308 li
414.199 282.308 li
414.199 277.974 li
413.699 277.974 li
413.699 278.474 li
413.699 277.974 li
413.199 277.974 li
413.199 283.308 li
419.033 283.308 li
419.033 277.474 li
413.199 277.474 li
413.199 277.974 li
413.699 277.974 li
cp
410.449 277.641 mo
410.449 278.141 li
414.783 278.141 li
414.783 281.974 li
410.949 281.974 li
410.949 277.641 li
410.449 277.641 li
410.449 278.141 li
410.449 277.641 li
409.949 277.641 li
409.949 282.974 li
415.783 282.974 li
415.783 277.141 li
409.949 277.141 li
409.949 277.641 li
410.449 277.641 li
cp
412.033 277.974 mo
412.033 278.474 li
416.367 278.474 li
416.367 282.308 li
412.533 282.308 li
412.533 277.974 li
412.033 277.974 li
412.033 278.474 li
412.033 277.974 li
411.533 277.974 li
411.533 283.308 li
417.367 283.308 li
417.367 277.474 li
411.533 277.474 li
411.533 277.974 li
412.033 277.974 li
cp
414.533 277.891 mo
414.533 278.391 li
418.867 278.391 li
418.867 282.224 li
415.033 282.224 li
415.033 277.891 li
414.533 277.891 li
414.533 278.391 li
414.533 277.891 li
414.033 277.891 li
414.033 283.224 li
419.867 283.224 li
419.867 277.391 li
414.033 277.391 li
414.033 277.891 li
414.533 277.891 li
cp
414.949 277.891 mo
414.949 278.391 li
419.283 278.391 li
419.283 282.224 li
415.449 282.224 li
415.449 277.891 li
414.949 277.891 li
414.949 278.391 li
414.949 277.891 li
414.449 277.891 li
414.449 283.224 li
420.283 283.224 li
420.283 277.391 li
414.449 277.391 li
414.449 277.891 li
414.949 277.891 li
cp
410.617 277.808 mo
410.617 278.308 li
414.949 278.308 li
414.949 282.141 li
411.117 282.141 li
411.117 277.808 li
410.617 277.808 li
410.617 278.308 li
410.617 277.808 li
410.117 277.808 li
410.117 283.141 li
415.949 283.141 li
415.949 277.308 li
410.117 277.308 li
410.117 277.808 li
410.617 277.808 li
cp
411.617 277.974 mo
411.617 278.474 li
415.949 278.474 li
415.949 282.308 li
412.117 282.308 li
412.117 277.974 li
411.617 277.974 li
411.617 278.474 li
411.617 277.974 li
411.117 277.974 li
411.117 283.308 li
416.949 283.308 li
416.949 277.474 li
411.117 277.474 li
411.117 277.974 li
411.617 277.974 li
cp
411.283 277.891 mo
411.283 278.391 li
415.617 278.391 li
415.617 282.224 li
411.783 282.224 li
411.783 277.891 li
411.283 277.891 li
411.283 278.391 li
411.283 277.891 li
410.783 277.891 li
410.783 283.224 li
416.617 283.224 li
416.617 277.391 li
410.783 277.391 li
410.783 277.891 li
411.283 277.891 li
cp
412.033 277.974 mo
412.033 278.474 li
416.367 278.474 li
416.367 282.308 li
412.533 282.308 li
412.533 277.974 li
412.033 277.974 li
412.033 278.474 li
412.033 277.974 li
411.533 277.974 li
411.533 283.308 li
417.367 283.308 li
417.367 277.474 li
411.533 277.474 li
411.533 277.974 li
412.033 277.974 li
cp
412.617 277.891 mo
412.617 278.391 li
416.949 278.391 li
416.949 282.224 li
413.117 282.224 li
413.117 277.891 li
412.617 277.891 li
412.617 278.391 li
412.617 277.891 li
412.117 277.891 li
412.117 283.224 li
417.949 283.224 li
417.949 277.391 li
412.117 277.391 li
412.117 277.891 li
412.617 277.891 li
cp
412.117 277.891 mo
412.117 278.391 li
416.449 278.391 li
416.449 282.224 li
412.617 282.224 li
412.617 277.891 li
412.117 277.891 li
412.117 278.391 li
412.117 277.891 li
411.617 277.891 li
411.617 283.224 li
417.449 283.224 li
417.449 277.391 li
411.617 277.391 li
411.617 277.891 li
412.117 277.891 li
cp
410.033 277.891 mo
410.033 278.391 li
414.367 278.391 li
414.367 282.224 li
410.533 282.224 li
410.533 277.891 li
410.033 277.891 li
410.033 278.391 li
410.033 277.891 li
409.533 277.891 li
409.533 283.224 li
415.367 283.224 li
415.367 277.391 li
409.533 277.391 li
409.533 277.891 li
410.033 277.891 li
cp
414.533 277.974 mo
414.533 278.474 li
418.867 278.474 li
418.867 282.308 li
415.033 282.308 li
415.033 277.974 li
414.533 277.974 li
414.533 278.474 li
414.533 277.974 li
414.033 277.974 li
414.033 283.308 li
419.867 283.308 li
419.867 277.474 li
414.033 277.474 li
414.033 277.974 li
414.533 277.974 li
cp
413.699 277.974 mo
413.699 278.474 li
418.033 278.474 li
418.033 282.308 li
414.199 282.308 li
414.199 277.974 li
413.699 277.974 li
413.699 278.474 li
413.699 277.974 li
413.199 277.974 li
413.199 283.308 li
419.033 283.308 li
419.033 277.474 li
413.199 277.474 li
413.199 277.974 li
413.699 277.974 li
cp
411.533 277.891 mo
411.533 278.391 li
415.867 278.391 li
415.867 282.224 li
412.033 282.224 li
412.033 277.891 li
411.533 277.891 li
411.533 278.391 li
411.533 277.891 li
411.033 277.891 li
411.033 283.224 li
416.867 283.224 li
416.867 277.391 li
411.033 277.391 li
411.033 277.891 li
411.533 277.891 li
cp
408.783 293.141 mo
408.783 293.641 li
413.117 293.641 li
413.117 297.474 li
409.283 297.474 li
409.283 293.141 li
408.783 293.141 li
408.783 293.641 li
408.783 293.141 li
408.283 293.141 li
408.283 298.474 li
414.117 298.474 li
414.117 292.641 li
408.283 292.641 li
408.283 293.141 li
408.783 293.141 li
cp
362.949 282.308 mo
362.949 282.808 li
367.282 282.808 li
367.282 286.641 li
363.449 286.641 li
363.449 282.308 li
362.949 282.308 li
362.949 282.808 li
362.949 282.308 li
362.449 282.308 li
362.449 287.641 li
368.282 287.641 li
368.282 281.808 li
362.449 281.808 li
362.449 282.308 li
362.949 282.308 li
cp
88.4492 275.058 mo
88.4492 275.558 li
92.7827 275.558 li
92.7827 279.391 li
88.9492 279.391 li
88.9492 275.058 li
88.4492 275.058 li
88.4492 275.558 li
88.4492 275.058 li
87.9492 275.058 li
87.9492 280.391 li
93.7827 280.391 li
93.7827 274.558 li
87.9492 274.558 li
87.9492 275.058 li
88.4492 275.058 li
cp
97.6157 277.974 mo
97.6157 278.474 li
101.949 278.474 li
101.949 282.308 li
98.1157 282.308 li
98.1157 277.974 li
97.6157 277.974 li
97.6157 278.474 li
97.6157 277.974 li
97.1157 277.974 li
97.1157 283.308 li
102.949 283.308 li
102.949 277.474 li
97.1157 277.474 li
97.1157 277.974 li
97.6157 277.974 li
cp
247.699 292.891 mo
247.699 293.391 li
252.032 293.391 li
252.032 297.224 li
248.199 297.224 li
248.199 292.891 li
247.699 292.891 li
247.699 293.391 li
247.699 292.891 li
247.199 292.891 li
247.199 298.224 li
253.032 298.224 li
253.032 292.391 li
247.199 292.391 li
247.199 292.891 li
247.699 292.891 li
cp
229.116 292.308 mo
229.116 292.808 li
233.449 292.808 li
233.449 296.641 li
229.616 296.641 li
229.616 292.308 li
229.116 292.308 li
229.116 292.808 li
229.116 292.308 li
228.616 292.308 li
228.616 297.641 li
234.449 297.641 li
234.449 291.808 li
228.616 291.808 li
228.616 292.308 li
229.116 292.308 li
cp
161.783 280.141 mo
161.783 280.641 li
166.116 280.641 li
166.116 284.474 li
162.283 284.474 li
162.283 280.141 li
161.783 280.141 li
161.783 280.641 li
161.783 280.141 li
161.283 280.141 li
161.283 285.474 li
167.116 285.474 li
167.116 279.641 li
161.283 279.641 li
161.283 280.141 li
161.783 280.141 li
cp
139.866 278.974 mo
139.866 279.474 li
144.199 279.474 li
144.199 283.308 li
140.366 283.308 li
140.366 278.974 li
139.866 278.974 li
139.866 279.474 li
139.866 278.974 li
139.366 278.974 li
139.366 284.308 li
145.199 284.308 li
145.199 278.474 li
139.366 278.474 li
139.366 278.974 li
139.866 278.974 li
cp
121.449 278.891 mo
121.449 279.391 li
125.783 279.391 li
125.783 283.224 li
121.949 283.224 li
121.949 278.891 li
121.449 278.891 li
121.449 279.391 li
121.449 278.891 li
120.949 278.891 li
120.949 284.224 li
126.783 284.224 li
126.783 278.391 li
120.949 278.391 li
120.949 278.891 li
121.449 278.891 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 49 /one putdup 50 /two putdup 51 /three putdup 65 /A putdup 66 /B putdup 67 /C putdup 70 /F putdup 75 /K putdup 76 /L putdup 79 /O putdup 80 /P putdup 82 /R putdup 97 /a putdup 98 /b putdup 99 /c putdup 101 /e putdup 102 /f putdup 103 /g putdup 105 /i putdup 110 /n putdup 111 /o putdup 112 /p putdup 115 /s putdup 116 /t putdup 117 /u putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings30 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C75B9C4286C550974FB8FF16157FF06444D0A95E98A4481C8CE386C20B17AD8BD72461D32B73E295712B08DFD1B0F73A653F8CA74DCF8A515118CC86109EB01A7E7A9C3615A4533ED84> |-/parenright <1C60D8A8C9B81F2C3AB1B16A6E1AE2073D977B7DEBBB7FD67C209E382B3E164F2FC748C9013310E801B9D60E1F62C24C1118E395F6F8936B4B0F2F517CCC3E0AD7B20618CE73D7A005611C9C9D80414388> |-/hyphen <1C60D8A8C9B81F2C6F8FBC1C810A0E8C44539FA33CB316> |-/one <1C60D8A8C9B7EF322B95725327D721A78FE0D59AD4E04529F324F6D510C193519C49DD51CFCFDC3D3422114B050140740B4A8D8EC36935C401> |-/two <1C60D8A8C9B7EF327699F8160463A580389BACE06A766B94145BA5F31A52EBA0EB50E1A1CD8E486A58F822D4B46CDC27CA76DF32A08949B875442C8B06AAE41CBCCDFBA550DF17554B399BC63F2FE83591D5C5DB6C4413F303C830E73979E139FD9340FB4F9C32763288200A85F5A3FBC52B118C5018F7AA2DDEAC297CE153B0347CAB3BCC1DCB69786FFD> |-/three <1C60D8A8C9B7EF32790C706536FBCA9C687925B5B4FABEAE8BCA355BB7699EF0BBCAC5C720443DFEFD9517FCDB50227CAFA0B1BC8F5E2929D293FEBB0161863644456D93391015F11449FA039DFAEC2384374865B87BF91FF1CFF670A564C56D6D1EEBFAE73674973DD3BE019962E88EDB48CCA67FCF8581CC9EAE0E2F69925E89066A1C3B75B27F486AF616C10125A5819DB8FAD5C4AF5E892C99FCCF11DC858ED73AA0FBD994A969E551DDFC4F0355DD1EA3C793861596E5EEC9C0BCAD653A2E950B0984FC4218B2> |-/A <1C60D8A8C9B6079F6D8BCAB13EAF1F64F3C3ED827606376F9F4A528D2C08D43C9621FD70D4EC5667AD384CAC91739649352B61D94F> |-/B <1C60D8A8C9B6079F6D86D2961CAF81439F91370DD118B66018550AD01E9FB9B811FB259D586568107A41A9FC4447F7E941703E573C108ACEFF9EEDCC441475625059AB6F9DE01EE73B9E3B5A59D72DF9A62E0B93E3EC5CC78FB4B07333FEB5838906C427072CD8963E0047555D77242142A6A1CFE1F8DA50B582E38A720E5C3B2BAF84E910386279078C5309261DF084C30054C5F7785118231EF63C44D47C5D3A0E12F0CD98913A840F49DFFA5D> |-/C <1C60D8A8C9B6079F2D195D2F475FB0496F57CAED376D8723354DEC9F1B1DE5681520D221B2480D1D8BDCDE504128C39D7EB2E84513BAC1DE0FB32782218FDC6E9C50EDB3243AB03AB27341C2AB66BCC7BEF1938A37561E60AF9AC58E646150BF50A2A4F9C83CE1E9DB03C86EEE00383C4EF0503E9E481C5C2D47FEADCC38BAEC2FF5C5F148176C> |-/F <1C60D8A8C9B7D8BE37D60E330A65C8F5FB551AA6EDE9CF058BD3DAAA761A67CE89C3F1C9AB8D06> |-/K <1C60D8A8C9B6079F4F4E1D8E3865ECAF9E58DAC68F423ECA95D097C1B548A0CF219A3804E58BA7AB4C37F93D102FA13920B4E13D66> |-/L <1C60D8A8C9B7D8BE37D6010CC4053510AB47A099EC1ADA0A7A2631> |-/O <1C60D8A8C9B6FF86FAE9C2457C8D8A18D690CA26AA83FB492A70B14CC62FF7F2264A09B5482BD1946155E55ADB55EC05C93500AED15E2720DBA8D043297262C37C5013B8AF39FCE8452CFE071343059A9DBE992FB24D4D63D1DC7B84A428190D156C383053D8AC08C475CE1C53753F8479E71BDA62C9FF5E8954D2FBFE28678FDBF2AB68B7BADF42> |-/P <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/R <1C60D8A8C9B6079F6D948C96378A395831CDA2139BE9588FD427243646A74CA03840F9949147C23ABC917C373B1C3FA085ACC10D1EED330B0D766649A299B2544EB909295412D418FE76D00B16F4BC532CFA6BCDAA3E1A61D2555CB15FC302A562089847E09921623EEBB5DB82D30048BD165A1DDE685F24B1A54D6F77BBD785DBF41B3FD9DBD25240631AECE1C07C0C586B60AE8DE9FF5B645009A5D8BE85102CF410B024E2C6C454FB86BE60622EC48789> |-/a <1C60D8A8C9B7EF322BE880EA00DBE3D8876C5FB7647BA8CCC58F470AD954361B3D91651144567349F627F201CF4B889415AEB7207EF345F45727C83FD2AD41468A288BFAB1F1F8FCB791EF1AEC76E7D581984F9D9441BE677D94FB963C5BC5B27908DAD995ADB6FCD1CBF7C384901475354EB3A245D3307FEAFA4358FCD91A73A9A2D0B4DA6C6FAD93BFAD58639AD4966C9A8F5E818248BC94F832DB718423280F618BE3B1ED95509C1B2FEAFB5A791924A6F1D5665394FA5CC00C95995C34120BDD0AD5EC6C89EEA20ACD877A1340E12A0053EE1F5E0DCED83F6B965D6FD267E8BD205A0A960ED3D04B55781B> |-/b <1C60D8A8C9B7D8BE16D22FCDD8FCF7194897CFC30BADA8F67F8875F9903B2ED36E82921D56167F38453B5A93340C5020D0611F38DBB18C6CAE74187506B2AF43DE20531EE5B49E1D8D8134DC87926A1D91F0E7502F24D2D9AC69DFFC6772A16DFD269EEF9B0FFC983C0D5F96843F43A9E372C7BC2A591AC769DFAD44A51C3D5BF85580D46E4063D60C7F3300CA1AC9E39BEF> |-/c <1C60D8A8C9B7EF3224D14587A8B37D54D8F0D79949CF14C9CC9890F2A6EDAA42FBA7117A612E13E7903C5A9C5F0200507E43E4C5E8B577504A53EA8A3E180CB569C8E885144F7728A2CCF0AEA32AD779FCECF91E377BD59B10FB864AC6580EFC92CA06227EB092EEEA6F0A41DE0D0DA52550ED7973070D2B3954AFC87D3BB2A46D25> |-/e <1C60D8A8C9B7EF322BA45AA2EF7BD5EAECAF85AF93C215781DFD7DA13F94BB4115BE9214BE159174D684F62C2005A0180C6808F64A08B396F763189FED746BF18ED4EE6E66DDE691142C37E3D614F8DB7B75C14A9F846CCAD13261BA0F086A233499153D3DE84AE55E921B6458DA81ABE3A274371E0DC1724FB71E09D7A2DF5E64CCD5B0577B8A6829193E633FA6CD7C2838A9AF9E8E0D8892F0FE> |-/f <1C60D8A8C9B81F2C3A233ED2584A5D503772ABBF6B2808B3D90393B4492FAD585A6BBF0DD8708D41EF54D499B58E7A4707819D1962C784050E571012168CB14C65EDB734DC21589D28A0280112A3100C30A89B7F4072B8FB10EB042628FCB195E8> |-/g <1C60D8A8C9B7D8BE169CBBCCB79D759AEEB859DCD91AA46624CF744A20F8A38AFFA3B6550E21458E9D14DE2D09B4BF3F9174CB67D02A7503B28F9421FE0A1BCEE904E704CD042ACF88D7E73EEC24888DDBF45409BD77343D32F0423EEA40FC1C1167D2433D3EB9C5C4010E890245A5D0B1313026942EE4D85A29C1BEF296C4147691304ECB779C8F6DAA1DBF7FA295E20F077DF5ABCE13FB8C40E75FB5AF731401A7DE5E1C5B07DFA52CE5031268A77C7754B7BA81330590DAABC9DEFEAF5862336C28ED2A49F14CB5F5> |-/i <1C60D8A8C9B854D0F4508A75B6F712D3D087C02C3CCD57AE7F32B92CA51473D32788CE0DC0B491> |-/n <1C60D8A8C9B7D8BE16D8563F2A820135798DB83DD6B1FB4BEEDD6BE48B5FE588992ED2D6619960E60863C9F44AA1F533124F0383142FF7EEADB4AF1E517ED95B69DCD15F12872381FB9701963D2E25CAEBA64306BF64AB37AA8CAB3DCB77> |-/o <1C60D8A8C9B7D8BE16E0CC961AEF519BE656EC753A8172FD3365F902B7C752134E0D6062F2934F0088DB7D58C66CCBA57D3D7D362C8679BD71F98F68353DF00A6FE4BC9DC38D8621ADC978F735588AE608451BBF7B1F36DE1ABDB4D743E861A8CEED1A56243288AD7237419D7149DAF8582921DC7F71072F99464BF4B424500A0E0A81AC> |-/p <1C60D8A8C9B7D8BE19C9920B65BF569755CBC7004398C5F3E07B367F0E7B21E557936DCBD9EF9335D9341C63852CE0C6CD4F49B90122A57276DE63D17D21D54F902070BE3CE79ECEAFFF0AA566ECBAB31BF348C6D8C56B9E07D665CEA291F28872C6AD93B413125AA4075F806569703377C307FA20494A67837D4FC26FAB7DC94721A0B384A23590E20FBFB60312165FBB83> |-/s <1C60D8A8C9B7EF3276785A356AF9DD9181F27C4252E9DACE79B7DB0370DCA0F85F2A56C0E905F3608D53B08547BCFA1E15664D76297FA3EA82E19324C21C3817083D0B133768886E32780B3693CC1A54C69A839D656ADAACCF3EF0C2DED6AEA97A43D9D5150EF29F02BAE794D0AAD927DFAE8C63D2C80CFCA65FDAAC0B332AC718C253D1D2EC2E3CF8D5C07F36B7AE5922387582C705BE031EB76063A112BF895DE22DA9D9C7170534EB3741A864E522B78EF0730F66150AFF> |-/t <1C60D8A8C9B81F2C1282009E5D95CE7F7F46B3356102279C4BC0F18BE99679A2FBE0B24A5C5CDAE5CD8FAEB44771EF6D329849A78B1C197090EDEDC41A5628E7A0D30EBF1C775B98D05B427C008446AE8ADA9F57D4B8> |-/u <1C60D8A8C9B7D8BE298ED182A3F33DCB7BE539E6C3399DF0FB84931D328A058718BA576345AB2E09C6F45BA11DD49FF63E46039F6DCA1460946638F085A9C4202F8E676A0955411ED6C0E7E9A212C6F8002DEB99D3B9D78F19BAB4F5709645F4B6BE5E366BC1C978> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PTVRLO+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/PTVRLO+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 13{/.notdef}rp /A /B /C 2{/.notdef}rp /F 4{/.notdef}rp /K /L 2{/.notdef}rp /O /P /.notdef /R 14{/.notdef}rp /a /b /c /.notdef /e /f /g /.notdef /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t /u 138{/.notdef}rp]PTVRLO+Helvetica-Bold nfPTVRLO+Helvetica-Bold*1 [16 0 0 -16 0 0 ]msf117.133 396.93 mo(Caspase 3 Robustness Coefficient \(Log\))shPTVRLO+Helvetica-Bold*1 [0 -16 -16 0 0 0 ]msf13.7578 301.836 mo(BCL2  Robustness Coeficient \(Log\))[-11.5547 -11.5547 -9.77344 -8.89844 -4.44531 -4.44531 -11.5547 -9.77344 -9.77344 -9.77344 -8.89844 -5.32813 -9.77344 -8.89844 -8.89844 -8.89844 -4.44531 -11.5547 -9.77344 -8.89844 -5.32813 -4.44531 -8.89844 -4.44531 -8.89844 -9.77344 -5.32813 -4.44531 -5.32813 -9.77344 -9.77344 -9.77344 0 ]yshPTVRLO+Helvetica-Bold*1 [16 0 0 -16 0 0 ]msf207.383 33.3828 mo(APAF-1 KO)sh581.716 361.385 mo
581.716 9.46777 li
1027.55 9.46777 li
1027.55 361.135 li
581.466 361.135 li
581.466 361.635 li
1027.8 361.635 li
1027.98 361.562 li
1028.05 361.385 li
1028.05 9.21777 li
1027.98 9.041 li
1027.8 8.96777 li
581.466 8.96777 li
581.29 9.04097 li
581.216 9.21777 li
581.216 361.385 li
581.716 361.385 li
cp
0 0 0 0 cmyk
f
581.466 9.21777 mo
581.466 13.6348 li
581.466 361.385 mo
581.466 356.885 li
581.466 361.385 mo
581.466 9.21777 li
581.466 361.385 mo
1027.8 361.385 li
1027.8 361.385 mo
1027.8 9.21777 li
581.466 361.385 mo
581.466 9.21777 li
581.466 9.21777 mo
1027.8 9.21777 li
581.466 361.385 mo
1027.8 361.385 li
0 0 0 .5 cmyk
f
580.966 9.21777 mo
580.966 13.6348 li
581.966 13.6348 li
581.966 9.21777 li
cp
581.966 361.385 mo
581.966 356.885 li
580.966 356.885 li
580.966 361.385 li
cp
581.966 361.385 mo
581.966 9.21777 li
580.966 9.21777 li
580.966 361.385 li
cp
581.466 361.885 mo
1027.8 361.885 li
1027.8 360.885 li
581.466 360.885 li
cp
1028.3 361.385 mo
1028.3 9.21777 li
1027.3 9.21777 li
1027.3 361.385 li
cp
581.966 361.385 mo
581.966 9.21777 li
580.966 9.21777 li
580.966 361.385 li
cp
581.466 9.71777 mo
1027.8 9.71777 li
1027.8 8.71777 li
581.466 8.71777 li
cp
581.466 361.885 mo
1027.8 361.885 li
1027.8 360.885 li
581.466 360.885 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf566.722 373.467 mo(\1770.)sh582.894 373.467 mo(5)sh637.216 9.21777 mo
637.216 13.6348 li
637.216 361.385 mo
637.216 356.885 li
0 0 0 .5 cmyk
f
636.716 9.21777 mo
636.716 13.6348 li
637.716 13.6348 li
637.716 9.21777 li
cp
637.716 361.385 mo
637.716 356.885 li
636.716 356.885 li
636.716 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf622.464 373.467 mo(\1770.)sh638.651 373.467 mo(4)sh693.05 9.21777 mo
693.05 13.6348 li
693.05 361.385 mo
693.05 356.885 li
0 0 0 .5 cmyk
f
692.55 9.21777 mo
692.55 13.6348 li
693.55 13.6348 li
693.55 9.21777 li
cp
693.55 361.385 mo
693.55 356.885 li
692.55 356.885 li
692.55 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf678.3 373.467 mo(\1770.)sh694.479 373.467 mo(3)sh748.8 9.21777 mo
748.8 13.6348 li
748.8 361.385 mo
748.8 356.885 li
0 0 0 .5 cmyk
f
748.3 9.21777 mo
748.3 13.6348 li
749.3 13.6348 li
749.3 9.21777 li
cp
749.3 361.385 mo
749.3 356.885 li
748.3 356.885 li
748.3 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf734.05 373.467 mo(\1770.)sh750.222 373.467 mo(2)sh804.632 9.21777 mo
804.632 13.6348 li
804.632 361.385 mo
804.632 356.885 li
0 0 0 .5 cmyk
f
804.132 9.21777 mo
804.132 13.6348 li
805.132 13.6348 li
805.132 9.21777 li
cp
805.132 361.385 mo
805.132 356.885 li
804.132 356.885 li
804.132 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf789.878 373.467 mo(\1770.)sh806.065 373.467 mo(1)sh860.382 9.21777 mo
860.382 13.6348 li
860.382 361.385 mo
860.382 356.885 li
0 0 0 .5 cmyk
f
859.882 9.21777 mo
859.882 13.6348 li
860.882 13.6348 li
860.882 9.21777 li
cp
860.882 361.385 mo
860.882 356.885 li
859.882 356.885 li
859.882 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf857.628 373.467 mo(0)sh916.216 9.21777 mo
916.216 13.6348 li
916.216 361.385 mo
916.216 356.885 li
0 0 0 .5 cmyk
f
915.716 9.21777 mo
915.716 13.6348 li
916.716 13.6348 li
916.716 9.21777 li
cp
916.716 361.385 mo
916.716 356.885 li
915.716 356.885 li
915.716 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf907.3 373.467 mo(0.)[6.67383 0 ]xsh917.636 373.467 mo(1)sh971.966 9.21777 mo
971.966 13.6348 li
971.966 361.385 mo
971.966 356.885 li
0 0 0 .5 cmyk
f
971.466 9.21777 mo
971.466 13.6348 li
972.466 13.6348 li
972.466 9.21777 li
cp
972.466 361.385 mo
972.466 356.885 li
971.466 356.885 li
971.466 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf963.05 373.467 mo(0.)[6.67383 0 ]xsh973.386 373.467 mo(2)sh1027.8 9.21777 mo
1027.8 13.6348 li
1027.8 361.385 mo
1027.8 356.885 li
0 0 0 .5 cmyk
f
1027.3 9.21777 mo
1027.3 13.6348 li
1028.3 13.6348 li
1028.3 9.21777 li
cp
1028.3 361.385 mo
1028.3 356.885 li
1027.3 356.885 li
1027.3 361.385 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf1018.89 373.467 mo(0.)[6.67383 0 ]xsh1029.22 373.467 mo(3)sh1027.8 361.385 mo
1023.3 361.385 li
581.466 361.385 mo
585.882 361.385 li
0 0 0 .5 cmyk
f
1027.8 360.885 mo
1023.3 360.885 li
1023.3 361.885 li
1027.8 361.885 li
cp
581.466 361.885 mo
585.882 361.885 li
585.882 360.885 li
581.466 360.885 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf556.886 363.053 mo(\1770.)sh573.058 363.053 mo(2)sh1027.8 322.218 mo
1023.3 322.218 li
581.466 322.218 mo
585.882 322.218 li
0 0 0 .5 cmyk
f
1027.8 321.718 mo
1023.3 321.718 li
1023.3 322.718 li
1027.8 322.718 li
cp
581.466 322.718 mo
585.882 322.718 li
585.882 321.718 li
581.466 321.718 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf573.05 325.889 mo(0)sh1027.8 283.051 mo
1023.3 283.051 li
581.466 283.051 mo
585.882 283.051 li
0 0 0 .5 cmyk
f
1027.8 282.551 mo
1023.3 282.551 li
1023.3 283.551 li
1027.8 283.551 li
cp
581.466 283.551 mo
585.882 283.551 li
585.882 282.551 li
581.466 282.551 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 286.717 mo(0.)[6.67383 0 ]xsh573.058 286.717 mo(2)sh1027.8 243.968 mo
1023.3 243.968 li
581.466 243.968 mo
585.882 243.968 li
0 0 0 .5 cmyk
f
1027.8 243.468 mo
1023.3 243.468 li
1023.3 244.468 li
1027.8 244.468 li
cp
581.466 244.468 mo
585.882 244.468 li
585.882 243.468 li
581.466 243.468 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 247.639 mo(0.)[6.67383 0 ]xsh573.058 247.639 mo(4)sh1027.8 204.801 mo
1023.3 204.801 li
581.466 204.801 mo
585.882 204.801 li
0 0 0 .5 cmyk
f
1027.8 204.301 mo
1023.3 204.301 li
1023.3 205.301 li
1027.8 205.301 li
cp
581.466 205.301 mo
585.882 205.301 li
585.882 204.301 li
581.466 204.301 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 208.467 mo(0.)[6.67383 0 ]xsh573.058 208.467 mo(6)sh1027.8 165.718 mo
1023.3 165.718 li
581.466 165.718 mo
585.882 165.718 li
0 0 0 .5 cmyk
f
1027.8 165.218 mo
1023.3 165.218 li
1023.3 166.218 li
1027.8 166.218 li
cp
581.466 166.218 mo
585.882 166.218 li
585.882 165.218 li
581.466 165.218 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 70{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 169.381 mo(0.)[6.67383 0 ]xsh573.058 169.381 mo(8)sh1027.8 126.551 mo
1023.3 126.551 li
581.466 126.551 mo
585.882 126.551 li
0 0 0 .5 cmyk
f
1027.8 126.051 mo
1023.3 126.051 li
1023.3 127.051 li
1027.8 127.051 li
cp
581.466 127.051 mo
585.882 127.051 li
585.882 126.051 li
581.466 126.051 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf573.05 130.225 mo(1)sh1027.8 87.4678 mo
1023.3 87.4678 li
581.466 87.4678 mo
585.882 87.4678 li
0 0 0 .5 cmyk
f
1027.8 86.9678 mo
1023.3 86.9678 li
1023.3 87.9678 li
1027.8 87.9678 li
cp
581.466 87.9678 mo
585.882 87.9678 li
585.882 86.9678 li
581.466 86.9678 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 91.1309 mo(1.)[6.67383 0 ]xsh573.058 91.1309 mo(2)sh1027.8 48.3013 mo
1023.3 48.3013 li
581.466 48.3013 mo
585.882 48.3013 li
0 0 0 .5 cmyk
f
1027.8 47.8013 mo
1023.3 47.8013 li
1023.3 48.8013 li
1027.8 48.8013 li
cp
581.466 48.8013 mo
585.882 48.8013 li
585.882 47.8013 li
581.466 47.8013 li
cp
0 0 0 1 cmyk
f
0 0 0 1 cmyk
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 51.9668 mo(1.)[6.67383 0 ]xsh573.058 51.9668 mo(4)sh1027.8 9.21777 mo
1023.3 9.21777 li
581.466 9.21777 mo
585.882 9.21777 li
0 0 0 .5 cmyk
f
1027.8 8.71777 mo
1023.3 8.71777 li
1023.3 9.71777 li
1027.8 9.71777 li
cp
581.466 9.71777 mo
585.882 9.71777 li
585.882 8.71777 li
581.466 8.71777 li
cp
0 0 0 1 cmyk
f
PTVRLN+Helvetica*1 [12 0 0 -12 0 0 ]msf562.714 12.8809 mo(1.)[6.67383 0 ]xsh573.058 12.8809 mo(6)sh1028.3 361.385 mo
1028.3 9.21777 li
1027.3 9.21777 li
1027.3 361.385 li
cp
581.966 361.385 mo
581.966 9.21777 li
580.966 9.21777 li
580.966 361.385 li
cp
581.466 9.71777 mo
1027.8 9.71777 li
1027.8 8.71777 li
581.466 8.71777 li
cp
581.466 361.885 mo
1027.8 361.885 li
1027.8 360.885 li
581.466 360.885 li
cp
f
858.05 320.135 mo
862.882 320.135 li
862.882 324.968 li
858.05 324.968 li
858.05 320.135 li
cp
858.55 320.385 mo
863.382 320.385 li
863.382 325.218 li
858.55 325.218 li
858.55 320.385 li
cp
858.05 320.301 mo
862.882 320.301 li
862.882 325.135 li
858.05 325.135 li
858.05 320.301 li
cp
858.216 320.385 mo
863.05 320.385 li
863.05 325.218 li
858.216 325.218 li
858.216 320.385 li
cp
858.132 320.385 mo
862.966 320.385 li
862.966 325.218 li
858.132 325.218 li
858.132 320.385 li
cp
860.966 325.885 mo
865.8 325.885 li
865.8 330.718 li
860.966 330.718 li
860.966 325.885 li
cp
861.05 323.135 mo
865.882 323.135 li
865.882 327.968 li
861.05 327.968 li
861.05 323.135 li
cp
859.966 322.885 mo
864.8 322.885 li
864.8 327.718 li
859.966 327.718 li
859.966 322.885 li
cp
860.716 323.385 mo
865.55 323.385 li
865.55 328.218 li
860.716 328.218 li
860.716 323.385 li
cp
860.216 329.551 mo
865.05 329.551 li
865.05 334.385 li
860.216 334.385 li
860.216 329.551 li
cp
857.966 319.885 mo
862.8 319.885 li
862.8 324.718 li
857.966 324.718 li
857.966 319.885 li
cp
857.966 320.051 mo
862.8 320.051 li
862.8 324.885 li
857.966 324.885 li
857.966 320.051 li
cp
857.966 319.801 mo
862.8 319.801 li
862.8 324.635 li
857.966 324.635 li
857.966 319.801 li
cp
858.05 319.885 mo
862.882 319.885 li
862.882 324.718 li
858.05 324.718 li
858.05 319.885 li
cp
852.132 319.718 mo
856.966 319.718 li
856.966 324.551 li
852.132 324.551 li
852.132 319.718 li
cp
859.3 317.718 mo
864.132 317.718 li
864.132 322.551 li
859.3 322.551 li
859.3 317.718 li
cp
860.382 320.635 mo
865.216 320.635 li
865.216 325.468 li
860.382 325.468 li
860.382 320.635 li
cp
860.3 320.135 mo
865.132 320.135 li
865.132 324.968 li
860.3 324.968 li
860.3 320.135 li
cp
860.55 321.885 mo
865.382 321.885 li
865.382 326.718 li
860.55 326.718 li
860.55 321.885 li
cp
860.216 319.551 mo
865.05 319.551 li
865.05 324.385 li
860.216 324.385 li
860.216 319.551 li
cp
860.132 320.718 mo
864.966 320.718 li
864.966 325.551 li
860.132 325.551 li
860.132 320.718 li
cp
859.632 320.801 mo
864.466 320.801 li
864.466 325.635 li
859.632 325.635 li
859.632 320.801 li
cp
859.05 319.635 mo
863.882 319.635 li
863.882 324.468 li
859.05 324.468 li
859.05 319.635 li
cp
857.216 317.051 mo
862.05 317.051 li
862.05 321.885 li
857.216 321.885 li
857.216 317.051 li
cp
858.382 318.385 mo
863.216 318.385 li
863.216 323.218 li
858.382 323.218 li
858.382 318.385 li
cp
857.966 320.801 mo
862.8 320.801 li
862.8 325.635 li
857.966 325.635 li
857.966 320.801 li
cp
857.466 320.135 mo
862.3 320.135 li
862.3 324.968 li
857.466 324.968 li
857.466 320.135 li
cp
856.55 320.385 mo
861.382 320.385 li
861.382 325.218 li
856.55 325.218 li
856.55 320.385 li
cp
854.882 320.635 mo
859.716 320.635 li
859.716 325.468 li
854.882 325.468 li
854.882 320.635 li
cp
854.966 320.635 mo
859.8 320.635 li
859.8 325.468 li
854.966 325.468 li
854.966 320.635 li
cp
863.882 319.301 mo
868.716 319.301 li
868.716 324.135 li
863.882 324.135 li
863.882 319.301 li
cp
875.716 315.551 mo
880.55 315.551 li
880.55 320.385 li
875.716 320.385 li
875.716 315.551 li
cp
871.382 279.218 mo
876.216 279.218 li
876.216 284.051 li
871.382 284.051 li
871.382 279.218 li
cp
858.632 310.801 mo
863.466 310.801 li
863.466 315.635 li
858.632 315.635 li
858.632 310.801 li
cp
859.55 320.051 mo
864.382 320.051 li
864.382 324.885 li
859.55 324.885 li
859.55 320.051 li
cp
859.966 319.635 mo
864.8 319.635 li
864.8 324.468 li
859.966 324.468 li
859.966 319.635 li
cp
858.132 319.968 mo
862.966 319.968 li
862.966 324.801 li
858.132 324.801 li
858.132 319.968 li
cp
859.466 238.385 mo
864.3 238.385 li
864.3 243.218 li
859.466 243.218 li
859.466 238.385 li
cp
854.632 263.301 mo
859.466 263.301 li
859.466 268.135 li
854.632 268.135 li
854.632 263.301 li
cp
856.632 262.551 mo
861.466 262.551 li
861.466 267.385 li
856.632 267.385 li
856.632 262.551 li
cp
852.716 257.468 mo
857.55 257.468 li
857.55 262.301 li
852.716 262.301 li
852.716 257.468 li
cp
857.216 261.468 mo
862.05 261.468 li
862.05 266.301 li
857.216 266.301 li
857.216 261.468 li
cp
851.8 260.635 mo
856.632 260.635 li
856.632 265.468 li
851.8 265.468 li
851.8 260.635 li
cp
856.382 323.135 mo
861.216 323.135 li
861.216 327.968 li
856.382 327.968 li
856.382 323.135 li
cp
858.382 316.968 mo
863.216 316.968 li
863.216 321.801 li
858.382 321.801 li
858.382 316.968 li
cp
859.3 322.885 mo
864.132 322.885 li
864.132 327.718 li
859.3 327.718 li
859.3 322.885 li
cp
858.382 324.218 mo
863.216 324.218 li
863.216 329.051 li
858.382 329.051 li
858.382 324.218 li
cp
842.466 331.551 mo
847.3 331.551 li
847.3 336.385 li
842.466 336.385 li
842.466 331.551 li
cp
851.466 303.218 mo
856.3 303.218 li
856.3 308.051 li
851.466 308.051 li
851.466 303.218 li
cp
852.632 304.385 mo
857.466 304.385 li
857.466 309.218 li
852.632 309.218 li
852.632 304.385 li
cp
851.132 300.551 mo
855.966 300.551 li
855.966 305.385 li
851.132 305.385 li
851.132 300.551 li
cp
850.05 306.135 mo
854.882 306.135 li
854.882 310.968 li
850.05 310.968 li
850.05 306.135 li
cp
857.716 315.885 mo
862.55 315.885 li
862.55 320.718 li
857.716 320.718 li
857.716 315.885 li
cp
858.8 321.135 mo
863.632 321.135 li
863.632 325.968 li
858.8 325.968 li
858.8 321.135 li
cp
859.382 321.551 mo
864.216 321.551 li
864.216 326.385 li
859.382 326.385 li
859.382 321.551 li
cp
859.05 320.885 mo
863.882 320.885 li
863.882 325.718 li
859.05 325.718 li
859.05 320.885 li
cp
859.05 320.468 mo
863.882 320.468 li
863.882 325.301 li
859.05 325.301 li
859.05 320.468 li
cp
860.05 314.801 mo
864.882 314.801 li
864.882 319.635 li
860.05 319.635 li
860.05 314.801 li
cp
860.05 317.885 mo
864.882 317.885 li
864.882 322.718 li
860.05 322.718 li
860.05 317.885 li
cp
859.382 315.468 mo
864.216 315.468 li
864.216 320.301 li
859.382 320.301 li
859.382 315.468 li
cp
859.05 316.135 mo
863.882 316.135 li
863.882 320.968 li
859.05 320.968 li
859.05 316.135 li
cp
860.216 327.968 mo
865.05 327.968 li
865.05 332.801 li
860.216 332.801 li
860.216 327.968 li
cp
860.716 322.968 mo
865.55 322.968 li
865.55 327.801 li
860.716 327.801 li
860.716 322.968 li
cp
858.882 319.718 mo
863.716 319.718 li
863.716 324.551 li
858.882 324.551 li
858.882 319.718 li
cp
858.966 319.718 mo
863.8 319.718 li
863.8 324.551 li
858.966 324.551 li
858.966 319.718 li
cp
859.382 319.718 mo
864.216 319.718 li
864.216 324.551 li
859.382 324.551 li
859.382 319.718 li
cp
856.05 312.051 mo
860.882 312.051 li
860.882 316.885 li
856.05 316.885 li
856.05 312.052 li
856.05 312.051 li
cp
860.05 317.801 mo
864.882 317.801 li
864.882 322.635 li
860.05 322.635 li
860.05 317.801 li
cp
858.05 312.135 mo
862.882 312.135 li
862.882 316.968 li
858.05 316.968 li
858.05 312.135 li
cp
872.716 148.218 mo
877.55 148.218 li
877.55 153.051 li
872.716 153.051 li
872.716 148.218 li
cp
870.466 35.2178 mo
875.3 35.2178 li
875.3 40.0513 li
870.466 40.0513 li
870.466 35.2178 li
cp
879.882 143.635 mo
884.715 143.635 li
884.715 148.468 li
879.882 148.468 li
879.882 143.635 li
cp
884.632 239.635 mo
889.465 239.635 li
889.465 244.468 li
884.632 244.468 li
884.632 239.635 li
cp
866.632 317.051 mo
871.466 317.051 li
871.466 321.885 li
866.632 321.885 li
866.632 317.051 li
cp
863.55 317.635 mo
868.382 317.635 li
868.382 322.468 li
863.55 322.468 li
863.55 317.635 li
cp
862.8 289.635 mo
867.632 289.635 li
867.632 294.468 li
862.8 294.468 li
862.8 289.635 li
cp
862.132 290.468 mo
866.966 290.468 li
866.966 295.301 li
862.132 295.301 li
862.132 290.468 li
cp
859.466 305.301 mo
864.3 305.301 li
864.3 310.135 li
859.466 310.135 li
859.466 305.301 li
cp
861.466 307.051 mo
866.3 307.051 li
866.3 311.885 li
861.466 311.885 li
861.466 307.051 li
cp
863.466 297.468 mo
868.3 297.468 li
868.3 302.301 li
863.466 302.301 li
863.466 297.468 li
cp
861.882 293.385 mo
866.716 293.385 li
866.716 298.218 li
861.882 298.218 li
861.882 293.385 li
cp
860.716 319.635 mo
865.55 319.635 li
865.55 324.468 li
860.716 324.468 li
860.716 319.635 li
cp
858.716 319.551 mo
863.55 319.551 li
863.55 324.385 li
858.716 324.385 li
858.716 319.551 li
cp
857.382 318.051 mo
862.216 318.051 li
862.216 322.885 li
857.382 322.885 li
857.382 318.051 li
cp
858.382 319.885 mo
863.216 319.885 li
863.216 324.718 li
858.382 324.718 li
858.382 319.885 li
cp
858.05 319.885 mo
862.882 319.885 li
862.882 324.718 li
858.05 324.718 li
858.05 319.885 li
cp
857.882 319.635 mo
862.716 319.635 li
862.716 324.468 li
857.882 324.468 li
857.882 319.635 li
cp
857.632 319.551 mo
862.466 319.551 li
862.466 324.385 li
857.632 324.385 li
857.632 319.551 li
cp
857.966 301.968 mo
862.8 301.968 li
862.8 306.801 li
857.966 306.801 li
857.966 301.968 li
cp
857.966 298.885 mo
862.8 298.885 li
862.8 303.718 li
857.966 303.718 li
857.966 298.885 li
cp
857.966 309.718 mo
862.8 309.718 li
862.8 314.551 li
857.966 314.551 li
857.966 309.718 li
cp
857.966 274.301 mo
862.8 274.301 li
862.8 279.135 li
857.966 279.135 li
857.966 274.301 li
cp
857.966 315.051 mo
862.8 315.051 li
862.8 319.885 li
857.966 319.885 li
857.966 315.052 li
857.966 315.051 li
cp
859.05 319.968 mo
863.882 319.968 li
863.882 324.801 li
859.05 324.801 li
859.05 319.968 li
cp
858.05 319.885 mo
862.882 319.885 li
862.882 324.718 li
858.05 324.718 li
858.05 319.885 li
cp
858.466 320.051 mo
863.3 320.051 li
863.3 324.885 li
858.466 324.885 li
858.466 320.051 li
cp
858.466 319.718 mo
863.3 319.718 li
863.3 324.551 li
858.466 324.551 li
858.466 319.718 li
cp
857.132 306.885 mo
861.966 306.885 li
861.966 311.718 li
857.132 311.718 li
857.132 306.885 li
cp
857.966 319.801 mo
862.8 319.801 li
862.8 324.635 li
857.966 324.635 li
857.966 319.801 li
cp
857.966 319.301 mo
862.8 319.301 li
862.8 324.135 li
857.966 324.135 li
857.966 319.301 li
cp
857.966 306.801 mo
862.8 306.801 li
862.8 311.635 li
857.966 311.635 li
857.966 306.801 li
cp
858.216 310.635 mo
863.05 310.635 li
863.05 315.468 li
858.216 315.468 li
858.216 310.635 li
cp
861.8 249.468 mo
866.632 249.468 li
866.632 254.301 li
861.8 254.301 li
861.8 249.468 li
cp
861.382 245.051 mo
866.216 245.051 li
866.216 249.885 li
861.382 249.885 li
861.382 245.051 li
cp
862.55 277.801 mo
867.382 277.801 li
867.382 282.635 li
862.55 282.635 li
862.55 277.801 li
cp
862.882 299.551 mo
867.716 299.551 li
867.716 304.385 li
862.882 304.385 li
862.882 299.551 li
cp
854.382 326.301 mo
859.216 326.301 li
859.216 331.135 li
854.382 331.135 li
854.382 326.301 li
cp
856.716 328.885 mo
861.55 328.885 li
861.55 333.718 li
856.716 333.718 li
856.716 328.885 li
cp
859.05 322.885 mo
863.882 322.885 li
863.882 327.718 li
859.05 327.718 li
859.05 322.885 li
cp
858.466 324.801 mo
863.3 324.801 li
863.3 329.635 li
858.466 329.635 li
858.466 324.801 li
cp
863.55 319.468 mo
868.382 319.468 li
868.382 324.301 li
863.55 324.301 li
863.55 319.468 li
cp
860.216 319.968 mo
865.05 319.968 li
865.05 324.801 li
860.216 324.801 li
860.216 319.968 li
cp
859.632 320.218 mo
864.466 320.218 li
864.466 325.051 li
859.632 325.051 li
859.632 320.218 li
cp
859.466 319.885 mo
864.3 319.885 li
864.3 324.718 li
859.466 324.718 li
859.466 319.885 li
cp
859.382 325.718 mo
864.216 325.718 li
864.216 330.551 li
859.382 330.551 li
859.382 325.718 li
cp
886.215 290.301 mo
891.05 290.301 li
891.05 295.135 li
886.215 295.135 li
886.215 290.301 li
cp
973.8 271.635 mo
978.632 271.635 li
978.632 276.468 li
973.8 276.468 li
973.8 271.635 li
cp
955.966 269.718 mo
960.8 269.718 li
960.8 274.551 li
955.966 274.551 li
955.966 269.718 li
cp
939.466 272.301 mo
944.3 272.301 li
944.3 277.135 li
939.466 277.135 li
939.466 272.301 li
cp
912.05 253.551 mo
916.882 253.551 li
916.882 258.385 li
912.05 258.385 li
912.05 253.551 li
cp
857.55 317.968 mo
862.382 317.968 li
862.382 322.801 li
857.55 322.801 li
857.55 317.968 li
cp
858.55 316.718 mo
863.382 316.718 li
863.382 321.551 li
858.55 321.551 li
858.55 316.718 li
cp
857.05 314.135 mo
861.882 314.135 li
861.882 318.968 li
857.05 318.968 li
857.05 314.135 li
cp
858.632 313.718 mo
863.466 313.718 li
863.466 318.551 li
858.632 318.551 li
858.632 313.718 li
cp
854.216 314.635 mo
859.05 314.635 li
859.05 319.468 li
854.216 319.468 li
854.216 314.635 li
cp
854.05 315.635 mo
858.882 315.635 li
858.882 320.468 li
854.05 320.468 li
854.05 315.635 li
cp
855.466 316.551 mo
860.3 316.551 li
860.3 321.385 li
855.466 321.385 li
855.466 316.551 li
cp
853.966 314.635 mo
858.8 314.635 li
858.8 319.468 li
853.966 319.468 li
853.966 314.635 li
cp
852.05 314.635 mo
856.882 314.635 li
856.882 319.468 li
852.05 319.468 li
852.05 314.635 li
cp
856.132 305.551 mo
860.966 305.551 li
860.966 310.385 li
856.132 310.385 li
856.132 305.551 li
cp
856.966 308.468 mo
861.8 308.468 li
861.8 313.301 li
856.966 313.301 li
856.966 308.468 li
cp
858.05 319.385 mo
862.882 319.385 li
862.882 324.218 li
858.05 324.218 li
858.05 319.385 li
cp
858.216 319.218 mo
863.05 319.218 li
863.05 324.051 li
858.216 324.051 li
858.216 319.218 li
cp
858.05 319.301 mo
862.882 319.301 li
862.882 324.135 li
858.05 324.135 li
858.05 319.301 li
cp
858.05 319.385 mo
862.882 319.385 li
862.882 324.218 li
858.05 324.218 li
858.05 319.385 li
cp
858.132 319.468 mo
862.966 319.468 li
862.966 324.301 li
858.132 324.301 li
858.132 319.468 li
cp
857.216 320.051 mo
862.05 320.051 li
862.05 324.885 li
857.216 324.885 li
857.216 320.051 li
cp
857.132 353.885 mo
861.966 353.885 li
861.966 358.718 li
857.132 358.718 li
857.132 353.885 li
cp
861.632 320.718 mo
866.466 320.718 li
866.466 325.551 li
861.632 325.551 li
861.632 320.718 li
cp
861.3 320.051 mo
866.132 320.051 li
866.132 324.885 li
861.3 324.885 li
861.3 320.051 li
cp
858.3 316.135 mo
863.132 316.135 li
863.132 320.968 li
858.3 320.968 li
858.3 316.135 li
cp
858.132 309.801 mo
862.966 309.801 li
862.966 314.635 li
858.132 314.635 li
858.132 309.801 li
cp
857.966 316.385 mo
862.8 316.385 li
862.8 321.218 li
857.966 321.218 li
857.966 316.385 li
cp
857.882 316.635 mo
862.716 316.635 li
862.716 321.468 li
857.882 321.468 li
857.882 316.635 li
cp
857.966 315.885 mo
862.8 315.885 li
862.8 320.718 li
857.966 320.718 li
857.966 315.885 li
cp
857.966 287.551 mo
862.8 287.551 li
862.8 292.385 li
857.966 292.385 li
857.966 287.551 li
cp
858.3 290.635 mo
863.132 290.635 li
863.132 295.468 li
858.3 295.468 li
858.3 290.635 li
cp
857.966 294.135 mo
862.8 294.135 li
862.8 298.968 li
857.966 298.968 li
857.966 294.135 li
cp
857.8 280.051 mo
862.632 280.051 li
862.632 284.885 li
857.8 284.885 li
857.8 280.051 li
cp
857.216 319.801 mo
862.05 319.801 li
862.05 324.635 li
857.216 324.635 li
857.216 319.801 li
cp
856.716 319.885 mo
861.55 319.885 li
861.55 324.718 li
856.716 324.718 li
856.716 319.885 li
cp
855.882 319.801 mo
860.716 319.801 li
860.716 324.635 li
855.882 324.635 li
855.882 319.801 li
cp
855.632 319.801 mo
860.466 319.801 li
860.466 324.635 li
855.632 324.635 li
855.632 319.801 li
cp
820.382 259.718 mo
825.216 259.718 li
825.216 264.551 li
820.382 264.551 li
820.382 259.718 li
cp
846.632 238.385 mo
851.466 238.385 li
851.466 243.218 li
846.632 243.218 li
846.632 238.385 li
cp
779.05 275.801 mo
783.882 275.801 li
783.882 280.635 li
779.05 280.635 li
779.05 275.801 li
cp
830.05 234.468 mo
834.882 234.468 li
834.882 239.301 li
830.05 239.301 li
830.05 234.468 li
cp
837.882 204.385 mo
842.716 204.385 li
842.716 209.218 li
837.882 209.218 li
837.882 204.385 li
cp
818.3 166.385 mo
823.132 166.385 li
823.132 171.218 li
818.3 171.218 li
818.3 166.385 li
cp
848.466 206.218 mo
853.3 206.218 li
853.3 211.051 li
848.466 211.051 li
848.466 206.218 li
cp
818.716 209.385 mo
823.55 209.385 li
823.55 214.218 li
818.716 214.218 li
818.716 209.385 li
cp
826.966 184.801 mo
831.8 184.801 li
831.8 189.635 li
826.966 189.635 li
826.966 184.801 li
cp
843.132 263.468 mo
847.966 263.468 li
847.966 268.301 li
843.132 268.301 li
843.132 263.468 li
cp
855.882 231.635 mo
860.716 231.635 li
860.716 236.468 li
855.882 236.468 li
855.882 231.635 li
cp
855.132 162.385 mo
859.966 162.385 li
859.966 167.218 li
855.132 167.218 li
855.132 162.385 li
cp
858.05 265.885 mo
862.882 265.885 li
862.882 270.718 li
858.05 270.718 li
858.05 265.885 li
cp
844.882 271.301 mo
849.716 271.301 li
849.716 276.135 li
844.882 276.135 li
844.882 271.301 li
cp
831.8 251.468 mo
836.632 251.468 li
836.632 256.301 li
831.8 256.301 li
831.8 251.468 li
cp
853.716 180.801 mo
858.55 180.801 li
858.55 185.635 li
853.716 185.635 li
853.716 180.801 li
cp
857.882 158.551 mo
862.716 158.551 li
862.716 163.385 li
857.882 163.385 li
857.882 158.551 li
cp
858.132 191.468 mo
862.966 191.468 li
862.966 196.301 li
858.132 196.301 li
858.132 191.468 li
cp
832.632 173.385 mo
837.466 173.385 li
837.466 178.218 li
832.632 178.218 li
832.632 173.385 li
cp
831.55 230.218 mo
836.382 230.218 li
836.382 235.051 li
831.55 235.051 li
831.55 230.218 li
cp
857.3 180.301 mo
862.132 180.301 li
862.132 185.135 li
857.3 185.135 li
857.3 180.301 li
cp
842.55 206.135 mo
847.382 206.135 li
847.382 210.968 li
842.55 210.968 li
842.55 206.135 li
cp
848.966 195.385 mo
853.8 195.385 li
853.8 200.218 li
848.966 200.218 li
848.966 195.385 li
cp
849.966 255.801 mo
854.8 255.801 li
854.8 260.635 li
849.966 260.635 li
849.966 255.801 li
cp
858.3 241.635 mo
863.132 241.635 li
863.132 246.468 li
858.3 246.468 li
858.3 241.635 li
cp
857.632 207.051 mo
862.466 207.051 li
862.466 211.885 li
857.632 211.885 li
857.632 207.051 li
cp
846.216 224.218 mo
851.05 224.218 li
851.05 229.051 li
846.216 229.051 li
846.216 224.218 li
cp
847.382 196.551 mo
852.216 196.551 li
852.216 201.385 li
847.382 201.385 li
847.382 196.551 li
cp
835.466 157.885 mo
840.3 157.885 li
840.3 162.718 li
835.466 162.718 li
835.466 157.885 li
cp
842.382 264.968 mo
847.216 264.968 li
847.216 269.801 li
842.382 269.801 li
842.382 264.968 li
cp
804.716 252.801 mo
809.55 252.801 li
809.55 257.635 li
804.716 257.635 li
804.716 252.801 li
cp
837.8 211.301 mo
842.632 211.301 li
842.632 216.135 li
837.8 216.135 li
837.8 211.301 li
cp
847.05 244.301 mo
851.882 244.301 li
851.882 249.135 li
847.05 249.135 li
847.05 244.301 li
cp
856.05 213.468 mo
860.882 213.468 li
860.882 218.301 li
856.05 218.301 li
856.05 213.468 li
cp
854.466 237.135 mo
859.3 237.135 li
859.3 241.968 li
854.466 241.968 li
854.466 237.135 li
cp
844.966 161.301 mo
849.8 161.301 li
849.8 166.135 li
844.966 166.135 li
844.966 161.301 li
cp
856.216 221.218 mo
861.05 221.218 li
861.05 226.051 li
856.216 226.051 li
856.216 221.218 li
cp
844.8 171.635 mo
849.632 171.635 li
849.632 176.468 li
844.8 176.468 li
844.8 171.635 li
cp
844.55 174.051 mo
849.382 174.051 li
849.382 178.885 li
844.55 178.885 li
844.55 174.051 li
cp
852.05 206.551 mo
856.882 206.551 li
856.882 211.385 li
852.05 211.385 li
852.05 206.551 li
cp
856.466 216.968 mo
861.3 216.968 li
861.3 221.801 li
856.466 221.801 li
856.466 216.968 li
cp
810.55 252.135 mo
815.382 252.135 li
815.382 256.968 li
810.55 256.968 li
810.55 252.135 li
cp
763.466 163.468 mo
768.3 163.468 li
768.3 168.301 li
763.466 168.301 li
763.466 163.468 li
cp
857.966 254.468 mo
862.8 254.468 li
862.8 259.301 li
857.966 259.301 li
857.966 254.468 li
cp
858.632 256.635 mo
863.466 256.635 li
863.466 261.468 li
858.632 261.468 li
858.632 256.635 li
cp
855.882 243.968 mo
860.716 243.968 li
860.716 248.801 li
855.882 248.801 li
855.882 243.968 li
cp
860.632 303.468 mo
865.466 303.468 li
865.466 308.301 li
860.632 308.301 li
860.632 303.468 li
cp
0 0 0 .5 cmyk
f
858.05 320.135 mo
858.05 320.635 li
862.382 320.635 li
862.382 324.468 li
858.55 324.468 li
858.55 320.135 li
858.05 320.135 li
858.05 320.635 li
858.05 320.135 li
857.55 320.135 li
857.55 325.468 li
863.382 325.468 li
863.382 319.635 li
857.55 319.635 li
857.55 320.135 li
858.05 320.135 li
cp
858.55 320.385 mo
858.55 320.885 li
862.882 320.885 li
862.882 324.718 li
859.05 324.718 li
859.05 320.385 li
858.55 320.385 li
858.55 320.885 li
858.55 320.385 li
858.05 320.385 li
858.05 325.718 li
863.882 325.718 li
863.882 319.885 li
858.05 319.885 li
858.05 320.385 li
858.55 320.385 li
cp
858.05 320.301 mo
858.05 320.801 li
862.382 320.801 li
862.382 324.635 li
858.55 324.635 li
858.55 320.301 li
858.05 320.301 li
858.05 320.801 li
858.05 320.301 li
857.55 320.301 li
857.55 325.635 li
863.382 325.635 li
863.382 319.801 li
857.55 319.801 li
857.55 320.301 li
858.05 320.301 li
cp
858.216 320.385 mo
858.216 320.885 li
862.55 320.885 li
862.55 324.718 li
858.716 324.718 li
858.716 320.385 li
858.216 320.385 li
858.216 320.885 li
858.216 320.385 li
857.716 320.385 li
857.716 325.718 li
863.55 325.718 li
863.55 319.885 li
857.716 319.885 li
857.716 320.385 li
858.216 320.385 li
cp
858.132 320.385 mo
858.132 320.885 li
862.466 320.885 li
862.466 324.718 li
858.632 324.718 li
858.632 320.385 li
858.132 320.385 li
858.132 320.885 li
858.132 320.385 li
857.632 320.385 li
857.632 325.718 li
863.466 325.718 li
863.466 319.885 li
857.632 319.885 li
857.632 320.385 li
858.132 320.385 li
cp
860.966 325.885 mo
860.966 326.385 li
865.3 326.385 li
865.3 330.218 li
861.466 330.218 li
861.466 325.885 li
860.966 325.885 li
860.966 326.385 li
860.966 325.885 li
860.466 325.885 li
860.466 331.218 li
866.3 331.218 li
866.3 325.385 li
860.466 325.385 li
860.466 325.885 li
860.966 325.885 li
cp
861.05 323.135 mo
861.05 323.635 li
865.382 323.635 li
865.382 327.468 li
861.55 327.468 li
861.55 323.135 li
861.05 323.135 li
861.05 323.635 li
861.05 323.135 li
860.55 323.135 li
860.55 328.468 li
866.382 328.468 li
866.382 322.635 li
860.55 322.635 li
860.55 323.135 li
861.05 323.135 li
cp
859.966 322.885 mo
859.966 323.385 li
864.3 323.385 li
864.3 327.218 li
860.466 327.218 li
860.466 322.885 li
859.966 322.885 li
859.966 323.385 li
859.966 322.885 li
859.466 322.885 li
859.466 328.218 li
865.3 328.218 li
865.3 322.385 li
859.466 322.385 li
859.466 322.885 li
859.966 322.885 li
cp
860.716 323.385 mo
860.716 323.885 li
865.05 323.885 li
865.05 327.718 li
861.216 327.718 li
861.216 323.385 li
860.716 323.385 li
860.716 323.885 li
860.716 323.385 li
860.216 323.385 li
860.216 328.718 li
866.05 328.718 li
866.05 322.885 li
860.216 322.885 li
860.216 323.385 li
860.716 323.385 li
cp
860.216 329.551 mo
860.216 330.051 li
864.55 330.051 li
864.55 333.885 li
860.716 333.885 li
860.716 329.551 li
860.216 329.551 li
860.216 330.051 li
860.216 329.551 li
859.716 329.551 li
859.716 334.885 li
865.55 334.885 li
865.55 329.051 li
859.716 329.051 li
859.716 329.551 li
860.216 329.551 li
cp
857.966 319.885 mo
857.966 320.385 li
862.3 320.385 li
862.3 324.218 li
858.466 324.218 li
858.466 319.885 li
857.966 319.885 li
857.966 320.385 li
857.966 319.885 li
857.466 319.885 li
857.466 325.218 li
863.3 325.218 li
863.3 319.385 li
857.466 319.385 li
857.466 319.885 li
857.966 319.885 li
cp
857.966 320.051 mo
857.966 320.551 li
862.3 320.551 li
862.3 324.385 li
858.466 324.385 li
858.466 320.051 li
857.966 320.051 li
857.966 320.551 li
857.966 320.051 li
857.466 320.051 li
857.466 325.385 li
863.3 325.385 li
863.3 319.551 li
857.466 319.551 li
857.466 320.051 li
857.966 320.051 li
cp
857.966 319.801 mo
857.966 320.301 li
862.3 320.301 li
862.3 324.135 li
858.466 324.135 li
858.466 319.801 li
857.966 319.801 li
857.966 320.301 li
857.966 319.801 li
857.466 319.801 li
857.466 325.135 li
863.3 325.135 li
863.3 319.301 li
857.466 319.301 li
857.466 319.801 li
857.966 319.801 li
cp
858.05 319.885 mo
858.05 320.385 li
862.382 320.385 li
862.382 324.218 li
858.55 324.218 li
858.55 319.885 li
858.05 319.885 li
858.05 320.385 li
858.05 319.885 li
857.55 319.885 li
857.55 325.218 li
863.382 325.218 li
863.382 319.385 li
857.55 319.385 li
857.55 319.885 li
858.05 319.885 li
cp
852.132 319.718 mo
852.132 320.218 li
856.466 320.218 li
856.466 324.051 li
852.632 324.051 li
852.632 319.718 li
852.132 319.718 li
852.132 320.218 li
852.132 319.718 li
851.632 319.718 li
851.632 325.051 li
857.466 325.051 li
857.466 319.218 li
851.632 319.218 li
851.632 319.718 li
852.132 319.718 li
cp
859.3 317.718 mo
859.3 318.218 li
863.632 318.218 li
863.632 322.051 li
859.8 322.051 li
859.8 317.718 li
859.3 317.718 li
859.3 318.218 li
859.3 317.718 li
858.8 317.718 li
858.8 323.051 li
864.632 323.051 li
864.632 317.218 li
858.8 317.218 li
858.8 317.718 li
859.3 317.718 li
cp
860.382 320.635 mo
860.382 321.135 li
864.716 321.135 li
864.716 324.968 li
860.882 324.968 li
860.882 320.635 li
860.382 320.635 li
860.382 321.135 li
860.382 320.635 li
859.882 320.635 li
859.882 325.968 li
865.716 325.968 li
865.716 320.135 li
859.882 320.135 li
859.882 320.635 li
860.382 320.635 li
cp
860.3 320.135 mo
860.3 320.635 li
864.632 320.635 li
864.632 324.468 li
860.8 324.468 li
860.8 320.135 li
860.3 320.135 li
860.3 320.635 li
860.3 320.135 li
859.8 320.135 li
859.8 325.468 li
865.632 325.468 li
865.632 319.635 li
859.8 319.635 li
859.8 320.135 li
860.3 320.135 li
cp
860.55 321.885 mo
860.55 322.385 li
864.882 322.385 li
864.882 326.218 li
861.05 326.218 li
861.05 321.885 li
860.55 321.885 li
860.55 322.385 li
860.55 321.885 li
860.05 321.885 li
860.05 327.218 li
865.882 327.218 li
865.882 321.385 li
860.05 321.385 li
860.05 321.885 li
860.55 321.885 li
cp
860.216 319.551 mo
860.216 320.051 li
864.55 320.051 li
864.55 323.885 li
860.716 323.885 li
860.716 319.551 li
860.216 319.551 li
860.216 320.051 li
860.216 319.551 li
859.716 319.551 li
859.716 324.885 li
865.55 324.885 li
865.55 319.051 li
859.716 319.051 li
859.716 319.551 li
860.216 319.551 li
cp
860.132 320.718 mo
860.132 321.218 li
864.466 321.218 li
864.466 325.051 li
860.632 325.051 li
860.632 320.718 li
860.132 320.718 li
860.132 321.218 li
860.132 320.718 li
859.632 320.718 li
859.632 326.051 li
865.466 326.051 li
865.466 320.218 li
859.632 320.218 li
859.632 320.718 li
860.132 320.718 li
cp
859.632 320.801 mo
859.632 321.301 li
863.966 321.301 li
863.966 325.135 li
860.132 325.135 li
860.132 320.801 li
859.632 320.801 li
859.632 321.301 li
859.632 320.801 li
859.132 320.801 li
859.132 326.135 li
864.966 326.135 li
864.966 320.301 li
859.132 320.301 li
859.132 320.801 li
859.632 320.801 li
cp
859.05 319.635 mo
859.05 320.135 li
863.382 320.135 li
863.382 323.968 li
859.55 323.968 li
859.55 319.635 li
859.05 319.635 li
859.05 320.135 li
859.05 319.635 li
858.55 319.635 li
858.55 324.968 li
864.382 324.968 li
864.382 319.135 li
858.55 319.135 li
858.55 319.635 li
859.05 319.635 li
cp
857.216 317.051 mo
857.216 317.551 li
861.55 317.551 li
861.55 321.385 li
857.716 321.385 li
857.716 317.051 li
857.216 317.051 li
857.216 317.551 li
857.216 317.051 li
856.716 317.051 li
856.716 322.385 li
862.55 322.385 li
862.55 316.551 li
856.716 316.551 li
856.716 317.051 li
857.216 317.051 li
cp
858.382 318.385 mo
858.382 318.885 li
862.716 318.885 li
862.716 322.718 li
858.882 322.718 li
858.882 318.385 li
858.382 318.385 li
858.382 318.885 li
858.382 318.385 li
857.882 318.385 li
857.882 323.718 li
863.716 323.718 li
863.716 317.885 li
857.882 317.885 li
857.882 318.385 li
858.382 318.385 li
cp
857.966 320.801 mo
857.966 321.301 li
862.3 321.301 li
862.3 325.135 li
858.466 325.135 li
858.466 320.801 li
857.966 320.801 li
857.966 321.301 li
857.966 320.801 li
857.466 320.801 li
857.466 326.135 li
863.3 326.135 li
863.3 320.301 li
857.466 320.301 li
857.466 320.801 li
857.966 320.801 li
cp
857.466 320.135 mo
857.466 320.635 li
861.8 320.635 li
861.8 324.468 li
857.966 324.468 li
857.966 320.135 li
857.466 320.135 li
857.466 320.635 li
857.466 320.135 li
856.966 320.135 li
856.966 325.468 li
862.8 325.468 li
862.8 319.635 li
856.966 319.635 li
856.966 320.135 li
857.466 320.135 li
cp
856.55 320.385 mo
856.55 320.885 li
860.882 320.885 li
860.882 324.718 li
857.05 324.718 li
857.05 320.385 li
856.55 320.385 li
856.55 320.885 li
856.55 320.385 li
856.05 320.385 li
856.05 325.718 li
861.882 325.718 li
861.882 319.885 li
856.05 319.885 li
856.05 320.385 li
856.55 320.385 li
cp
854.882 320.635 mo
854.882 321.135 li
859.216 321.135 li
859.216 324.968 li
855.382 324.968 li
855.382 320.635 li
854.882 320.635 li
854.882 321.135 li
854.882 320.635 li
854.382 320.635 li
854.382 325.968 li
860.216 325.968 li
860.216 320.135 li
854.382 320.135 li
854.382 320.635 li
854.882 320.635 li
cp
854.966 320.635 mo
854.966 321.135 li
859.3 321.135 li
859.3 324.968 li
855.466 324.968 li
855.466 320.635 li
854.966 320.635 li
854.966 321.135 li
854.966 320.635 li
854.466 320.635 li
854.466 325.968 li
860.3 325.968 li
860.3 320.135 li
854.466 320.135 li
854.466 320.635 li
854.966 320.635 li
cp
863.882 319.301 mo
863.882 319.801 li
868.216 319.801 li
868.216 323.635 li
864.382 323.635 li
864.382 319.301 li
863.882 319.301 li
863.882 319.801 li
863.882 319.301 li
863.382 319.301 li
863.382 324.635 li
869.216 324.635 li
869.216 318.801 li
863.382 318.801 li
863.382 319.301 li
863.882 319.301 li
cp
875.716 315.551 mo
875.716 316.051 li
880.05 316.051 li
880.05 319.885 li
876.216 319.885 li
876.216 315.551 li
875.716 315.551 li
875.716 316.051 li
875.716 315.551 li
875.216 315.551 li
875.216 320.885 li
881.05 320.885 li
881.05 315.051 li
875.216 315.051 li
875.216 315.551 li
875.716 315.551 li
cp
871.382 279.218 mo
871.382 279.718 li
875.716 279.718 li
875.716 283.551 li
871.882 283.551 li
871.882 279.218 li
871.382 279.218 li
871.382 279.718 li
871.382 279.218 li
870.882 279.218 li
870.882 284.551 li
876.716 284.551 li
876.716 278.718 li
870.882 278.718 li
870.882 279.218 li
871.382 279.218 li
cp
858.632 310.801 mo
858.632 311.301 li
862.966 311.301 li
862.966 315.135 li
859.132 315.135 li
859.132 310.801 li
858.632 310.801 li
858.632 311.301 li
858.632 310.801 li
858.132 310.801 li
858.132 316.135 li
863.966 316.135 li
863.966 310.301 li
858.132 310.301 li
858.132 310.801 li
858.632 310.801 li
cp
859.55 320.051 mo
859.55 320.551 li
863.882 320.551 li
863.882 324.385 li
860.05 324.385 li
860.05 320.051 li
859.55 320.051 li
859.55 320.551 li
859.55 320.051 li
859.05 320.051 li
859.05 325.385 li
864.882 325.385 li
864.882 319.551 li
859.05 319.551 li
859.05 320.051 li
859.55 320.051 li
cp
859.966 319.635 mo
859.966 320.135 li
864.3 320.135 li
864.3 323.968 li
860.466 323.968 li
860.466 319.635 li
859.966 319.635 li
859.966 320.135 li
859.966 319.635 li
859.466 319.635 li
859.466 324.968 li
865.3 324.968 li
865.3 319.135 li
859.466 319.135 li
859.466 319.635 li
859.966 319.635 li
cp
858.132 319.968 mo
858.132 320.468 li
862.466 320.468 li
862.466 324.301 li
858.632 324.301 li
858.632 319.968 li
858.132 319.968 li
858.132 320.468 li
858.132 319.968 li
857.632 319.968 li
857.632 325.301 li
863.466 325.301 li
863.466 319.468 li
857.632 319.468 li
857.632 319.968 li
858.132 319.968 li
cp
859.466 238.385 mo
859.466 238.885 li
863.8 238.885 li
863.8 242.718 li
859.966 242.718 li
859.966 238.385 li
859.466 238.385 li
859.466 238.885 li
859.466 238.385 li
858.966 238.385 li
858.966 243.718 li
864.8 243.718 li
864.8 237.885 li
858.966 237.885 li
858.966 238.385 li
859.466 238.385 li
cp
854.632 263.301 mo
854.632 263.801 li
858.966 263.801 li
858.966 267.635 li
855.132 267.635 li
855.132 263.301 li
854.632 263.301 li
854.632 263.801 li
854.632 263.301 li
854.132 263.301 li
854.132 268.635 li
859.966 268.635 li
859.966 262.801 li
854.132 262.801 li
854.132 263.301 li
854.632 263.301 li
cp
856.632 262.551 mo
856.632 263.051 li
860.966 263.051 li
860.966 266.885 li
857.132 266.885 li
857.132 262.551 li
856.632 262.551 li
856.632 263.051 li
856.632 262.551 li
856.132 262.551 li
856.132 267.885 li
861.966 267.885 li
861.966 262.051 li
856.132 262.051 li
856.132 262.551 li
856.632 262.551 li
cp
852.716 257.468 mo
852.716 257.968 li
857.05 257.968 li
857.05 261.801 li
853.216 261.801 li
853.216 257.468 li
852.716 257.468 li
852.716 257.968 li
852.716 257.468 li
852.216 257.468 li
852.216 262.801 li
858.05 262.801 li
858.05 256.968 li
852.216 256.968 li
852.216 257.468 li
852.716 257.468 li
cp
857.216 261.468 mo
857.216 261.968 li
861.55 261.968 li
861.55 265.801 li
857.716 265.801 li
857.716 261.468 li
857.216 261.468 li
857.216 261.968 li
857.216 261.468 li
856.716 261.468 li
856.716 266.801 li
862.55 266.801 li
862.55 260.968 li
856.716 260.968 li
856.716 261.468 li
857.216 261.468 li
cp
851.8 260.635 mo
851.8 261.135 li
856.132 261.135 li
856.132 264.968 li
852.3 264.968 li
852.3 260.635 li
851.8 260.635 li
851.8 261.135 li
851.8 260.635 li
851.3 260.635 li
851.3 265.968 li
857.132 265.968 li
857.132 260.135 li
851.3 260.135 li
851.3 260.635 li
851.8 260.635 li
cp
856.382 323.135 mo
856.382 323.635 li
860.716 323.635 li
860.716 327.468 li
856.882 327.468 li
856.882 323.135 li
856.382 323.135 li
856.382 323.635 li
856.382 323.135 li
855.882 323.135 li
855.882 328.468 li
861.716 328.468 li
861.716 322.635 li
855.882 322.635 li
855.882 323.135 li
856.382 323.135 li
cp
858.382 316.968 mo
858.382 317.468 li
862.716 317.468 li
862.716 321.301 li
858.882 321.301 li
858.882 316.968 li
858.382 316.968 li
858.382 317.468 li
858.382 316.968 li
857.882 316.968 li
857.882 322.301 li
863.716 322.301 li
863.716 316.468 li
857.882 316.468 li
857.882 316.968 li
858.382 316.968 li
cp
859.3 322.885 mo
859.3 323.385 li
863.632 323.385 li
863.632 327.218 li
859.8 327.218 li
859.8 322.885 li
859.3 322.885 li
859.3 323.385 li
859.3 322.885 li
858.8 322.885 li
858.8 328.218 li
864.632 328.218 li
864.632 322.385 li
858.8 322.385 li
858.8 322.885 li
859.3 322.885 li
cp
858.382 324.218 mo
858.382 324.718 li
862.716 324.718 li
862.716 328.551 li
858.882 328.551 li
858.882 324.218 li
858.382 324.218 li
858.382 324.718 li
858.382 324.218 li
857.882 324.218 li
857.882 329.551 li
863.716 329.551 li
863.716 323.718 li
857.882 323.718 li
857.882 324.218 li
858.382 324.218 li
cp
842.466 331.551 mo
842.466 332.051 li
846.8 332.051 li
846.8 335.885 li
842.966 335.885 li
842.966 331.551 li
842.466 331.551 li
842.466 332.051 li
842.466 331.551 li
841.966 331.551 li
841.966 336.885 li
847.8 336.885 li
847.8 331.051 li
841.966 331.051 li
841.966 331.551 li
842.466 331.551 li
cp
851.466 303.218 mo
851.466 303.718 li
855.8 303.718 li
855.8 307.551 li
851.966 307.551 li
851.966 303.218 li
851.466 303.218 li
851.466 303.718 li
851.466 303.218 li
850.966 303.218 li
850.966 308.551 li
856.8 308.551 li
856.8 302.718 li
850.966 302.718 li
850.966 303.218 li
851.466 303.218 li
cp
852.632 304.385 mo
852.632 304.885 li
856.966 304.885 li
856.966 308.718 li
853.132 308.718 li
853.132 304.385 li
852.632 304.385 li
852.632 304.885 li
852.632 304.385 li
852.132 304.385 li
852.132 309.718 li
857.966 309.718 li
857.966 303.885 li
852.132 303.885 li
852.132 304.385 li
852.632 304.385 li
cp
851.132 300.551 mo
851.132 301.051 li
855.466 301.051 li
855.466 304.885 li
851.632 304.885 li
851.632 300.551 li
851.132 300.551 li
851.132 301.051 li
851.132 300.551 li
850.632 300.551 li
850.632 305.885 li
856.466 305.885 li
856.466 300.051 li
850.632 300.051 li
850.632 300.551 li
851.132 300.551 li
cp
850.05 306.135 mo
850.05 306.635 li
854.382 306.635 li
854.382 310.468 li
850.55 310.468 li
850.55 306.135 li
850.05 306.135 li
850.05 306.635 li
850.05 306.135 li
849.55 306.135 li
849.55 311.468 li
855.382 311.468 li
855.382 305.635 li
849.55 305.635 li
849.55 306.135 li
850.05 306.135 li
cp
857.716 315.885 mo
857.716 316.385 li
862.05 316.385 li
862.05 320.218 li
858.216 320.218 li
858.216 315.885 li
857.716 315.885 li
857.716 316.385 li
857.716 315.885 li
857.216 315.885 li
857.216 321.218 li
863.05 321.218 li
863.05 315.385 li
857.216 315.385 li
857.216 315.885 li
857.716 315.885 li
cp
858.8 321.135 mo
858.8 321.635 li
863.132 321.635 li
863.132 325.468 li
859.3 325.468 li
859.3 321.135 li
858.8 321.135 li
858.8 321.635 li
858.8 321.135 li
858.3 321.135 li
858.3 326.468 li
864.132 326.468 li
864.132 320.635 li
858.3 320.635 li
858.3 321.135 li
858.8 321.135 li
cp
859.382 321.551 mo
859.382 322.051 li
863.716 322.051 li
863.716 325.885 li
859.882 325.885 li
859.882 321.551 li
859.382 321.551 li
859.382 322.051 li
859.382 321.551 li
858.882 321.551 li
858.882 326.885 li
864.716 326.885 li
864.716 321.051 li
858.882 321.051 li
858.882 321.551 li
859.382 321.551 li
cp
859.05 320.885 mo
859.05 321.385 li
863.382 321.385 li
863.382 325.218 li
859.55 325.218 li
859.55 320.885 li
859.05 320.885 li
859.05 321.385 li
859.05 320.885 li
858.55 320.885 li
858.55 326.218 li
864.382 326.218 li
864.382 320.385 li
858.55 320.385 li
858.55 320.885 li
859.05 320.885 li
cp
859.05 320.468 mo
859.05 320.968 li
863.382 320.968 li
863.382 324.801 li
859.55 324.801 li
859.55 320.468 li
859.05 320.468 li
859.05 320.968 li
859.05 320.468 li
858.55 320.468 li
858.55 325.801 li
864.382 325.801 li
864.382 319.968 li
858.55 319.968 li
858.55 320.468 li
859.05 320.468 li
cp
860.05 314.801 mo
860.05 315.301 li
864.382 315.301 li
864.382 319.135 li
860.55 319.135 li
860.55 314.801 li
860.05 314.801 li
860.05 315.301 li
860.05 314.801 li
859.55 314.801 li
859.55 320.135 li
865.382 320.135 li
865.382 314.301 li
859.55 314.301 li
859.55 314.801 li
860.05 314.801 li
cp
860.05 317.885 mo
860.05 318.385 li
864.382 318.385 li
864.382 322.218 li
860.55 322.218 li
860.55 317.885 li
860.05 317.885 li
860.05 318.385 li
860.05 317.885 li
859.55 317.885 li
859.55 323.218 li
865.382 323.218 li
865.382 317.385 li
859.55 317.385 li
859.55 317.885 li
860.05 317.885 li
cp
859.382 315.468 mo
859.382 315.968 li
863.716 315.968 li
863.716 319.801 li
859.882 319.801 li
859.882 315.468 li
859.382 315.468 li
859.382 315.968 li
859.382 315.468 li
858.882 315.468 li
858.882 320.801 li
864.716 320.801 li
864.716 314.968 li
858.882 314.968 li
858.882 315.468 li
859.382 315.468 li
cp
859.05 316.135 mo
859.05 316.635 li
863.382 316.635 li
863.382 320.468 li
859.55 320.468 li
859.55 316.135 li
859.05 316.135 li
859.05 316.635 li
859.05 316.135 li
858.55 316.135 li
858.55 321.468 li
864.382 321.468 li
864.382 315.635 li
858.55 315.635 li
858.55 316.135 li
859.05 316.135 li
cp
860.216 327.968 mo
860.216 328.468 li
864.55 328.468 li
864.55 332.301 li
860.716 332.301 li
860.716 327.968 li
860.216 327.968 li
860.216 328.468 li
860.216 327.968 li
859.716 327.968 li
859.716 333.301 li
865.55 333.301 li
865.55 327.468 li
859.716 327.468 li
859.716 327.968 li
860.216 327.968 li
cp
860.716 322.968 mo
860.716 323.468 li
865.05 323.468 li
865.05 327.301 li
861.216 327.301 li
861.216 322.968 li
860.716 322.968 li
860.716 323.468 li
860.716 322.968 li
860.216 322.968 li
860.216 328.301 li
866.05 328.301 li
866.05 322.468 li
860.216 322.468 li
860.216 322.968 li
860.716 322.968 li
cp
858.882 319.718 mo
858.882 320.218 li
863.216 320.218 li
863.216 324.051 li
859.382 324.051 li
859.382 319.718 li
858.882 319.718 li
858.882 320.218 li
858.882 319.718 li
858.382 319.718 li
858.382 325.051 li
864.216 325.051 li
864.216 319.218 li
858.382 319.218 li
858.382 319.718 li
858.882 319.718 li
cp
858.966 319.718 mo
858.966 320.218 li
863.3 320.218 li
863.3 324.051 li
859.466 324.051 li
859.466 319.718 li
858.966 319.718 li
858.966 320.218 li
858.966 319.718 li
858.466 319.718 li
858.466 325.051 li
864.3 325.051 li
864.3 319.218 li
858.466 319.218 li
858.466 319.718 li
858.966 319.718 li
cp
859.382 319.718 mo
859.382 320.218 li
863.716 320.218 li
863.716 324.051 li
859.882 324.051 li
859.882 319.718 li
859.382 319.718 li
859.382 320.218 li
859.382 319.718 li
858.882 319.718 li
858.882 325.051 li
864.716 325.051 li
864.716 319.218 li
858.882 319.218 li
858.882 319.718 li
859.382 319.718 li
cp
856.05 312.051 mo
856.05 312.551 li
860.382 312.551 li
860.382 316.385 li
856.55 316.385 li
856.55 312.052 li
856.55 312.051 li
856.05 312.051 li
856.05 312.551 li
856.05 312.051 li
855.55 312.051 li
855.55 312.052 li
855.55 317.385 li
861.382 317.385 li
861.382 311.551 li
855.55 311.551 li
855.55 312.051 li
856.05 312.051 li
cp
860.05 317.801 mo
860.05 318.301 li
864.382 318.301 li
864.382 322.135 li
860.55 322.135 li
860.55 317.801 li
860.05 317.801 li
860.05 318.301 li
860.05 317.801 li
859.55 317.801 li
859.55 323.135 li
865.382 323.135 li
865.382 317.301 li
859.55 317.301 li
859.55 317.801 li
860.05 317.801 li
cp
858.05 312.135 mo
858.05 312.635 li
862.382 312.635 li
862.382 316.468 li
858.55 316.468 li
858.55 312.135 li
858.05 312.135 li
858.05 312.635 li
858.05 312.135 li
857.55 312.135 li
857.55 317.468 li
863.382 317.468 li
863.382 311.635 li
857.55 311.635 li
857.55 312.135 li
858.05 312.135 li
cp
872.716 148.218 mo
872.716 148.718 li
877.05 148.718 li
877.05 152.551 li
873.216 152.551 li
873.216 148.218 li
872.716 148.218 li
872.716 148.718 li
872.716 148.218 li
872.216 148.218 li
872.216 153.551 li
878.05 153.551 li
878.05 147.718 li
872.216 147.718 li
872.216 148.218 li
872.716 148.218 li
cp
870.466 35.2178 mo
870.466 35.7178 li
874.8 35.7178 li
874.8 39.5513 li
870.966 39.5513 li
870.966 35.2178 li
870.466 35.2178 li
870.466 35.7178 li
870.466 35.2178 li
869.966 35.2178 li
869.966 40.5513 li
875.8 40.5513 li
875.8 34.7178 li
869.966 34.7178 li
869.966 35.2178 li
870.466 35.2178 li
cp
879.882 143.635 mo
879.882 144.135 li
884.215 144.135 li
884.215 147.968 li
880.382 147.968 li
880.382 143.635 li
879.882 143.635 li
879.882 144.135 li
879.882 143.635 li
879.382 143.635 li
879.382 148.968 li
885.215 148.968 li
885.215 143.135 li
879.382 143.135 li
879.382 143.635 li
879.882 143.635 li
cp
884.632 239.635 mo
884.632 240.135 li
888.965 240.135 li
888.965 243.968 li
885.132 243.968 li
885.132 239.635 li
884.632 239.635 li
884.632 240.135 li
884.632 239.635 li
884.132 239.635 li
884.132 244.968 li
889.965 244.968 li
889.965 239.135 li
884.132 239.135 li
884.132 239.635 li
884.632 239.635 li
cp
866.632 317.051 mo
866.632 317.551 li
870.966 317.551 li
870.966 321.385 li
867.132 321.385 li
867.132 317.051 li
866.632 317.051 li
866.632 317.551 li
866.632 317.051 li
866.132 317.051 li
866.132 322.385 li
871.966 322.385 li
871.966 316.551 li
866.132 316.551 li
866.132 317.051 li
866.632 317.051 li
cp
863.55 317.635 mo
863.55 318.135 li
867.882 318.135 li
867.882 321.968 li
864.05 321.968 li
864.05 317.635 li
863.55 317.635 li
863.55 318.135 li
863.55 317.635 li
863.05 317.635 li
863.05 322.968 li
868.882 322.968 li
868.882 317.135 li
863.05 317.135 li
863.05 317.635 li
863.55 317.635 li
cp
862.8 289.635 mo
862.8 290.135 li
867.132 290.135 li
867.132 293.968 li
863.3 293.968 li
863.3 289.635 li
862.8 289.635 li
862.8 290.135 li
862.8 289.635 li
862.3 289.635 li
862.3 294.968 li
868.132 294.968 li
868.132 289.135 li
862.3 289.135 li
862.3 289.635 li
862.8 289.635 li
cp
862.132 290.468 mo
862.132 290.968 li
866.466 290.968 li
866.466 294.801 li
862.632 294.801 li
862.632 290.468 li
862.132 290.468 li
862.132 290.968 li
862.132 290.468 li
861.632 290.468 li
861.632 295.801 li
867.466 295.801 li
867.466 289.968 li
861.632 289.968 li
861.632 290.468 li
862.132 290.468 li
cp
859.466 305.301 mo
859.466 305.801 li
863.8 305.801 li
863.8 309.635 li
859.966 309.635 li
859.966 305.301 li
859.466 305.301 li
859.466 305.801 li
859.466 305.301 li
858.966 305.301 li
858.966 310.635 li
864.8 310.635 li
864.8 304.801 li
858.966 304.801 li
858.966 305.301 li
859.466 305.301 li
cp
861.466 307.051 mo
861.466 307.551 li
865.8 307.551 li
865.8 311.385 li
861.966 311.385 li
861.966 307.051 li
861.466 307.051 li
861.466 307.551 li
861.466 307.051 li
860.966 307.051 li
860.966 312.385 li
866.8 312.385 li
866.8 306.551 li
860.966 306.551 li
860.966 307.051 li
861.466 307.051 li
cp
863.466 297.468 mo
863.466 297.968 li
867.8 297.968 li
867.8 301.801 li
863.966 301.801 li
863.966 297.468 li
863.466 297.468 li
863.466 297.968 li
863.466 297.468 li
862.966 297.468 li
862.966 302.801 li
868.8 302.801 li
868.8 296.968 li
862.966 296.968 li
862.966 297.468 li
863.466 297.468 li
cp
861.882 293.385 mo
861.882 293.885 li
866.216 293.885 li
866.216 297.718 li
862.382 297.718 li
862.382 293.385 li
861.882 293.385 li
861.882 293.885 li
861.882 293.385 li
861.382 293.385 li
861.382 298.718 li
867.216 298.718 li
867.216 292.885 li
861.382 292.885 li
861.382 293.385 li
861.882 293.385 li
cp
860.716 319.635 mo
860.716 320.135 li
865.05 320.135 li
865.05 323.968 li
861.216 323.968 li
861.216 319.635 li
860.716 319.635 li
860.716 320.135 li
860.716 319.635 li
860.216 319.635 li
860.216 324.968 li
866.05 324.968 li
866.05 319.135 li
860.216 319.135 li
860.216 319.635 li
860.716 319.635 li
cp
858.716 319.551 mo
858.716 320.051 li
863.05 320.051 li
863.05 323.885 li
859.216 323.885 li
859.216 319.551 li
858.716 319.551 li
858.716 320.051 li
858.716 319.551 li
858.216 319.551 li
858.216 324.885 li
864.05 324.885 li
864.05 319.051 li
858.216 319.051 li
858.216 319.551 li
858.716 319.551 li
cp
857.382 318.051 mo
857.382 318.551 li
861.716 318.551 li
861.716 322.385 li
857.882 322.385 li
857.882 318.051 li
857.382 318.051 li
857.382 318.551 li
857.382 318.051 li
856.882 318.051 li
856.882 323.385 li
862.716 323.385 li
862.716 317.551 li
856.882 317.551 li
856.882 318.051 li
857.382 318.051 li
cp
858.382 319.885 mo
858.382 320.385 li
862.716 320.385 li
862.716 324.218 li
858.882 324.218 li
858.882 319.885 li
858.382 319.885 li
858.382 320.385 li
858.382 319.885 li
857.882 319.885 li
857.882 325.218 li
863.716 325.218 li
863.716 319.385 li
857.882 319.385 li
857.882 319.885 li
858.382 319.885 li
cp
858.05 319.885 mo
858.05 320.385 li
862.382 320.385 li
862.382 324.218 li
858.55 324.218 li
858.55 319.885 li
858.05 319.885 li
858.05 320.385 li
858.05 319.885 li
857.55 319.885 li
857.55 325.218 li
863.382 325.218 li
863.382 319.385 li
857.55 319.385 li
857.55 319.885 li
858.05 319.885 li
cp
857.882 319.635 mo
857.882 320.135 li
862.216 320.135 li
862.216 323.968 li
858.382 323.968 li
858.382 319.635 li
857.882 319.635 li
857.882 320.135 li
857.882 319.635 li
857.382 319.635 li
857.382 324.968 li
863.216 324.968 li
863.216 319.135 li
857.382 319.135 li
857.382 319.635 li
857.882 319.635 li
cp
857.632 319.551 mo
857.632 320.051 li
861.966 320.051 li
861.966 323.885 li
858.132 323.885 li
858.132 319.551 li
857.632 319.551 li
857.632 320.051 li
857.632 319.551 li
857.132 319.551 li
857.132 324.885 li
862.966 324.885 li
862.966 319.051 li
857.132 319.051 li
857.132 319.551 li
857.632 319.551 li
cp
857.966 301.968 mo
857.966 302.468 li
862.3 302.468 li
862.3 306.301 li
858.466 306.301 li
858.466 301.968 li
857.966 301.968 li
857.966 302.468 li
857.966 301.968 li
857.466 301.968 li
857.466 307.301 li
863.3 307.301 li
863.3 301.468 li
857.466 301.468 li
857.466 301.968 li
857.966 301.968 li
cp
857.966 298.885 mo
857.966 299.385 li
862.3 299.385 li
862.3 303.218 li
858.466 303.218 li
858.466 298.885 li
857.966 298.885 li
857.966 299.385 li
857.966 298.885 li
857.466 298.885 li
857.466 304.218 li
863.3 304.218 li
863.3 298.385 li
857.466 298.385 li
857.466 298.885 li
857.966 298.885 li
cp
857.966 309.718 mo
857.966 310.218 li
862.3 310.218 li
862.3 314.051 li
858.466 314.051 li
858.466 309.718 li
857.966 309.718 li
857.966 310.218 li
857.966 309.718 li
857.466 309.718 li
857.466 315.051 li
863.3 315.051 li
863.3 309.218 li
857.466 309.218 li
857.466 309.718 li
857.966 309.718 li
cp
857.966 274.301 mo
857.966 274.801 li
862.3 274.801 li
862.3 278.635 li
858.466 278.635 li
858.466 274.301 li
857.966 274.301 li
857.966 274.801 li
857.966 274.301 li
857.466 274.301 li
857.466 279.635 li
863.3 279.635 li
863.3 273.801 li
857.466 273.801 li
857.466 274.301 li
857.966 274.301 li
cp
857.966 315.051 mo
857.966 315.551 li
862.3 315.551 li
862.3 319.385 li
858.466 319.385 li
858.466 315.052 li
858.466 315.051 li
857.966 315.051 li
857.966 315.551 li
857.966 315.051 li
857.466 315.051 li
857.466 315.052 li
857.466 320.385 li
863.3 320.385 li
863.3 314.551 li
857.466 314.551 li
857.466 315.051 li
857.966 315.051 li
cp
859.05 319.968 mo
859.05 320.468 li
863.382 320.468 li
863.382 324.301 li
859.55 324.301 li
859.55 319.968 li
859.05 319.968 li
859.05 320.468 li
859.05 319.968 li
858.55 319.968 li
858.55 325.301 li
864.382 325.301 li
864.382 319.468 li
858.55 319.468 li
858.55 319.968 li
859.05 319.968 li
cp
858.05 319.885 mo
858.05 320.385 li
862.382 320.385 li
862.382 324.218 li
858.55 324.218 li
858.55 319.885 li
858.05 319.885 li
858.05 320.385 li
858.05 319.885 li
857.55 319.885 li
857.55 325.218 li
863.382 325.218 li
863.382 319.385 li
857.55 319.385 li
857.55 319.885 li
858.05 319.885 li
cp
858.466 320.051 mo
858.466 320.551 li
862.8 320.551 li
862.8 324.385 li
858.966 324.385 li
858.966 320.051 li
858.466 320.051 li
858.466 320.551 li
858.466 320.051 li
857.966 320.051 li
857.966 325.385 li
863.8 325.385 li
863.8 319.551 li
857.966 319.551 li
857.966 320.051 li
858.466 320.051 li
cp
858.466 319.718 mo
858.466 320.218 li
862.8 320.218 li
862.8 324.051 li
858.966 324.051 li
858.966 319.718 li
858.466 319.718 li
858.466 320.218 li
858.466 319.718 li
857.966 319.718 li
857.966 325.051 li
863.8 325.051 li
863.8 319.218 li
857.966 319.218 li
857.966 319.718 li
858.466 319.718 li
cp
857.132 306.885 mo
857.132 307.385 li
861.466 307.385 li
861.466 311.218 li
857.632 311.218 li
857.632 306.885 li
857.132 306.885 li
857.132 307.385 li
857.132 306.885 li
856.632 306.885 li
856.632 312.218 li
862.466 312.218 li
862.466 306.385 li
856.632 306.385 li
856.632 306.885 li
857.132 306.885 li
cp
857.966 319.801 mo
857.966 320.301 li
862.3 320.301 li
862.3 324.135 li
858.466 324.135 li
858.466 319.801 li
857.966 319.801 li
857.966 320.301 li
857.966 319.801 li
857.466 319.801 li
857.466 325.135 li
863.3 325.135 li
863.3 319.301 li
857.466 319.301 li
857.466 319.801 li
857.966 319.801 li
cp
857.966 319.301 mo
857.966 319.801 li
862.3 319.801 li
862.3 323.635 li
858.466 323.635 li
858.466 319.301 li
857.966 319.301 li
857.966 319.801 li
857.966 319.301 li
857.466 319.301 li
857.466 324.635 li
863.3 324.635 li
863.3 318.801 li
857.466 318.801 li
857.466 319.301 li
857.966 319.301 li
cp
857.966 306.801 mo
857.966 307.301 li
862.3 307.301 li
862.3 311.135 li
858.466 311.135 li
858.466 306.801 li
857.966 306.801 li
857.966 307.301 li
857.966 306.801 li
857.466 306.801 li
857.466 312.135 li
863.3 312.135 li
863.3 306.301 li
857.466 306.301 li
857.466 306.801 li
857.966 306.801 li
cp
858.216 310.635 mo
858.216 311.135 li
862.55 311.135 li
862.55 314.968 li
858.716 314.968 li
858.716 310.635 li
858.216 310.635 li
858.216 311.135 li
858.216 310.635 li
857.716 310.635 li
857.716 315.968 li
863.55 315.968 li
863.55 310.135 li
857.716 310.135 li
857.716 310.635 li
858.216 310.635 li
cp
861.8 249.468 mo
861.8 249.968 li
866.132 249.968 li
866.132 253.801 li
862.3 253.801 li
862.3 249.468 li
861.8 249.468 li
861.8 249.968 li
861.8 249.468 li
861.3 249.468 li
861.3 254.801 li
867.132 254.801 li
867.132 248.968 li
861.3 248.968 li
861.3 249.468 li
861.8 249.468 li
cp
861.382 245.051 mo
861.382 245.551 li
865.716 245.551 li
865.716 249.385 li
861.882 249.385 li
861.882 245.051 li
861.382 245.051 li
861.382 245.551 li
861.382 245.051 li
860.882 245.051 li
860.882 250.385 li
866.716 250.385 li
866.716 244.551 li
860.882 244.551 li
860.882 245.051 li
861.382 245.051 li
cp
862.55 277.801 mo
862.55 278.301 li
866.882 278.301 li
866.882 282.135 li
863.05 282.135 li
863.05 277.801 li
862.55 277.801 li
862.55 278.301 li
862.55 277.801 li
862.05 277.801 li
862.05 283.135 li
867.882 283.135 li
867.882 277.301 li
862.05 277.301 li
862.05 277.801 li
862.55 277.801 li
cp
862.882 299.551 mo
862.882 300.051 li
867.216 300.051 li
867.216 303.885 li
863.382 303.885 li
863.382 299.551 li
862.882 299.551 li
862.882 300.051 li
862.882 299.551 li
862.382 299.551 li
862.382 304.885 li
868.216 304.885 li
868.216 299.051 li
862.382 299.051 li
862.382 299.551 li
862.882 299.551 li
cp
854.382 326.301 mo
854.382 326.801 li
858.716 326.801 li
858.716 330.635 li
854.882 330.635 li
854.882 326.301 li
854.382 326.301 li
854.382 326.801 li
854.382 326.301 li
853.882 326.301 li
853.882 331.635 li
859.716 331.635 li
859.716 325.801 li
853.882 325.801 li
853.882 326.301 li
854.382 326.301 li
cp
856.716 328.885 mo
856.716 329.385 li
861.05 329.385 li
861.05 333.218 li
857.216 333.218 li
857.216 328.885 li
856.716 328.885 li
856.716 329.385 li
856.716 328.885 li
856.216 328.885 li
856.216 334.218 li
862.05 334.218 li
862.05 328.385 li
856.216 328.385 li
856.216 328.885 li
856.716 328.885 li
cp
859.05 322.885 mo
859.05 323.385 li
863.382 323.385 li
863.382 327.218 li
859.55 327.218 li
859.55 322.885 li
859.05 322.885 li
859.05 323.385 li
859.05 322.885 li
858.55 322.885 li
858.55 328.218 li
864.382 328.218 li
864.382 322.385 li
858.55 322.385 li
858.55 322.885 li
859.05 322.885 li
cp
858.466 324.801 mo
858.466 325.301 li
862.8 325.301 li
862.8 329.135 li
858.966 329.135 li
858.966 324.801 li
858.466 324.801 li
858.466 325.301 li
858.466 324.801 li
857.966 324.801 li
857.966 330.135 li
863.8 330.135 li
863.8 324.301 li
857.966 324.301 li
857.966 324.801 li
858.466 324.801 li
cp
863.55 319.468 mo
863.55 319.968 li
867.882 319.968 li
867.882 323.801 li
864.05 323.801 li
864.05 319.468 li
863.55 319.468 li
863.55 319.968 li
863.55 319.468 li
863.05 319.468 li
863.05 324.801 li
868.882 324.801 li
868.882 318.968 li
863.05 318.968 li
863.05 319.468 li
863.55 319.468 li
cp
860.216 319.968 mo
860.216 320.468 li
864.55 320.468 li
864.55 324.301 li
860.716 324.301 li
860.716 319.968 li
860.216 319.968 li
860.216 320.468 li
860.216 319.968 li
859.716 319.968 li
859.716 325.301 li
865.55 325.301 li
865.55 319.468 li
859.716 319.468 li
859.716 319.968 li
860.216 319.968 li
cp
859.632 320.218 mo
859.632 320.718 li
863.966 320.718 li
863.966 324.551 li
860.132 324.551 li
860.132 320.218 li
859.632 320.218 li
859.632 320.718 li
859.632 320.218 li
859.132 320.218 li
859.132 325.551 li
864.966 325.551 li
864.966 319.718 li
859.132 319.718 li
859.132 320.218 li
859.632 320.218 li
cp
859.466 319.885 mo
859.466 320.385 li
863.8 320.385 li
863.8 324.218 li
859.966 324.218 li
859.966 319.885 li
859.466 319.885 li
859.466 320.385 li
859.466 319.885 li
858.966 319.885 li
858.966 325.218 li
864.8 325.218 li
864.8 319.385 li
858.966 319.385 li
858.966 319.885 li
859.466 319.885 li
cp
859.382 325.718 mo
859.382 326.218 li
863.716 326.218 li
863.716 330.051 li
859.882 330.051 li
859.882 325.718 li
859.382 325.718 li
859.382 326.218 li
859.382 325.718 li
858.882 325.718 li
858.882 331.051 li
864.716 331.051 li
864.716 325.218 li
858.882 325.218 li
858.882 325.718 li
859.382 325.718 li
cp
886.215 290.301 mo
886.215 290.801 li
890.55 290.801 li
890.55 294.635 li
886.715 294.635 li
886.715 290.301 li
886.215 290.301 li
886.215 290.801 li
886.215 290.301 li
885.715 290.301 li
885.715 295.635 li
891.55 295.635 li
891.55 289.801 li
885.715 289.801 li
885.715 290.301 li
886.215 290.301 li
cp
973.8 271.635 mo
973.8 272.135 li
978.132 272.135 li
978.132 275.968 li
974.3 275.968 li
974.3 271.635 li
973.8 271.635 li
973.8 272.135 li
973.8 271.635 li
973.3 271.635 li
973.3 276.968 li
979.132 276.968 li
979.132 271.135 li
973.3 271.135 li
973.3 271.635 li
973.8 271.635 li
cp
955.966 269.718 mo
955.966 270.218 li
960.3 270.218 li
960.3 274.051 li
956.466 274.051 li
956.466 269.718 li
955.966 269.718 li
955.966 270.218 li
955.966 269.718 li
955.466 269.718 li
955.466 275.051 li
961.3 275.051 li
961.3 269.218 li
955.466 269.218 li
955.466 269.718 li
955.966 269.718 li
cp
939.466 272.301 mo
939.466 272.801 li
943.8 272.801 li
943.8 276.635 li
939.966 276.635 li
939.966 272.301 li
939.466 272.301 li
939.466 272.801 li
939.466 272.301 li
938.966 272.301 li
938.966 277.635 li
944.8 277.635 li
944.8 271.801 li
938.966 271.801 li
938.966 272.301 li
939.466 272.301 li
cp
912.05 253.551 mo
912.05 254.051 li
916.382 254.051 li
916.382 257.885 li
912.55 257.885 li
912.55 253.551 li
912.05 253.551 li
912.05 254.051 li
912.05 253.551 li
911.55 253.551 li
911.55 258.885 li
917.382 258.885 li
917.382 253.051 li
911.55 253.051 li
911.55 253.551 li
912.05 253.551 li
cp
857.55 317.968 mo
857.55 318.468 li
861.882 318.468 li
861.882 322.301 li
858.05 322.301 li
858.05 317.968 li
857.55 317.968 li
857.55 318.468 li
857.55 317.968 li
857.05 317.968 li
857.05 323.301 li
862.882 323.301 li
862.882 317.468 li
857.05 317.468 li
857.05 317.968 li
857.55 317.968 li
cp
858.55 316.718 mo
858.55 317.218 li
862.882 317.218 li
862.882 321.051 li
859.05 321.051 li
859.05 316.718 li
858.55 316.718 li
858.55 317.218 li
858.55 316.718 li
858.05 316.718 li
858.05 322.051 li
863.882 322.051 li
863.882 316.218 li
858.05 316.218 li
858.05 316.718 li
858.55 316.718 li
cp
857.05 314.135 mo
857.05 314.635 li
861.382 314.635 li
861.382 318.468 li
857.55 318.468 li
857.55 314.135 li
857.05 314.135 li
857.05 314.635 li
857.05 314.135 li
856.55 314.135 li
856.55 319.468 li
862.382 319.468 li
862.382 313.635 li
856.55 313.635 li
856.55 314.135 li
857.05 314.135 li
cp
858.632 313.718 mo
858.632 314.218 li
862.966 314.218 li
862.966 318.051 li
859.132 318.051 li
859.132 313.718 li
858.632 313.718 li
858.632 314.218 li
858.632 313.718 li
858.132 313.718 li
858.132 319.051 li
863.966 319.051 li
863.966 313.218 li
858.132 313.218 li
858.132 313.718 li
858.632 313.718 li
cp
854.216 314.635 mo
854.216 315.135 li
858.55 315.135 li
858.55 318.968 li
854.716 318.968 li
854.716 314.635 li
854.216 314.635 li
854.216 315.135 li
854.216 314.635 li
853.716 314.635 li
853.716 319.968 li
859.55 319.968 li
859.55 314.135 li
853.716 314.135 li
853.716 314.635 li
854.216 314.635 li
cp
854.05 315.635 mo
854.05 316.135 li
858.382 316.135 li
858.382 319.968 li
854.55 319.968 li
854.55 315.635 li
854.05 315.635 li
854.05 316.135 li
854.05 315.635 li
853.55 315.635 li
853.55 320.968 li
859.382 320.968 li
859.382 315.135 li
853.55 315.135 li
853.55 315.635 li
854.05 315.635 li
cp
855.466 316.551 mo
855.466 317.051 li
859.8 317.051 li
859.8 320.885 li
855.966 320.885 li
855.966 316.551 li
855.466 316.551 li
855.466 317.051 li
855.466 316.551 li
854.966 316.551 li
854.966 321.885 li
860.8 321.885 li
860.8 316.051 li
854.966 316.051 li
854.966 316.551 li
855.466 316.551 li
cp
853.966 314.635 mo
853.966 315.135 li
858.3 315.135 li
858.3 318.968 li
854.466 318.968 li
854.466 314.635 li
853.966 314.635 li
853.966 315.135 li
853.966 314.635 li
853.466 314.635 li
853.466 319.968 li
859.3 319.968 li
859.3 314.135 li
853.466 314.135 li
853.466 314.635 li
853.966 314.635 li
cp
852.05 314.635 mo
852.05 315.135 li
856.382 315.135 li
856.382 318.968 li
852.55 318.968 li
852.55 314.635 li
852.05 314.635 li
852.05 315.135 li
852.05 314.635 li
851.55 314.635 li
851.55 319.968 li
857.382 319.968 li
857.382 314.135 li
851.55 314.135 li
851.55 314.635 li
852.05 314.635 li
cp
856.132 305.551 mo
856.132 306.051 li
860.466 306.051 li
860.466 309.885 li
856.632 309.885 li
856.632 305.551 li
856.132 305.551 li
856.132 306.051 li
856.132 305.551 li
855.632 305.551 li
855.632 310.885 li
861.466 310.885 li
861.466 305.051 li
855.632 305.051 li
855.632 305.551 li
856.132 305.551 li
cp
856.966 308.468 mo
856.966 308.968 li
861.3 308.968 li
861.3 312.801 li
857.466 312.801 li
857.466 308.468 li
856.966 308.468 li
856.966 308.968 li
856.966 308.468 li
856.466 308.468 li
856.466 313.801 li
862.3 313.801 li
862.3 307.968 li
856.466 307.968 li
856.466 308.468 li
856.966 308.468 li
cp
858.05 319.385 mo
858.05 319.885 li
862.382 319.885 li
862.382 323.718 li
858.55 323.718 li
858.55 319.385 li
858.05 319.385 li
858.05 319.885 li
858.05 319.385 li
857.55 319.385 li
857.55 324.718 li
863.382 324.718 li
863.382 318.885 li
857.55 318.885 li
857.55 319.385 li
858.05 319.385 li
cp
858.216 319.218 mo
858.216 319.718 li
862.55 319.718 li
862.55 323.551 li
858.716 323.551 li
858.716 319.218 li
858.216 319.218 li
858.216 319.718 li
858.216 319.218 li
857.716 319.218 li
857.716 324.551 li
863.55 324.551 li
863.55 318.718 li
857.716 318.718 li
857.716 319.218 li
858.216 319.218 li
cp
858.05 319.301 mo
858.05 319.801 li
862.382 319.801 li
862.382 323.635 li
858.55 323.635 li
858.55 319.301 li
858.05 319.301 li
858.05 319.801 li
858.05 319.301 li
857.55 319.301 li
857.55 324.635 li
863.382 324.635 li
863.382 318.801 li
857.55 318.801 li
857.55 319.301 li
858.05 319.301 li
cp
858.05 319.385 mo
858.05 319.885 li
862.382 319.885 li
862.382 323.718 li
858.55 323.718 li
858.55 319.385 li
858.05 319.385 li
858.05 319.885 li
858.05 319.385 li
857.55 319.385 li
857.55 324.718 li
863.382 324.718 li
863.382 318.885 li
857.55 318.885 li
857.55 319.385 li
858.05 319.385 li
cp
858.132 319.468 mo
858.132 319.968 li
862.466 319.968 li
862.466 323.801 li
858.632 323.801 li
858.632 319.468 li
858.132 319.468 li
858.132 319.968 li
858.132 319.468 li
857.632 319.468 li
857.632 324.801 li
863.466 324.801 li
863.466 318.968 li
857.632 318.968 li
857.632 319.468 li
858.132 319.468 li
cp
857.216 320.051 mo
857.216 320.551 li
861.55 320.551 li
861.55 324.385 li
857.716 324.385 li
857.716 320.051 li
857.216 320.051 li
857.216 320.551 li
857.216 320.051 li
856.716 320.051 li
856.716 325.385 li
862.55 325.385 li
862.55 319.551 li
856.716 319.551 li
856.716 320.051 li
857.216 320.051 li
cp
857.132 353.885 mo
857.132 354.385 li
861.466 354.385 li
861.466 358.218 li
857.632 358.218 li
857.632 353.885 li
857.132 353.885 li
857.132 354.385 li
857.132 353.885 li
856.632 353.885 li
856.632 359.218 li
862.466 359.218 li
862.466 353.385 li
856.632 353.385 li
856.632 353.885 li
857.132 353.885 li
cp
861.632 320.718 mo
861.632 321.218 li
865.966 321.218 li
865.966 325.051 li
862.132 325.051 li
862.132 320.718 li
861.632 320.718 li
861.632 321.218 li
861.632 320.718 li
861.132 320.718 li
861.132 326.051 li
866.966 326.051 li
866.966 320.218 li
861.132 320.218 li
861.132 320.718 li
861.632 320.718 li
cp
861.3 320.051 mo
861.3 320.551 li
865.632 320.551 li
865.632 324.385 li
861.8 324.385 li
861.8 320.051 li
861.3 320.051 li
861.3 320.551 li
861.3 320.051 li
860.8 320.051 li
860.8 325.385 li
866.632 325.385 li
866.632 319.551 li
860.8 319.551 li
860.8 320.051 li
861.3 320.051 li
cp
858.3 316.135 mo
858.3 316.635 li
862.632 316.635 li
862.632 320.468 li
858.8 320.468 li
858.8 316.135 li
858.3 316.135 li
858.3 316.635 li
858.3 316.135 li
857.8 316.135 li
857.8 321.468 li
863.632 321.468 li
863.632 315.635 li
857.8 315.635 li
857.8 316.135 li
858.3 316.135 li
cp
858.132 309.801 mo
858.132 310.301 li
862.466 310.301 li
862.466 314.135 li
858.632 314.135 li
858.632 309.801 li
858.132 309.801 li
858.132 310.301 li
858.132 309.801 li
857.632 309.801 li
857.632 315.135 li
863.466 315.135 li
863.466 309.301 li
857.632 309.301 li
857.632 309.801 li
858.132 309.801 li
cp
857.966 316.385 mo
857.966 316.885 li
862.3 316.885 li
862.3 320.718 li
858.466 320.718 li
858.466 316.385 li
857.966 316.385 li
857.966 316.885 li
857.966 316.385 li
857.466 316.385 li
857.466 321.718 li
863.3 321.718 li
863.3 315.885 li
857.466 315.885 li
857.466 316.385 li
857.966 316.385 li
cp
857.882 316.635 mo
857.882 317.135 li
862.216 317.135 li
862.216 320.968 li
858.382 320.968 li
858.382 316.635 li
857.882 316.635 li
857.882 317.135 li
857.882 316.635 li
857.382 316.635 li
857.382 321.968 li
863.216 321.968 li
863.216 316.135 li
857.382 316.135 li
857.382 316.635 li
857.882 316.635 li
cp
857.966 315.885 mo
857.966 316.385 li
862.3 316.385 li
862.3 320.218 li
858.466 320.218 li
858.466 315.885 li
857.966 315.885 li
857.966 316.385 li
857.966 315.885 li
857.466 315.885 li
857.466 321.218 li
863.3 321.218 li
863.3 315.385 li
857.466 315.385 li
857.466 315.885 li
857.966 315.885 li
cp
857.966 287.551 mo
857.966 288.051 li
862.3 288.051 li
862.3 291.885 li
858.466 291.885 li
858.466 287.551 li
857.966 287.551 li
857.966 288.051 li
857.966 287.551 li
857.466 287.551 li
857.466 292.885 li
863.3 292.885 li
863.3 287.051 li
857.466 287.051 li
857.466 287.551 li
857.966 287.551 li
cp
858.3 290.635 mo
858.3 291.135 li
862.632 291.135 li
862.632 294.968 li
858.8 294.968 li
858.8 290.635 li
858.3 290.635 li
858.3 291.135 li
858.3 290.635 li
857.8 290.635 li
857.8 295.968 li
863.632 295.968 li
863.632 290.135 li
857.8 290.135 li
857.8 290.635 li
858.3 290.635 li
cp
857.966 294.135 mo
857.966 294.635 li
862.3 294.635 li
862.3 298.468 li
858.466 298.468 li
858.466 294.135 li
857.966 294.135 li
857.966 294.635 li
857.966 294.135 li
857.466 294.135 li
857.466 299.468 li
863.3 299.468 li
863.3 293.635 li
857.466 293.635 li
857.466 294.135 li
857.966 294.135 li
cp
857.8 280.051 mo
857.8 280.551 li
862.132 280.551 li
862.132 284.385 li
858.3 284.385 li
858.3 280.051 li
857.8 280.051 li
857.8 280.551 li
857.8 280.051 li
857.3 280.051 li
857.3 285.385 li
863.132 285.385 li
863.132 279.551 li
857.3 279.551 li
857.3 280.051 li
857.8 280.051 li
cp
857.216 319.801 mo
857.216 320.301 li
861.55 320.301 li
861.55 324.135 li
857.716 324.135 li
857.716 319.801 li
857.216 319.801 li
857.216 320.301 li
857.216 319.801 li
856.716 319.801 li
856.716 325.135 li
862.55 325.135 li
862.55 319.301 li
856.716 319.301 li
856.716 319.801 li
857.216 319.801 li
cp
856.716 319.885 mo
856.716 320.385 li
861.05 320.385 li
861.05 324.218 li
857.216 324.218 li
857.216 319.885 li
856.716 319.885 li
856.716 320.385 li
856.716 319.885 li
856.216 319.885 li
856.216 325.218 li
862.05 325.218 li
862.05 319.385 li
856.216 319.385 li
856.216 319.885 li
856.716 319.885 li
cp
855.882 319.801 mo
855.882 320.301 li
860.216 320.301 li
860.216 324.135 li
856.382 324.135 li
856.382 319.801 li
855.882 319.801 li
855.882 320.301 li
855.882 319.801 li
855.382 319.801 li
855.382 325.135 li
861.216 325.135 li
861.216 319.301 li
855.382 319.301 li
855.382 319.801 li
855.882 319.801 li
cp
855.632 319.801 mo
855.632 320.301 li
859.966 320.301 li
859.966 324.135 li
856.132 324.135 li
856.132 319.801 li
855.632 319.801 li
855.632 320.301 li
855.632 319.801 li
855.132 319.801 li
855.132 325.135 li
860.966 325.135 li
860.966 319.301 li
855.132 319.301 li
855.132 319.801 li
855.632 319.801 li
cp
820.382 259.718 mo
820.382 260.218 li
824.716 260.218 li
824.716 264.051 li
820.882 264.051 li
820.882 259.718 li
820.382 259.718 li
820.382 260.218 li
820.382 259.718 li
819.882 259.718 li
819.882 265.051 li
825.716 265.051 li
825.716 259.218 li
819.882 259.218 li
819.882 259.718 li
820.382 259.718 li
cp
846.632 238.385 mo
846.632 238.885 li
850.966 238.885 li
850.966 242.718 li
847.132 242.718 li
847.132 238.385 li
846.632 238.385 li
846.632 238.885 li
846.632 238.385 li
846.132 238.385 li
846.132 243.718 li
851.966 243.718 li
851.966 237.885 li
846.132 237.885 li
846.132 238.385 li
846.632 238.385 li
cp
779.05 275.801 mo
779.05 276.301 li
783.382 276.301 li
783.382 280.135 li
779.55 280.135 li
779.55 275.801 li
779.05 275.801 li
779.05 276.301 li
779.05 275.801 li
778.55 275.801 li
778.55 281.135 li
784.382 281.135 li
784.382 275.301 li
778.55 275.301 li
778.55 275.801 li
779.05 275.801 li
cp
830.05 234.468 mo
830.05 234.968 li
834.382 234.968 li
834.382 238.801 li
830.55 238.801 li
830.55 234.468 li
830.05 234.468 li
830.05 234.968 li
830.05 234.468 li
829.55 234.468 li
829.55 239.801 li
835.382 239.801 li
835.382 233.968 li
829.55 233.968 li
829.55 234.468 li
830.05 234.468 li
cp
837.882 204.385 mo
837.882 204.885 li
842.216 204.885 li
842.216 208.718 li
838.382 208.718 li
838.382 204.385 li
837.882 204.385 li
837.882 204.885 li
837.882 204.385 li
837.382 204.385 li
837.382 209.718 li
843.216 209.718 li
843.216 203.885 li
837.382 203.885 li
837.382 204.385 li
837.882 204.385 li
cp
818.3 166.385 mo
818.3 166.885 li
822.632 166.885 li
822.632 170.718 li
818.8 170.718 li
818.8 166.385 li
818.3 166.385 li
818.3 166.885 li
818.3 166.385 li
817.8 166.385 li
817.8 171.718 li
823.632 171.718 li
823.632 165.885 li
817.8 165.885 li
817.8 166.385 li
818.3 166.385 li
cp
848.466 206.218 mo
848.466 206.718 li
852.8 206.718 li
852.8 210.551 li
848.966 210.551 li
848.966 206.218 li
848.466 206.218 li
848.466 206.718 li
848.466 206.218 li
847.966 206.218 li
847.966 211.551 li
853.8 211.551 li
853.8 205.718 li
847.966 205.718 li
847.966 206.218 li
848.466 206.218 li
cp
818.716 209.385 mo
818.716 209.885 li
823.05 209.885 li
823.05 213.718 li
819.216 213.718 li
819.216 209.385 li
818.716 209.385 li
818.716 209.885 li
818.716 209.385 li
818.216 209.385 li
818.216 214.718 li
824.05 214.718 li
824.05 208.885 li
818.216 208.885 li
818.216 209.385 li
818.716 209.385 li
cp
826.966 184.801 mo
826.966 185.301 li
831.3 185.301 li
831.3 189.135 li
827.466 189.135 li
827.466 184.801 li
826.966 184.801 li
826.966 185.301 li
826.966 184.801 li
826.466 184.801 li
826.466 190.135 li
832.3 190.135 li
832.3 184.301 li
826.466 184.301 li
826.466 184.801 li
826.966 184.801 li
cp
843.132 263.468 mo
843.132 263.968 li
847.466 263.968 li
847.466 267.801 li
843.632 267.801 li
843.632 263.468 li
843.132 263.468 li
843.132 263.968 li
843.132 263.468 li
842.632 263.468 li
842.632 268.801 li
848.466 268.801 li
848.466 262.968 li
842.632 262.968 li
842.632 263.468 li
843.132 263.468 li
cp
855.882 231.635 mo
855.882 232.135 li
860.216 232.135 li
860.216 235.968 li
856.382 235.968 li
856.382 231.635 li
855.882 231.635 li
855.882 232.135 li
855.882 231.635 li
855.382 231.635 li
855.382 236.968 li
861.216 236.968 li
861.216 231.135 li
855.382 231.135 li
855.382 231.635 li
855.882 231.635 li
cp
855.132 162.385 mo
855.132 162.885 li
859.466 162.885 li
859.466 166.718 li
855.632 166.718 li
855.632 162.385 li
855.132 162.385 li
855.132 162.885 li
855.132 162.385 li
854.632 162.385 li
854.632 167.718 li
860.466 167.718 li
860.466 161.885 li
854.632 161.885 li
854.632 162.385 li
855.132 162.385 li
cp
858.05 265.885 mo
858.05 266.385 li
862.382 266.385 li
862.382 270.218 li
858.55 270.218 li
858.55 265.885 li
858.05 265.885 li
858.05 266.385 li
858.05 265.885 li
857.55 265.885 li
857.55 271.218 li
863.382 271.218 li
863.382 265.385 li
857.55 265.385 li
857.55 265.885 li
858.05 265.885 li
cp
844.882 271.301 mo
844.882 271.801 li
849.216 271.801 li
849.216 275.635 li
845.382 275.635 li
845.382 271.301 li
844.882 271.301 li
844.882 271.801 li
844.882 271.301 li
844.382 271.301 li
844.382 276.635 li
850.216 276.635 li
850.216 270.801 li
844.382 270.801 li
844.382 271.301 li
844.882 271.301 li
cp
831.8 251.468 mo
831.8 251.968 li
836.132 251.968 li
836.132 255.801 li
832.3 255.801 li
832.3 251.468 li
831.8 251.468 li
831.8 251.968 li
831.8 251.468 li
831.3 251.468 li
831.3 256.801 li
837.132 256.801 li
837.132 250.968 li
831.3 250.968 li
831.3 251.468 li
831.8 251.468 li
cp
853.716 180.801 mo
853.716 181.301 li
858.05 181.301 li
858.05 185.135 li
854.216 185.135 li
854.216 180.801 li
853.716 180.801 li
853.716 181.301 li
853.716 180.801 li
853.216 180.801 li
853.216 186.135 li
859.05 186.135 li
859.05 180.301 li
853.216 180.301 li
853.216 180.801 li
853.716 180.801 li
cp
857.882 158.551 mo
857.882 159.051 li
862.216 159.051 li
862.216 162.885 li
858.382 162.885 li
858.382 158.551 li
857.882 158.551 li
857.882 159.051 li
857.882 158.551 li
857.382 158.551 li
857.382 163.885 li
863.216 163.885 li
863.216 158.051 li
857.382 158.051 li
857.382 158.551 li
857.882 158.551 li
cp
858.132 191.468 mo
858.132 191.968 li
862.466 191.968 li
862.466 195.801 li
858.632 195.801 li
858.632 191.468 li
858.132 191.468 li
858.132 191.968 li
858.132 191.468 li
857.632 191.468 li
857.632 196.801 li
863.466 196.801 li
863.466 190.968 li
857.632 190.968 li
857.632 191.468 li
858.132 191.468 li
cp
832.632 173.385 mo
832.632 173.885 li
836.966 173.885 li
836.966 177.718 li
833.132 177.718 li
833.132 173.385 li
832.632 173.385 li
832.632 173.885 li
832.632 173.385 li
832.132 173.385 li
832.132 178.718 li
837.966 178.718 li
837.966 172.885 li
832.132 172.885 li
832.132 173.385 li
832.632 173.385 li
cp
831.55 230.218 mo
831.55 230.718 li
835.882 230.718 li
835.882 234.551 li
832.05 234.551 li
832.05 230.218 li
831.55 230.218 li
831.55 230.718 li
831.55 230.218 li
831.05 230.218 li
831.05 235.551 li
836.882 235.551 li
836.882 229.718 li
831.05 229.718 li
831.05 230.218 li
831.55 230.218 li
cp
857.3 180.301 mo
857.3 180.801 li
861.632 180.801 li
861.632 184.635 li
857.8 184.635 li
857.8 180.301 li
857.3 180.301 li
857.3 180.801 li
857.3 180.301 li
856.8 180.301 li
856.8 185.635 li
862.632 185.635 li
862.632 179.801 li
856.8 179.801 li
856.8 180.301 li
857.3 180.301 li
cp
842.55 206.135 mo
842.55 206.635 li
846.882 206.635 li
846.882 210.468 li
843.05 210.468 li
843.05 206.135 li
842.55 206.135 li
842.55 206.635 li
842.55 206.135 li
842.05 206.135 li
842.05 211.468 li
847.882 211.468 li
847.882 205.635 li
842.05 205.635 li
842.05 206.135 li
842.55 206.135 li
cp
848.966 195.385 mo
848.966 195.885 li
853.3 195.885 li
853.3 199.718 li
849.466 199.718 li
849.466 195.385 li
848.966 195.385 li
848.966 195.885 li
848.966 195.385 li
848.466 195.385 li
848.466 200.718 li
854.3 200.718 li
854.3 194.885 li
848.466 194.885 li
848.466 195.385 li
848.966 195.385 li
cp
849.966 255.801 mo
849.966 256.301 li
854.3 256.301 li
854.3 260.135 li
850.466 260.135 li
850.466 255.801 li
849.966 255.801 li
849.966 256.301 li
849.966 255.801 li
849.466 255.801 li
849.466 261.135 li
855.3 261.135 li
855.3 255.301 li
849.466 255.301 li
849.466 255.801 li
849.966 255.801 li
cp
858.3 241.635 mo
858.3 242.135 li
862.632 242.135 li
862.632 245.968 li
858.8 245.968 li
858.8 241.635 li
858.3 241.635 li
858.3 242.135 li
858.3 241.635 li
857.8 241.635 li
857.8 246.968 li
863.632 246.968 li
863.632 241.135 li
857.8 241.135 li
857.8 241.635 li
858.3 241.635 li
cp
857.632 207.051 mo
857.632 207.551 li
861.966 207.551 li
861.966 211.385 li
858.132 211.385 li
858.132 207.051 li
857.632 207.051 li
857.632 207.551 li
857.632 207.051 li
857.132 207.051 li
857.132 212.385 li
862.966 212.385 li
862.966 206.551 li
857.132 206.551 li
857.132 207.051 li
857.632 207.051 li
cp
846.216 224.218 mo
846.216 224.718 li
850.55 224.718 li
850.55 228.551 li
846.716 228.551 li
846.716 224.218 li
846.216 224.218 li
846.216 224.718 li
846.216 224.218 li
845.716 224.218 li
845.716 229.551 li
851.55 229.551 li
851.55 223.718 li
845.716 223.718 li
845.716 224.218 li
846.216 224.218 li
cp
847.382 196.551 mo
847.382 197.051 li
851.716 197.051 li
851.716 200.885 li
847.882 200.885 li
847.882 196.551 li
847.382 196.551 li
847.382 197.051 li
847.382 196.551 li
846.882 196.551 li
846.882 201.885 li
852.716 201.885 li
852.716 196.051 li
846.882 196.051 li
846.882 196.551 li
847.382 196.551 li
cp
835.466 157.885 mo
835.466 158.385 li
839.8 158.385 li
839.8 162.218 li
835.966 162.218 li
835.966 157.885 li
835.466 157.885 li
835.466 158.385 li
835.466 157.885 li
834.966 157.885 li
834.966 163.218 li
840.8 163.218 li
840.8 157.385 li
834.966 157.385 li
834.966 157.885 li
835.466 157.885 li
cp
842.382 264.968 mo
842.382 265.468 li
846.716 265.468 li
846.716 269.301 li
842.882 269.301 li
842.882 264.968 li
842.382 264.968 li
842.382 265.468 li
842.382 264.968 li
841.882 264.968 li
841.882 270.301 li
847.716 270.301 li
847.716 264.468 li
841.882 264.468 li
841.882 264.968 li
842.382 264.968 li
cp
804.716 252.801 mo
804.716 253.301 li
809.05 253.301 li
809.05 257.135 li
805.216 257.135 li
805.216 252.801 li
804.716 252.801 li
804.716 253.301 li
804.716 252.801 li
804.216 252.801 li
804.216 258.135 li
810.05 258.135 li
810.05 252.301 li
804.216 252.301 li
804.216 252.801 li
804.716 252.801 li
cp
837.8 211.301 mo
837.8 211.801 li
842.132 211.801 li
842.132 215.635 li
838.3 215.635 li
838.3 211.301 li
837.8 211.301 li
837.8 211.801 li
837.8 211.301 li
837.3 211.301 li
837.3 216.635 li
843.132 216.635 li
843.132 210.801 li
837.3 210.801 li
837.3 211.301 li
837.8 211.301 li
cp
847.05 244.301 mo
847.05 244.801 li
851.382 244.801 li
851.382 248.635 li
847.55 248.635 li
847.55 244.301 li
847.05 244.301 li
847.05 244.801 li
847.05 244.301 li
846.55 244.301 li
846.55 249.635 li
852.382 249.635 li
852.382 243.801 li
846.55 243.801 li
846.55 244.301 li
847.05 244.301 li
cp
856.05 213.468 mo
856.05 213.968 li
860.382 213.968 li
860.382 217.801 li
856.55 217.801 li
856.55 213.468 li
856.05 213.468 li
856.05 213.968 li
856.05 213.468 li
855.55 213.468 li
855.55 218.801 li
861.382 218.801 li
861.382 212.968 li
855.55 212.968 li
855.55 213.468 li
856.05 213.468 li
cp
854.466 237.135 mo
854.466 237.635 li
858.8 237.635 li
858.8 241.468 li
854.966 241.468 li
854.966 237.135 li
854.466 237.135 li
854.466 237.635 li
854.466 237.135 li
853.966 237.135 li
853.966 242.468 li
859.8 242.468 li
859.8 236.635 li
853.966 236.635 li
853.966 237.135 li
854.466 237.135 li
cp
844.966 161.301 mo
844.966 161.801 li
849.3 161.801 li
849.3 165.635 li
845.466 165.635 li
845.466 161.301 li
844.966 161.301 li
844.966 161.801 li
844.966 161.301 li
844.466 161.301 li
844.466 166.635 li
850.3 166.635 li
850.3 160.801 li
844.466 160.801 li
844.466 161.301 li
844.966 161.301 li
cp
856.216 221.218 mo
856.216 221.718 li
860.55 221.718 li
860.55 225.551 li
856.716 225.551 li
856.716 221.218 li
856.216 221.218 li
856.216 221.718 li
856.216 221.218 li
855.716 221.218 li
855.716 226.551 li
861.55 226.551 li
861.55 220.718 li
855.716 220.718 li
855.716 221.218 li
856.216 221.218 li
cp
844.8 171.635 mo
844.8 172.135 li
849.132 172.135 li
849.132 175.968 li
845.3 175.968 li
845.3 171.635 li
844.8 171.635 li
844.8 172.135 li
844.8 171.635 li
844.3 171.635 li
844.3 176.968 li
850.132 176.968 li
850.132 171.135 li
844.3 171.135 li
844.3 171.635 li
844.8 171.635 li
cp
844.55 174.051 mo
844.55 174.551 li
848.882 174.551 li
848.882 178.385 li
845.05 178.385 li
845.05 174.051 li
844.55 174.051 li
844.55 174.551 li
844.55 174.051 li
844.05 174.051 li
844.05 179.385 li
849.882 179.385 li
849.882 173.551 li
844.05 173.551 li
844.05 174.051 li
844.55 174.051 li
cp
852.05 206.551 mo
852.05 207.051 li
856.382 207.051 li
856.382 210.885 li
852.55 210.885 li
852.55 206.551 li
852.05 206.551 li
852.05 207.051 li
852.05 206.551 li
851.55 206.551 li
851.55 211.885 li
857.382 211.885 li
857.382 206.051 li
851.55 206.051 li
851.55 206.551 li
852.05 206.551 li
cp
856.466 216.968 mo
856.466 217.468 li
860.8 217.468 li
860.8 221.301 li
856.966 221.301 li
856.966 216.968 li
856.466 216.968 li
856.466 217.468 li
856.466 216.968 li
855.966 216.968 li
855.966 222.301 li
861.8 222.301 li
861.8 216.468 li
855.966 216.468 li
855.966 216.968 li
856.466 216.968 li
cp
810.55 252.135 mo
810.55 252.635 li
814.882 252.635 li
814.882 256.468 li
811.05 256.468 li
811.05 252.135 li
810.55 252.135 li
810.55 252.635 li
810.55 252.135 li
810.05 252.135 li
810.05 257.468 li
815.882 257.468 li
815.882 251.635 li
810.05 251.635 li
810.05 252.135 li
810.55 252.135 li
cp
763.466 163.468 mo
763.466 163.968 li
767.8 163.968 li
767.8 167.801 li
763.966 167.801 li
763.966 163.468 li
763.466 163.468 li
763.466 163.968 li
763.466 163.468 li
762.966 163.468 li
762.966 168.801 li
768.8 168.801 li
768.8 162.968 li
762.966 162.968 li
762.966 163.468 li
763.466 163.468 li
cp
857.966 254.468 mo
857.966 254.968 li
862.3 254.968 li
862.3 258.801 li
858.466 258.801 li
858.466 254.468 li
857.966 254.468 li
857.966 254.968 li
857.966 254.468 li
857.466 254.468 li
857.466 259.801 li
863.3 259.801 li
863.3 253.968 li
857.466 253.968 li
857.466 254.468 li
857.966 254.468 li
cp
858.632 256.635 mo
858.632 257.135 li
862.966 257.135 li
862.966 260.968 li
859.132 260.968 li
859.132 256.635 li
858.632 256.635 li
858.632 257.135 li
858.632 256.635 li
858.132 256.635 li
858.132 261.968 li
863.966 261.968 li
863.966 256.135 li
858.132 256.135 li
858.132 256.635 li
858.632 256.635 li
cp
855.882 243.968 mo
855.882 244.468 li
860.216 244.468 li
860.216 248.301 li
856.382 248.301 li
856.382 243.968 li
855.882 243.968 li
855.882 244.468 li
855.882 243.968 li
855.382 243.968 li
855.382 249.301 li
861.216 249.301 li
861.216 243.468 li
855.382 243.468 li
855.382 243.968 li
855.882 243.968 li
cp
860.632 303.468 mo
860.632 303.968 li
864.966 303.968 li
864.966 307.801 li
861.132 307.801 li
861.132 303.468 li
860.632 303.468 li
860.632 303.968 li
860.632 303.468 li
860.132 303.468 li
860.132 308.801 li
865.966 308.801 li
865.966 302.968 li
860.132 302.968 li
860.132 303.468 li
860.632 303.468 li
cp
0 0 0 1 cmyk
f
841.466 240.301 mo
846.3 240.301 li
846.3 245.135 li
841.466 245.135 li
841.466 240.301 li
cp
852.882 207.385 mo
857.716 207.385 li
857.716 212.218 li
852.882 212.218 li
852.882 207.385 li
cp
839.216 217.301 mo
844.05 217.301 li
844.05 222.135 li
839.216 222.135 li
839.216 217.301 li
cp
850.216 177.218 mo
855.05 177.218 li
855.05 182.051 li
850.216 182.051 li
850.216 177.218 li
cp
850.8 196.635 mo
855.632 196.635 li
855.632 201.468 li
850.8 201.468 li
850.8 196.635 li
cp
840.132 190.801 mo
844.966 190.801 li
844.966 195.635 li
840.132 195.635 li
840.132 190.801 li
cp
836.05 194.301 mo
840.882 194.301 li
840.882 199.135 li
836.05 199.135 li
836.05 194.301 li
cp
855.882 182.801 mo
860.716 182.801 li
860.716 187.635 li
855.882 187.635 li
855.882 182.801 li
cp
857.3 269.968 mo
862.132 269.968 li
862.132 274.801 li
857.3 274.801 li
857.3 269.968 li
cp
855.632 249.635 mo
860.466 249.635 li
860.466 254.468 li
855.632 254.468 li
855.632 249.635 li
cp
799.132 167.551 mo
803.966 167.551 li
803.966 172.385 li
799.132 172.385 li
799.132 167.551 li
cp
858.632 282.968 mo
863.466 282.968 li
863.466 287.801 li
858.632 287.801 li
858.632 282.968 li
cp
827.132 165.135 mo
831.966 165.135 li
831.966 169.968 li
827.132 169.968 li
827.132 165.135 li
cp
838.716 227.135 mo
843.55 227.135 li
843.55 231.968 li
838.716 231.968 li
838.716 227.135 li
cp
846.216 207.551 mo
851.05 207.551 li
851.05 212.385 li
846.216 212.385 li
846.216 207.551 li
cp
837.216 184.218 mo
842.05 184.218 li
842.05 189.051 li
837.216 189.051 li
837.216 184.218 li
cp
835.8 219.718 mo
840.632 219.718 li
840.632 224.551 li
835.8 224.551 li
835.8 219.718 li
cp
852.216 248.051 mo
857.05 248.051 li
857.05 252.885 li
852.216 252.885 li
852.216 248.051 li
cp
854.382 207.218 mo
859.216 207.218 li
859.216 212.051 li
854.382 212.051 li
854.382 207.218 li
cp
831.55 259.218 mo
836.382 259.218 li
836.382 264.051 li
831.55 264.051 li
831.55 259.218 li
cp
842.05 207.051 mo
846.882 207.051 li
846.882 211.885 li
842.05 211.885 li
842.05 207.051 li
cp
856.8 168.801 mo
861.632 168.801 li
861.632 173.635 li
856.8 173.635 li
856.8 168.801 li
cp
855.55 198.718 mo
860.382 198.718 li
860.382 203.551 li
855.55 203.551 li
855.55 198.718 li
cp
805.966 220.218 mo
810.8 220.218 li
810.8 225.051 li
805.966 225.051 li
805.966 220.218 li
cp
841.132 179.051 mo
845.966 179.051 li
845.966 183.885 li
841.132 183.885 li
841.132 179.051 li
cp
820.05 214.468 mo
824.882 214.468 li
824.882 219.301 li
820.05 219.301 li
820.05 214.468 li
cp
843.05 148.635 mo
847.882 148.635 li
847.882 153.468 li
843.05 153.468 li
843.05 148.635 li
cp
836.8 229.218 mo
841.632 229.218 li
841.632 234.051 li
836.8 234.051 li
836.8 229.218 li
cp
850.382 253.968 mo
855.216 253.968 li
855.216 258.801 li
850.382 258.801 li
850.382 253.968 li
cp
837.882 150.468 mo
842.716 150.468 li
842.716 155.301 li
837.882 155.301 li
837.882 150.468 li
cp
856.05 198.385 mo
860.882 198.385 li
860.882 203.218 li
856.05 203.218 li
856.05 198.385 li
cp
830.882 219.051 mo
835.716 219.051 li
835.716 223.885 li
830.882 223.885 li
830.882 219.051 li
cp
838.3 175.718 mo
843.132 175.718 li
843.132 180.551 li
838.3 180.551 li
838.3 175.718 li
cp
856.216 219.135 mo
861.05 219.135 li
861.05 223.968 li
856.216 223.968 li
856.216 219.135 li
cp
847.216 280.385 mo
852.05 280.385 li
852.05 285.218 li
847.216 285.218 li
847.216 280.385 li
cp
852.966 237.468 mo
857.8 237.468 li
857.8 242.301 li
852.966 242.301 li
852.966 237.468 li
cp
843.632 180.551 mo
848.466 180.551 li
848.466 185.385 li
843.632 185.385 li
843.632 180.551 li
cp
843.716 264.635 mo
848.55 264.635 li
848.55 269.468 li
843.716 269.468 li
843.716 264.635 li
cp
823.716 171.885 mo
828.55 171.885 li
828.55 176.718 li
823.716 176.718 li
823.716 171.885 li
cp
839.55 264.801 mo
844.382 264.801 li
844.382 269.635 li
839.55 269.635 li
839.55 264.801 li
cp
830.882 245.218 mo
835.716 245.218 li
835.716 250.051 li
830.882 250.051 li
830.882 245.218 li
cp
855.716 208.218 mo
860.55 208.218 li
860.55 213.051 li
855.716 213.051 li
855.716 208.218 li
cp
826.966 226.885 mo
831.8 226.885 li
831.8 231.718 li
826.966 231.718 li
826.966 226.885 li
cp
851.216 175.218 mo
856.05 175.218 li
856.05 180.051 li
851.216 180.051 li
851.216 175.218 li
cp
840.966 246.468 mo
845.8 246.468 li
845.8 251.301 li
840.966 251.301 li
840.966 246.468 li
cp
837.8 251.801 mo
842.632 251.801 li
842.632 256.635 li
837.8 256.635 li
837.8 251.801 li
cp
855.382 187.801 mo
860.216 187.801 li
860.216 192.635 li
855.382 192.635 li
855.382 187.801 li
cp
833.382 265.801 mo
838.216 265.801 li
838.216 270.635 li
833.382 270.635 li
833.382 265.801 li
cp
798.632 174.635 mo
803.466 174.635 li
803.466 179.468 li
798.632 179.468 li
798.632 174.635 li
cp
852.55 260.135 mo
857.382 260.135 li
857.382 264.968 li
852.55 264.968 li
852.55 260.135 li
cp
857.466 244.968 mo
862.3 244.968 li
862.3 249.801 li
857.466 249.801 li
857.466 244.968 li
cp
836.716 184.051 mo
841.55 184.051 li
841.55 188.885 li
836.716 188.885 li
836.716 184.051 li
cp
855.882 253.301 mo
860.716 253.301 li
860.716 258.135 li
855.882 258.135 li
855.882 253.301 li
cp
841.716 237.968 mo
846.55 237.968 li
846.55 242.801 li
841.716 242.801 li
841.716 237.968 li
cp
847.882 207.551 mo
852.716 207.551 li
852.716 212.385 li
847.882 212.385 li
847.882 207.551 li
cp
818.3 234.301 mo
823.132 234.301 li
823.132 239.135 li
818.3 239.135 li
818.3 234.301 li
cp
857.05 228.385 mo
861.882 228.385 li
861.882 233.218 li
857.05 233.218 li
857.05 228.385 li
cp
852.05 161.718 mo
856.882 161.718 li
856.882 166.551 li
852.05 166.551 li
852.05 161.718 li
cp
847.632 126.968 mo
852.466 126.968 li
852.466 131.801 li
847.632 131.801 li
847.632 126.968 li
cp
844.382 173.635 mo
849.216 173.635 li
849.216 178.468 li
844.382 178.468 li
844.382 173.635 li
cp
833.05 201.968 mo
837.882 201.968 li
837.882 206.801 li
833.05 206.801 li
833.05 201.968 li
cp
801.466 201.718 mo
806.3 201.718 li
806.3 206.551 li
801.466 206.551 li
801.466 201.718 li
cp
855.966 230.551 mo
860.8 230.551 li
860.8 235.385 li
855.966 235.385 li
855.966 230.551 li
cp
848.882 216.551 mo
853.716 216.551 li
853.716 221.385 li
848.882 221.385 li
848.882 216.551 li
cp
757.548 165.718 mo
762.382 165.718 li
762.382 170.551 li
757.548 170.551 li
757.548 165.718 li
cp
849.382 220.635 mo
854.216 220.635 li
854.216 225.468 li
849.382 225.468 li
849.382 220.635 li
cp
835.216 180.051 mo
840.05 180.051 li
840.05 184.885 li
835.216 184.885 li
835.216 180.051 li
cp
844.216 188.135 mo
849.05 188.135 li
849.05 192.968 li
844.216 192.968 li
844.216 188.135 li
cp
817.216 257.801 mo
822.05 257.801 li
822.05 262.635 li
817.216 262.635 li
817.216 257.801 li
cp
850.55 238.718 mo
855.382 238.718 li
855.382 243.551 li
850.55 243.551 li
850.55 238.718 li
cp
833.8 218.718 mo
838.632 218.718 li
838.632 223.551 li
833.8 223.551 li
833.8 218.718 li
cp
858.216 235.301 mo
863.05 235.301 li
863.05 240.135 li
858.216 240.135 li
858.216 235.301 li
cp
842.05 243.635 mo
846.882 243.635 li
846.882 248.468 li
842.05 248.468 li
842.05 243.635 li
cp
830.05 254.801 mo
834.882 254.801 li
834.882 259.635 li
830.05 259.635 li
830.05 254.801 li
cp
812.466 241.968 mo
817.3 241.968 li
817.3 246.801 li
812.466 246.801 li
812.466 241.968 li
cp
859.466 262.385 mo
864.3 262.385 li
864.3 267.218 li
859.466 267.218 li
859.466 262.385 li
cp
845.3 249.051 mo
850.132 249.051 li
850.132 253.885 li
845.3 253.885 li
845.3 249.051 li
cp
856.8 273.301 mo
861.632 273.301 li
861.632 278.135 li
856.8 278.135 li
856.8 273.301 li
cp
840.216 248.301 mo
845.05 248.301 li
845.05 253.135 li
840.216 253.135 li
840.216 248.301 li
cp
847.55 207.968 mo
852.382 207.968 li
852.382 212.801 li
847.55 212.801 li
847.55 207.968 li
cp
844.216 233.718 mo
849.05 233.718 li
849.05 238.551 li
844.216 238.551 li
844.216 233.718 li
cp
841.132 186.968 mo
845.966 186.968 li
845.966 191.801 li
841.132 191.801 li
841.132 186.968 li
cp
818.132 195.551 mo
822.966 195.551 li
822.966 200.385 li
818.132 200.385 li
818.132 195.551 li
cp
834.216 269.218 mo
839.05 269.218 li
839.05 274.051 li
834.216 274.051 li
834.216 269.218 li
cp
826.3 201.718 mo
831.132 201.718 li
831.132 206.551 li
826.3 206.551 li
826.3 201.718 li
cp
839.216 210.551 mo
844.05 210.551 li
844.05 215.385 li
839.216 215.385 li
839.216 210.551 li
cp
847.132 162.385 mo
851.966 162.385 li
851.966 167.218 li
847.132 167.218 li
847.132 162.385 li
cp
846.216 193.468 mo
851.05 193.468 li
851.05 198.301 li
846.216 198.301 li
846.216 193.468 li
cp
856.05 209.968 mo
860.882 209.968 li
860.882 214.801 li
856.05 214.801 li
856.05 209.968 li
cp
855.466 176.051 mo
860.3 176.051 li
860.3 180.885 li
855.466 180.885 li
855.466 176.051 li
cp
847.3 247.468 mo
852.132 247.468 li
852.132 252.301 li
847.3 252.301 li
847.3 247.468 li
cp
856.882 244.551 mo
861.716 244.551 li
861.716 249.385 li
856.882 249.385 li
856.882 244.551 li
cp
858.382 168.885 mo
863.216 168.885 li
863.216 173.718 li
858.382 173.718 li
858.382 168.885 li
cp
837.632 204.301 mo
842.466 204.301 li
842.466 209.135 li
837.632 209.135 li
837.632 204.301 li
cp
838.3 181.885 mo
843.132 181.885 li
843.132 186.718 li
838.3 186.718 li
838.3 181.885 li
cp
845.882 205.385 mo
850.716 205.385 li
850.716 210.218 li
845.882 210.218 li
845.882 205.385 li
cp
843.216 266.051 mo
848.05 266.051 li
848.05 270.885 li
843.216 270.885 li
843.216 266.051 li
cp
849.882 222.301 mo
854.716 222.301 li
854.716 227.135 li
849.882 227.135 li
849.882 222.301 li
cp
851.716 206.135 mo
856.55 206.135 li
856.55 210.968 li
851.716 210.968 li
851.716 206.135 li
cp
827.716 167.218 mo
832.55 167.218 li
832.55 172.051 li
827.716 172.051 li
827.716 167.218 li
cp
858.3 223.885 mo
863.132 223.885 li
863.132 228.718 li
858.3 228.718 li
858.3 223.885 li
cp
854.55 220.051 mo
859.382 220.051 li
859.382 224.885 li
854.55 224.885 li
854.55 220.051 li
cp
843.466 188.301 mo
848.3 188.301 li
848.3 193.135 li
843.466 193.135 li
843.466 188.301 li
cp
857.216 266.635 mo
862.05 266.635 li
862.05 271.468 li
857.216 271.468 li
857.216 266.635 li
cp
621.548 287.468 mo
626.382 287.468 li
626.382 292.301 li
621.548 292.301 li
621.548 287.468 li
cp
858.3 319.468 mo
863.132 319.468 li
863.132 324.301 li
858.3 324.301 li
858.3 319.468 li
cp
857.466 320.051 mo
862.3 320.051 li
862.3 324.885 li
857.466 324.885 li
857.466 320.051 li
cp
859.216 317.468 mo
864.05 317.468 li
864.05 322.301 li
859.216 322.301 li
859.216 317.468 li
cp
858.55 318.468 mo
863.382 318.468 li
863.382 323.301 li
858.55 323.301 li
858.55 318.468 li
cp
0 0 0 .5 cmyk
f
841.466 240.301 mo
841.466 240.801 li
845.8 240.801 li
845.8 244.635 li
841.966 244.635 li
841.966 240.301 li
841.466 240.301 li
841.466 240.801 li
841.466 240.301 li
840.966 240.301 li
840.966 245.635 li
846.8 245.635 li
846.8 239.801 li
840.966 239.801 li
840.966 240.301 li
841.466 240.301 li
cp
852.882 207.385 mo
852.882 207.885 li
857.216 207.885 li
857.216 211.718 li
853.382 211.718 li
853.382 207.385 li
852.882 207.385 li
852.882 207.885 li
852.882 207.385 li
852.382 207.385 li
852.382 212.718 li
858.216 212.718 li
858.216 206.885 li
852.382 206.885 li
852.382 207.385 li
852.882 207.385 li
cp
839.216 217.301 mo
839.216 217.801 li
843.55 217.801 li
843.55 221.635 li
839.716 221.635 li
839.716 217.301 li
839.216 217.301 li
839.216 217.801 li
839.216 217.301 li
838.716 217.301 li
838.716 222.635 li
844.55 222.635 li
844.55 216.801 li
838.716 216.801 li
838.716 217.301 li
839.216 217.301 li
cp
850.216 177.218 mo
850.216 177.718 li
854.55 177.718 li
854.55 181.551 li
850.716 181.551 li
850.716 177.218 li
850.216 177.218 li
850.216 177.718 li
850.216 177.218 li
849.716 177.218 li
849.716 182.551 li
855.55 182.551 li
855.55 176.718 li
849.716 176.718 li
849.716 177.218 li
850.216 177.218 li
cp
850.8 196.635 mo
850.8 197.135 li
855.132 197.135 li
855.132 200.968 li
851.3 200.968 li
851.3 196.635 li
850.8 196.635 li
850.8 197.135 li
850.8 196.635 li
850.3 196.635 li
850.3 201.968 li
856.132 201.968 li
856.132 196.135 li
850.3 196.135 li
850.3 196.635 li
850.8 196.635 li
cp
840.132 190.801 mo
840.132 191.301 li
844.466 191.301 li
844.466 195.135 li
840.632 195.135 li
840.632 190.801 li
840.132 190.801 li
840.132 191.301 li
840.132 190.801 li
839.632 190.801 li
839.632 196.135 li
845.466 196.135 li
845.466 190.301 li
839.632 190.301 li
839.632 190.801 li
840.132 190.801 li
cp
836.05 194.301 mo
836.05 194.801 li
840.382 194.801 li
840.382 198.635 li
836.55 198.635 li
836.55 194.301 li
836.05 194.301 li
836.05 194.801 li
836.05 194.301 li
835.55 194.301 li
835.55 199.635 li
841.382 199.635 li
841.382 193.801 li
835.55 193.801 li
835.55 194.301 li
836.05 194.301 li
cp
855.882 182.801 mo
855.882 183.301 li
860.216 183.301 li
860.216 187.135 li
856.382 187.135 li
856.382 182.801 li
855.882 182.801 li
855.882 183.301 li
855.882 182.801 li
855.382 182.801 li
855.382 188.135 li
861.216 188.135 li
861.216 182.301 li
855.382 182.301 li
855.382 182.801 li
855.882 182.801 li
cp
857.3 269.968 mo
857.3 270.468 li
861.632 270.468 li
861.632 274.301 li
857.8 274.301 li
857.8 269.968 li
857.3 269.968 li
857.3 270.468 li
857.3 269.968 li
856.8 269.968 li
856.8 275.301 li
862.632 275.301 li
862.632 269.468 li
856.8 269.468 li
856.8 269.968 li
857.3 269.968 li
cp
855.632 249.635 mo
855.632 250.135 li
859.966 250.135 li
859.966 253.968 li
856.132 253.968 li
856.132 249.635 li
855.632 249.635 li
855.632 250.135 li
855.632 249.635 li
855.132 249.635 li
855.132 254.968 li
860.966 254.968 li
860.966 249.135 li
855.132 249.135 li
855.132 249.635 li
855.632 249.635 li
cp
799.132 167.551 mo
799.132 168.051 li
803.466 168.051 li
803.466 171.885 li
799.632 171.885 li
799.632 167.551 li
799.132 167.551 li
799.132 168.051 li
799.132 167.551 li
798.632 167.551 li
798.632 172.885 li
804.466 172.885 li
804.466 167.051 li
798.632 167.051 li
798.632 167.551 li
799.132 167.551 li
cp
858.632 282.968 mo
858.632 283.468 li
862.966 283.468 li
862.966 287.301 li
859.132 287.301 li
859.132 282.968 li
858.632 282.968 li
858.632 283.468 li
858.632 282.968 li
858.132 282.968 li
858.132 288.301 li
863.966 288.301 li
863.966 282.468 li
858.132 282.468 li
858.132 282.968 li
858.632 282.968 li
cp
827.132 165.135 mo
827.132 165.635 li
831.466 165.635 li
831.466 169.468 li
827.632 169.468 li
827.632 165.135 li
827.132 165.135 li
827.132 165.635 li
827.132 165.135 li
826.632 165.135 li
826.632 170.468 li
832.466 170.468 li
832.466 164.635 li
826.632 164.635 li
826.632 165.135 li
827.132 165.135 li
cp
838.716 227.135 mo
838.716 227.635 li
843.05 227.635 li
843.05 231.468 li
839.216 231.468 li
839.216 227.135 li
838.716 227.135 li
838.716 227.635 li
838.716 227.135 li
838.216 227.135 li
838.216 232.468 li
844.05 232.468 li
844.05 226.635 li
838.216 226.635 li
838.216 227.135 li
838.716 227.135 li
cp
846.216 207.551 mo
846.216 208.051 li
850.55 208.051 li
850.55 211.885 li
846.716 211.885 li
846.716 207.551 li
846.216 207.551 li
846.216 208.051 li
846.216 207.551 li
845.716 207.551 li
845.716 212.885 li
851.55 212.885 li
851.55 207.051 li
845.716 207.051 li
845.716 207.551 li
846.216 207.551 li
cp
837.216 184.218 mo
837.216 184.718 li
841.55 184.718 li
841.55 188.551 li
837.716 188.551 li
837.716 184.218 li
837.216 184.218 li
837.216 184.718 li
837.216 184.218 li
836.716 184.218 li
836.716 189.551 li
842.55 189.551 li
842.55 183.718 li
836.716 183.718 li
836.716 184.218 li
837.216 184.218 li
cp
835.8 219.718 mo
835.8 220.218 li
840.132 220.218 li
840.132 224.051 li
836.3 224.051 li
836.3 219.718 li
835.8 219.718 li
835.8 220.218 li
835.8 219.718 li
835.3 219.718 li
835.3 225.051 li
841.132 225.051 li
841.132 219.218 li
835.3 219.218 li
835.3 219.718 li
835.8 219.718 li
cp
852.216 248.051 mo
852.216 248.551 li
856.55 248.551 li
856.55 252.385 li
852.716 252.385 li
852.716 248.051 li
852.216 248.051 li
852.216 248.551 li
852.216 248.051 li
851.716 248.051 li
851.716 253.385 li
857.55 253.385 li
857.55 247.551 li
851.716 247.551 li
851.716 248.051 li
852.216 248.051 li
cp
854.382 207.218 mo
854.382 207.718 li
858.716 207.718 li
858.716 211.551 li
854.882 211.551 li
854.882 207.218 li
854.382 207.218 li
854.382 207.718 li
854.382 207.218 li
853.882 207.218 li
853.882 212.551 li
859.716 212.551 li
859.716 206.718 li
853.882 206.718 li
853.882 207.218 li
854.382 207.218 li
cp
831.55 259.218 mo
831.55 259.718 li
835.882 259.718 li
835.882 263.551 li
832.05 263.551 li
832.05 259.218 li
831.55 259.218 li
831.55 259.718 li
831.55 259.218 li
831.05 259.218 li
831.05 264.551 li
836.882 264.551 li
836.882 258.718 li
831.05 258.718 li
831.05 259.218 li
831.55 259.218 li
cp
842.05 207.051 mo
842.05 207.551 li
846.382 207.551 li
846.382 211.385 li
842.55 211.385 li
842.55 207.051 li
842.05 207.051 li
842.05 207.551 li
842.05 207.051 li
841.55 207.051 li
841.55 212.385 li
847.382 212.385 li
847.382 206.551 li
841.55 206.551 li
841.55 207.051 li
842.05 207.051 li
cp
856.8 168.801 mo
856.8 169.301 li
861.132 169.301 li
861.132 173.135 li
857.3 173.135 li
857.3 168.801 li
856.8 168.801 li
856.8 169.301 li
856.8 168.801 li
856.3 168.801 li
856.3 174.135 li
862.132 174.135 li
862.132 168.301 li
856.3 168.301 li
856.3 168.801 li
856.8 168.801 li
cp
855.55 198.718 mo
855.55 199.218 li
859.882 199.218 li
859.882 203.051 li
856.05 203.051 li
856.05 198.718 li
855.55 198.718 li
855.55 199.218 li
855.55 198.718 li
855.05 198.718 li
855.05 204.051 li
860.882 204.051 li
860.882 198.218 li
855.05 198.218 li
855.05 198.718 li
855.55 198.718 li
cp
805.966 220.218 mo
805.966 220.718 li
810.3 220.718 li
810.3 224.551 li
806.466 224.551 li
806.466 220.218 li
805.966 220.218 li
805.966 220.718 li
805.966 220.218 li
805.466 220.218 li
805.466 225.551 li
811.3 225.551 li
811.3 219.718 li
805.466 219.718 li
805.466 220.218 li
805.966 220.218 li
cp
841.132 179.051 mo
841.132 179.551 li
845.466 179.551 li
845.466 183.385 li
841.632 183.385 li
841.632 179.051 li
841.132 179.051 li
841.132 179.551 li
841.132 179.051 li
840.632 179.051 li
840.632 184.385 li
846.466 184.385 li
846.466 178.551 li
840.632 178.551 li
840.632 179.051 li
841.132 179.051 li
cp
820.05 214.468 mo
820.05 214.968 li
824.382 214.968 li
824.382 218.801 li
820.55 218.801 li
820.55 214.468 li
820.05 214.468 li
820.05 214.968 li
820.05 214.468 li
819.55 214.468 li
819.55 219.801 li
825.382 219.801 li
825.382 213.968 li
819.55 213.968 li
819.55 214.468 li
820.05 214.468 li
cp
843.05 148.635 mo
843.05 149.135 li
847.382 149.135 li
847.382 152.968 li
843.55 152.968 li
843.55 148.635 li
843.05 148.635 li
843.05 149.135 li
843.05 148.635 li
842.55 148.635 li
842.55 153.968 li
848.382 153.968 li
848.382 148.135 li
842.55 148.135 li
842.55 148.635 li
843.05 148.635 li
cp
836.8 229.218 mo
836.8 229.718 li
841.132 229.718 li
841.132 233.551 li
837.3 233.551 li
837.3 229.218 li
836.8 229.218 li
836.8 229.718 li
836.8 229.218 li
836.3 229.218 li
836.3 234.551 li
842.132 234.551 li
842.132 228.718 li
836.3 228.718 li
836.3 229.218 li
836.8 229.218 li
cp
850.382 253.968 mo
850.382 254.468 li
854.716 254.468 li
854.716 258.301 li
850.882 258.301 li
850.882 253.968 li
850.382 253.968 li
850.382 254.468 li
850.382 253.968 li
849.882 253.968 li
849.882 259.301 li
855.716 259.301 li
855.716 253.468 li
849.882 253.468 li
849.882 253.968 li
850.382 253.968 li
cp
837.882 150.468 mo
837.882 150.968 li
842.216 150.968 li
842.216 154.801 li
838.382 154.801 li
838.382 150.468 li
837.882 150.468 li
837.882 150.968 li
837.882 150.468 li
837.382 150.468 li
837.382 155.801 li
843.216 155.801 li
843.216 149.968 li
837.382 149.968 li
837.382 150.468 li
837.882 150.468 li
cp
856.05 198.385 mo
856.05 198.885 li
860.382 198.885 li
860.382 202.718 li
856.55 202.718 li
856.55 198.385 li
856.05 198.385 li
856.05 198.885 li
856.05 198.385 li
855.55 198.385 li
855.55 203.718 li
861.382 203.718 li
861.382 197.885 li
855.55 197.885 li
855.55 198.385 li
856.05 198.385 li
cp
830.882 219.051 mo
830.882 219.551 li
835.216 219.551 li
835.216 223.385 li
831.382 223.385 li
831.382 219.051 li
830.882 219.051 li
830.882 219.551 li
830.882 219.051 li
830.382 219.051 li
830.382 224.385 li
836.216 224.385 li
836.216 218.551 li
830.382 218.551 li
830.382 219.051 li
830.882 219.051 li
cp
838.3 175.718 mo
838.3 176.218 li
842.632 176.218 li
842.632 180.051 li
838.8 180.051 li
838.8 175.718 li
838.3 175.718 li
838.3 176.218 li
838.3 175.718 li
837.8 175.718 li
837.8 181.051 li
843.632 181.051 li
843.632 175.218 li
837.8 175.218 li
837.8 175.718 li
838.3 175.718 li
cp
856.216 219.135 mo
856.216 219.635 li
860.55 219.635 li
860.55 223.468 li
856.716 223.468 li
856.716 219.135 li
856.216 219.135 li
856.216 219.635 li
856.216 219.135 li
855.716 219.135 li
855.716 224.468 li
861.55 224.468 li
861.55 218.635 li
855.716 218.635 li
855.716 219.135 li
856.216 219.135 li
cp
847.216 280.385 mo
847.216 280.885 li
851.55 280.885 li
851.55 284.718 li
847.716 284.718 li
847.716 280.385 li
847.216 280.385 li
847.216 280.885 li
847.216 280.385 li
846.716 280.385 li
846.716 285.718 li
852.55 285.718 li
852.55 279.885 li
846.716 279.885 li
846.716 280.385 li
847.216 280.385 li
cp
852.966 237.468 mo
852.966 237.968 li
857.3 237.968 li
857.3 241.801 li
853.466 241.801 li
853.466 237.468 li
852.966 237.468 li
852.966 237.968 li
852.966 237.468 li
852.466 237.468 li
852.466 242.801 li
858.3 242.801 li
858.3 236.968 li
852.466 236.968 li
852.466 237.468 li
852.966 237.468 li
cp
843.632 180.551 mo
843.632 181.051 li
847.966 181.051 li
847.966 184.885 li
844.132 184.885 li
844.132 180.551 li
843.632 180.551 li
843.632 181.051 li
843.632 180.551 li
843.132 180.551 li
843.132 185.885 li
848.966 185.885 li
848.966 180.051 li
843.132 180.051 li
843.132 180.551 li
843.632 180.551 li
cp
843.716 264.635 mo
843.716 265.135 li
848.05 265.135 li
848.05 268.968 li
844.216 268.968 li
844.216 264.635 li
843.716 264.635 li
843.716 265.135 li
843.716 264.635 li
843.216 264.635 li
843.216 269.968 li
849.05 269.968 li
849.05 264.135 li
843.216 264.135 li
843.216 264.635 li
843.716 264.635 li
cp
823.716 171.885 mo
823.716 172.385 li
828.05 172.385 li
828.05 176.218 li
824.216 176.218 li
824.216 171.885 li
823.716 171.885 li
823.716 172.385 li
823.716 171.885 li
823.216 171.885 li
823.216 177.218 li
829.05 177.218 li
829.05 171.385 li
823.216 171.385 li
823.216 171.885 li
823.716 171.885 li
cp
839.55 264.801 mo
839.55 265.301 li
843.882 265.301 li
843.882 269.135 li
840.05 269.135 li
840.05 264.801 li
839.55 264.801 li
839.55 265.301 li
839.55 264.801 li
839.05 264.801 li
839.05 270.135 li
844.882 270.135 li
844.882 264.301 li
839.05 264.301 li
839.05 264.801 li
839.55 264.801 li
cp
830.882 245.218 mo
830.882 245.718 li
835.216 245.718 li
835.216 249.551 li
831.382 249.551 li
831.382 245.218 li
830.882 245.218 li
830.882 245.718 li
830.882 245.218 li
830.382 245.218 li
830.382 250.551 li
836.216 250.551 li
836.216 244.718 li
830.382 244.718 li
830.382 245.218 li
830.882 245.218 li
cp
855.716 208.218 mo
855.716 208.718 li
860.05 208.718 li
860.05 212.551 li
856.216 212.551 li
856.216 208.218 li
855.716 208.218 li
855.716 208.718 li
855.716 208.218 li
855.216 208.218 li
855.216 213.551 li
861.05 213.551 li
861.05 207.718 li
855.216 207.718 li
855.216 208.218 li
855.716 208.218 li
cp
826.966 226.885 mo
826.966 227.385 li
831.3 227.385 li
831.3 231.218 li
827.466 231.218 li
827.466 226.885 li
826.966 226.885 li
826.966 227.385 li
826.966 226.885 li
826.466 226.885 li
826.466 232.218 li
832.3 232.218 li
832.3 226.385 li
826.466 226.385 li
826.466 226.885 li
826.966 226.885 li
cp
851.216 175.218 mo
851.216 175.718 li
855.55 175.718 li
855.55 179.551 li
851.716 179.551 li
851.716 175.218 li
851.216 175.218 li
851.216 175.718 li
851.216 175.218 li
850.716 175.218 li
850.716 180.551 li
856.55 180.551 li
856.55 174.718 li
850.716 174.718 li
850.716 175.218 li
851.216 175.218 li
cp
840.966 246.468 mo
840.966 246.968 li
845.3 246.968 li
845.3 250.801 li
841.466 250.801 li
841.466 246.468 li
840.966 246.468 li
840.966 246.968 li
840.966 246.468 li
840.466 246.468 li
840.466 251.801 li
846.3 251.801 li
846.3 245.968 li
840.466 245.968 li
840.466 246.468 li
840.966 246.468 li
cp
837.8 251.801 mo
837.8 252.301 li
842.132 252.301 li
842.132 256.135 li
838.3 256.135 li
838.3 251.801 li
837.8 251.801 li
837.8 252.301 li
837.8 251.801 li
837.3 251.801 li
837.3 257.135 li
843.132 257.135 li
843.132 251.301 li
837.3 251.301 li
837.3 251.801 li
837.8 251.801 li
cp
855.382 187.801 mo
855.382 188.301 li
859.716 188.301 li
859.716 192.135 li
855.882 192.135 li
855.882 187.801 li
855.382 187.801 li
855.382 188.301 li
855.382 187.801 li
854.882 187.801 li
854.882 193.135 li
860.716 193.135 li
860.716 187.301 li
854.882 187.301 li
854.882 187.801 li
855.382 187.801 li
cp
833.382 265.801 mo
833.382 266.301 li
837.716 266.301 li
837.716 270.135 li
833.882 270.135 li
833.882 265.801 li
833.382 265.801 li
833.382 266.301 li
833.382 265.801 li
832.882 265.801 li
832.882 271.135 li
838.716 271.135 li
838.716 265.301 li
832.882 265.301 li
832.882 265.801 li
833.382 265.801 li
cp
798.632 174.635 mo
798.632 175.135 li
802.966 175.135 li
802.966 178.968 li
799.132 178.968 li
799.132 174.635 li
798.632 174.635 li
798.632 175.135 li
798.632 174.635 li
798.132 174.635 li
798.132 179.968 li
803.966 179.968 li
803.966 174.135 li
798.132 174.135 li
798.132 174.635 li
798.632 174.635 li
cp
852.55 260.135 mo
852.55 260.635 li
856.882 260.635 li
856.882 264.468 li
853.05 264.468 li
853.05 260.135 li
852.55 260.135 li
852.55 260.635 li
852.55 260.135 li
852.05 260.135 li
852.05 265.468 li
857.882 265.468 li
857.882 259.635 li
852.05 259.635 li
852.05 260.135 li
852.55 260.135 li
cp
857.466 244.968 mo
857.466 245.468 li
861.8 245.468 li
861.8 249.301 li
857.966 249.301 li
857.966 244.968 li
857.466 244.968 li
857.466 245.468 li
857.466 244.968 li
856.966 244.968 li
856.966 250.301 li
862.8 250.301 li
862.8 244.468 li
856.966 244.468 li
856.966 244.968 li
857.466 244.968 li
cp
836.716 184.051 mo
836.716 184.551 li
841.05 184.551 li
841.05 188.385 li
837.216 188.385 li
837.216 184.051 li
836.716 184.051 li
836.716 184.551 li
836.716 184.051 li
836.216 184.051 li
836.216 189.385 li
842.05 189.385 li
842.05 183.551 li
836.216 183.551 li
836.216 184.051 li
836.716 184.051 li
cp
855.882 253.301 mo
855.882 253.801 li
860.216 253.801 li
860.216 257.635 li
856.382 257.635 li
856.382 253.301 li
855.882 253.301 li
855.882 253.801 li
855.882 253.301 li
855.382 253.301 li
855.382 258.635 li
861.216 258.635 li
861.216 252.801 li
855.382 252.801 li
855.382 253.301 li
855.882 253.301 li
cp
841.716 237.968 mo
841.716 238.468 li
846.05 238.468 li
846.05 242.301 li
842.216 242.301 li
842.216 237.968 li
841.716 237.968 li
841.716 238.468 li
841.716 237.968 li
841.216 237.968 li
841.216 243.301 li
847.05 243.301 li
847.05 237.468 li
841.216 237.468 li
841.216 237.968 li
841.716 237.968 li
cp
847.882 207.551 mo
847.882 208.051 li
852.216 208.051 li
852.216 211.885 li
848.382 211.885 li
848.382 207.551 li
847.882 207.551 li
847.882 208.051 li
847.882 207.551 li
847.382 207.551 li
847.382 212.885 li
853.216 212.885 li
853.216 207.051 li
847.382 207.051 li
847.382 207.551 li
847.882 207.551 li
cp
818.3 234.301 mo
818.3 234.801 li
822.632 234.801 li
822.632 238.635 li
818.8 238.635 li
818.8 234.301 li
818.3 234.301 li
818.3 234.801 li
818.3 234.301 li
817.8 234.301 li
817.8 239.635 li
823.632 239.635 li
823.632 233.801 li
817.8 233.801 li
817.8 234.301 li
818.3 234.301 li
cp
857.05 228.385 mo
857.05 228.885 li
861.382 228.885 li
861.382 232.718 li
857.55 232.718 li
857.55 228.385 li
857.05 228.385 li
857.05 228.885 li
857.05 228.385 li
856.55 228.385 li
856.55 233.718 li
862.382 233.718 li
862.382 227.885 li
856.55 227.885 li
856.55 228.385 li
857.05 228.385 li
cp
852.05 161.718 mo
852.05 162.218 li
856.382 162.218 li
856.382 166.051 li
852.55 166.051 li
852.55 161.718 li
852.05 161.718 li
852.05 162.218 li
852.05 161.718 li
851.55 161.718 li
851.55 167.051 li
857.382 167.051 li
857.382 161.218 li
851.55 161.218 li
851.55 161.718 li
852.05 161.718 li
cp
847.632 126.968 mo
847.632 127.468 li
851.966 127.468 li
851.966 131.301 li
848.132 131.301 li
848.132 126.968 li
847.632 126.968 li
847.632 127.468 li
847.632 126.968 li
847.132 126.968 li
847.132 132.301 li
852.966 132.301 li
852.966 126.468 li
847.132 126.468 li
847.132 126.968 li
847.632 126.968 li
cp
844.382 173.635 mo
844.382 174.135 li
848.716 174.135 li
848.716 177.968 li
844.882 177.968 li
844.882 173.635 li
844.382 173.635 li
844.382 174.135 li
844.382 173.635 li
843.882 173.635 li
843.882 178.968 li
849.716 178.968 li
849.716 173.135 li
843.882 173.135 li
843.882 173.635 li
844.382 173.635 li
cp
833.05 201.968 mo
833.05 202.468 li
837.382 202.468 li
837.382 206.301 li
833.55 206.301 li
833.55 201.968 li
833.05 201.968 li
833.05 202.468 li
833.05 201.968 li
832.55 201.968 li
832.55 207.301 li
838.382 207.301 li
838.382 201.468 li
832.55 201.468 li
832.55 201.968 li
833.05 201.968 li
cp
801.466 201.718 mo
801.466 202.218 li
805.8 202.218 li
805.8 206.051 li
801.966 206.051 li
801.966 201.718 li
801.466 201.718 li
801.466 202.218 li
801.466 201.718 li
800.966 201.718 li
800.966 207.051 li
806.8 207.051 li
806.8 201.218 li
800.966 201.218 li
800.966 201.718 li
801.466 201.718 li
cp
855.966 230.551 mo
855.966 231.051 li
860.3 231.051 li
860.3 234.885 li
856.466 234.885 li
856.466 230.551 li
855.966 230.551 li
855.966 231.051 li
855.966 230.551 li
855.466 230.551 li
855.466 235.885 li
861.3 235.885 li
861.3 230.051 li
855.466 230.051 li
855.466 230.551 li
855.966 230.551 li
cp
848.882 216.551 mo
848.882 217.051 li
853.216 217.051 li
853.216 220.885 li
849.382 220.885 li
849.382 216.551 li
848.882 216.551 li
848.882 217.051 li
848.882 216.551 li
848.382 216.551 li
848.382 221.885 li
854.216 221.885 li
854.216 216.051 li
848.382 216.051 li
848.382 216.551 li
848.882 216.551 li
cp
757.548 165.718 mo
757.548 166.218 li
761.882 166.218 li
761.882 170.051 li
758.048 170.051 li
758.048 165.718 li
757.548 165.718 li
757.548 166.218 li
757.548 165.718 li
757.048 165.718 li
757.048 171.051 li
762.882 171.051 li
762.882 165.218 li
757.048 165.218 li
757.048 165.718 li
757.548 165.718 li
cp
849.382 220.635 mo
849.382 221.135 li
853.716 221.135 li
853.716 224.968 li
849.882 224.968 li
849.882 220.635 li
849.382 220.635 li
849.382 221.135 li
849.382 220.635 li
848.882 220.635 li
848.882 225.968 li
854.716 225.968 li
854.716 220.135 li
848.882 220.135 li
848.882 220.635 li
849.382 220.635 li
cp
835.216 180.051 mo
835.216 180.551 li
839.55 180.551 li
839.55 184.385 li
835.716 184.385 li
835.716 180.051 li
835.216 180.051 li
835.216 180.551 li
835.216 180.051 li
834.716 180.051 li
834.716 185.385 li
840.55 185.385 li
840.55 179.551 li
834.716 179.551 li
834.716 180.051 li
835.216 180.051 li
cp
844.216 188.135 mo
844.216 188.635 li
848.55 188.635 li
848.55 192.468 li
844.716 192.468 li
844.716 188.135 li
844.216 188.135 li
844.216 188.635 li
844.216 188.135 li
843.716 188.135 li
843.716 193.468 li
849.55 193.468 li
849.55 187.635 li
843.716 187.635 li
843.716 188.135 li
844.216 188.135 li
cp
817.216 257.801 mo
817.216 258.301 li
821.55 258.301 li
821.55 262.135 li
817.716 262.135 li
817.716 257.801 li
817.216 257.801 li
817.216 258.301 li
817.216 257.801 li
816.716 257.801 li
816.716 263.135 li
822.55 263.135 li
822.55 257.301 li
816.716 257.301 li
816.716 257.801 li
817.216 257.801 li
cp
850.55 238.718 mo
850.55 239.218 li
854.882 239.218 li
854.882 243.051 li
851.05 243.051 li
851.05 238.718 li
850.55 238.718 li
850.55 239.218 li
850.55 238.718 li
850.05 238.718 li
850.05 244.051 li
855.882 244.051 li
855.882 238.218 li
850.05 238.218 li
850.05 238.718 li
850.55 238.718 li
cp
833.8 218.718 mo
833.8 219.218 li
838.132 219.218 li
838.132 223.051 li
834.3 223.051 li
834.3 218.718 li
833.8 218.718 li
833.8 219.218 li
833.8 218.718 li
833.3 218.718 li
833.3 224.051 li
839.132 224.051 li
839.132 218.218 li
833.3 218.218 li
833.3 218.718 li
833.8 218.718 li
cp
858.216 235.301 mo
858.216 235.801 li
862.55 235.801 li
862.55 239.635 li
858.716 239.635 li
858.716 235.301 li
858.216 235.301 li
858.216 235.801 li
858.216 235.301 li
857.716 235.301 li
857.716 240.635 li
863.55 240.635 li
863.55 234.801 li
857.716 234.801 li
857.716 235.301 li
858.216 235.301 li
cp
842.05 243.635 mo
842.05 244.135 li
846.382 244.135 li
846.382 247.968 li
842.55 247.968 li
842.55 243.635 li
842.05 243.635 li
842.05 244.135 li
842.05 243.635 li
841.55 243.635 li
841.55 248.968 li
847.382 248.968 li
847.382 243.135 li
841.55 243.135 li
841.55 243.635 li
842.05 243.635 li
cp
830.05 254.801 mo
830.05 255.301 li
834.382 255.301 li
834.382 259.135 li
830.55 259.135 li
830.55 254.801 li
830.05 254.801 li
830.05 255.301 li
830.05 254.801 li
829.55 254.801 li
829.55 260.135 li
835.382 260.135 li
835.382 254.301 li
829.55 254.301 li
829.55 254.801 li
830.05 254.801 li
cp
812.466 241.968 mo
812.466 242.468 li
816.8 242.468 li
816.8 246.301 li
812.966 246.301 li
812.966 241.968 li
812.466 241.968 li
812.466 242.468 li
812.466 241.968 li
811.966 241.968 li
811.966 247.301 li
817.8 247.301 li
817.8 241.468 li
811.966 241.468 li
811.966 241.968 li
812.466 241.968 li
cp
859.466 262.385 mo
859.466 262.885 li
863.8 262.885 li
863.8 266.718 li
859.966 266.718 li
859.966 262.385 li
859.466 262.385 li
859.466 262.885 li
859.466 262.385 li
858.966 262.385 li
858.966 267.718 li
864.8 267.718 li
864.8 261.885 li
858.966 261.885 li
858.966 262.385 li
859.466 262.385 li
cp
845.3 249.051 mo
845.3 249.551 li
849.632 249.551 li
849.632 253.385 li
845.8 253.385 li
845.8 249.051 li
845.3 249.051 li
845.3 249.551 li
845.3 249.051 li
844.8 249.051 li
844.8 254.385 li
850.632 254.385 li
850.632 248.551 li
844.8 248.551 li
844.8 249.051 li
845.3 249.051 li
cp
856.8 273.301 mo
856.8 273.801 li
861.132 273.801 li
861.132 277.635 li
857.3 277.635 li
857.3 273.301 li
856.8 273.301 li
856.8 273.801 li
856.8 273.301 li
856.3 273.301 li
856.3 278.635 li
862.132 278.635 li
862.132 272.801 li
856.3 272.801 li
856.3 273.301 li
856.8 273.301 li
cp
840.216 248.301 mo
840.216 248.801 li
844.55 248.801 li
844.55 252.635 li
840.716 252.635 li
840.716 248.301 li
840.216 248.301 li
840.216 248.801 li
840.216 248.301 li
839.716 248.301 li
839.716 253.635 li
845.55 253.635 li
845.55 247.801 li
839.716 247.801 li
839.716 248.301 li
840.216 248.301 li
cp
847.55 207.968 mo
847.55 208.468 li
851.882 208.468 li
851.882 212.301 li
848.05 212.301 li
848.05 207.968 li
847.55 207.968 li
847.55 208.468 li
847.55 207.968 li
847.05 207.968 li
847.05 213.301 li
852.882 213.301 li
852.882 207.468 li
847.05 207.468 li
847.05 207.968 li
847.55 207.968 li
cp
844.216 233.718 mo
844.216 234.218 li
848.55 234.218 li
848.55 238.051 li
844.716 238.051 li
844.716 233.718 li
844.216 233.718 li
844.216 234.218 li
844.216 233.718 li
843.716 233.718 li
843.716 239.051 li
849.55 239.051 li
849.55 233.218 li
843.716 233.218 li
843.716 233.718 li
844.216 233.718 li
cp
841.132 186.968 mo
841.132 187.468 li
845.466 187.468 li
845.466 191.301 li
841.632 191.301 li
841.632 186.968 li
841.132 186.968 li
841.132 187.468 li
841.132 186.968 li
840.632 186.968 li
840.632 192.301 li
846.466 192.301 li
846.466 186.468 li
840.632 186.468 li
840.632 186.968 li
841.132 186.968 li
cp
818.132 195.551 mo
818.132 196.051 li
822.466 196.051 li
822.466 199.885 li
818.632 199.885 li
818.632 195.551 li
818.132 195.551 li
818.132 196.051 li
818.132 195.551 li
817.632 195.551 li
817.632 200.885 li
823.466 200.885 li
823.466 195.051 li
817.632 195.051 li
817.632 195.551 li
818.132 195.551 li
cp
834.216 269.218 mo
834.216 269.718 li
838.55 269.718 li
838.55 273.551 li
834.716 273.551 li
834.716 269.218 li
834.216 269.218 li
834.216 269.718 li
834.216 269.218 li
833.716 269.218 li
833.716 274.551 li
839.55 274.551 li
839.55 268.718 li
833.716 268.718 li
833.716 269.218 li
834.216 269.218 li
cp
826.3 201.718 mo
826.3 202.218 li
830.632 202.218 li
830.632 206.051 li
826.8 206.051 li
826.8 201.718 li
826.3 201.718 li
826.3 202.218 li
826.3 201.718 li
825.8 201.718 li
825.8 207.051 li
831.632 207.051 li
831.632 201.218 li
825.8 201.218 li
825.8 201.718 li
826.3 201.718 li
cp
839.216 210.551 mo
839.216 211.051 li
843.55 211.051 li
843.55 214.885 li
839.716 214.885 li
839.716 210.551 li
839.216 210.551 li
839.216 211.051 li
839.216 210.551 li
838.716 210.551 li
838.716 215.885 li
844.55 215.885 li
844.55 210.051 li
838.716 210.051 li
838.716 210.551 li
839.216 210.551 li
cp
847.132 162.385 mo
847.132 162.885 li
851.466 162.885 li
851.466 166.718 li
847.632 166.718 li
847.632 162.385 li
847.132 162.385 li
847.132 162.885 li
847.132 162.385 li
846.632 162.385 li
846.632 167.718 li
852.466 167.718 li
852.466 161.885 li
846.632 161.885 li
846.632 162.385 li
847.132 162.385 li
cp
846.216 193.468 mo
846.216 193.968 li
850.55 193.968 li
850.55 197.801 li
846.716 197.801 li
846.716 193.468 li
846.216 193.468 li
846.216 193.968 li
846.216 193.468 li
845.716 193.468 li
845.716 198.801 li
851.55 198.801 li
851.55 192.968 li
845.716 192.968 li
845.716 193.468 li
846.216 193.468 li
cp
856.05 209.968 mo
856.05 210.468 li
860.382 210.468 li
860.382 214.301 li
856.55 214.301 li
856.55 209.968 li
856.05 209.968 li
856.05 210.468 li
856.05 209.968 li
855.55 209.968 li
855.55 215.301 li
861.382 215.301 li
861.382 209.468 li
855.55 209.468 li
855.55 209.968 li
856.05 209.968 li
cp
855.466 176.051 mo
855.466 176.551 li
859.8 176.551 li
859.8 180.385 li
855.966 180.385 li
855.966 176.051 li
855.466 176.051 li
855.466 176.551 li
855.466 176.051 li
854.966 176.051 li
854.966 181.385 li
860.8 181.385 li
860.8 175.551 li
854.966 175.551 li
854.966 176.051 li
855.466 176.051 li
cp
847.3 247.468 mo
847.3 247.968 li
851.632 247.968 li
851.632 251.801 li
847.8 251.801 li
847.8 247.468 li
847.3 247.468 li
847.3 247.968 li
847.3 247.468 li
846.8 247.468 li
846.8 252.801 li
852.632 252.801 li
852.632 246.968 li
846.8 246.968 li
846.8 247.468 li
847.3 247.468 li
cp
856.882 244.551 mo
856.882 245.051 li
861.216 245.051 li
861.216 248.885 li
857.382 248.885 li
857.382 244.551 li
856.882 244.551 li
856.882 245.051 li
856.882 244.551 li
856.382 244.551 li
856.382 249.885 li
862.216 249.885 li
862.216 244.051 li
856.382 244.051 li
856.382 244.551 li
856.882 244.551 li
cp
858.382 168.885 mo
858.382 169.385 li
862.716 169.385 li
862.716 173.218 li
858.882 173.218 li
858.882 168.885 li
858.382 168.885 li
858.382 169.385 li
858.382 168.885 li
857.882 168.885 li
857.882 174.218 li
863.716 174.218 li
863.716 168.385 li
857.882 168.385 li
857.882 168.885 li
858.382 168.885 li
cp
837.632 204.301 mo
837.632 204.801 li
841.966 204.801 li
841.966 208.635 li
838.132 208.635 li
838.132 204.301 li
837.632 204.301 li
837.632 204.801 li
837.632 204.301 li
837.132 204.301 li
837.132 209.635 li
842.966 209.635 li
842.966 203.801 li
837.132 203.801 li
837.132 204.301 li
837.632 204.301 li
cp
838.3 181.885 mo
838.3 182.385 li
842.632 182.385 li
842.632 186.218 li
838.8 186.218 li
838.8 181.885 li
838.3 181.885 li
838.3 182.385 li
838.3 181.885 li
837.8 181.885 li
837.8 187.218 li
843.632 187.218 li
843.632 181.385 li
837.8 181.385 li
837.8 181.885 li
838.3 181.885 li
cp
845.882 205.385 mo
845.882 205.885 li
850.216 205.885 li
850.216 209.718 li
846.382 209.718 li
846.382 205.385 li
845.882 205.385 li
845.882 205.885 li
845.882 205.385 li
845.382 205.385 li
845.382 210.718 li
851.216 210.718 li
851.216 204.885 li
845.382 204.885 li
845.382 205.385 li
845.882 205.385 li
cp
843.216 266.051 mo
843.216 266.551 li
847.55 266.551 li
847.55 270.385 li
843.716 270.385 li
843.716 266.051 li
843.216 266.051 li
843.216 266.551 li
843.216 266.051 li
842.716 266.051 li
842.716 271.385 li
848.55 271.385 li
848.55 265.551 li
842.716 265.551 li
842.716 266.051 li
843.216 266.051 li
cp
849.882 222.301 mo
849.882 222.801 li
854.216 222.801 li
854.216 226.635 li
850.382 226.635 li
850.382 222.301 li
849.882 222.301 li
849.882 222.801 li
849.882 222.301 li
849.382 222.301 li
849.382 227.635 li
855.216 227.635 li
855.216 221.801 li
849.382 221.801 li
849.382 222.301 li
849.882 222.301 li
cp
851.716 206.135 mo
851.716 206.635 li
856.05 206.635 li
856.05 210.468 li
852.216 210.468 li
852.216 206.135 li
851.716 206.135 li
851.716 206.635 li
851.716 206.135 li
851.216 206.135 li
851.216 211.468 li
857.05 211.468 li
857.05 205.635 li
851.216 205.635 li
851.216 206.135 li
851.716 206.135 li
cp
827.716 167.218 mo
827.716 167.718 li
832.05 167.718 li
832.05 171.551 li
828.216 171.551 li
828.216 167.218 li
827.716 167.218 li
827.716 167.718 li
827.716 167.218 li
827.216 167.218 li
827.216 172.551 li
833.05 172.551 li
833.05 166.718 li
827.216 166.718 li
827.216 167.218 li
827.716 167.218 li
cp
858.3 223.885 mo
858.3 224.385 li
862.632 224.385 li
862.632 228.218 li
858.8 228.218 li
858.8 223.885 li
858.3 223.885 li
858.3 224.385 li
858.3 223.885 li
857.8 223.885 li
857.8 229.218 li
863.632 229.218 li
863.632 223.385 li
857.8 223.385 li
857.8 223.885 li
858.3 223.885 li
cp
854.55 220.051 mo
854.55 220.551 li
858.882 220.551 li
858.882 224.385 li
855.05 224.385 li
855.05 220.051 li
854.55 220.051 li
854.55 220.551 li
854.55 220.051 li
854.05 220.051 li
854.05 225.385 li
859.882 225.385 li
859.882 219.551 li
854.05 219.551 li
854.05 220.051 li
854.55 220.051 li
cp
843.466 188.301 mo
843.466 188.801 li
847.8 188.801 li
847.8 192.635 li
843.966 192.635 li
843.966 188.301 li
843.466 188.301 li
843.466 188.801 li
843.466 188.301 li
842.966 188.301 li
842.966 193.635 li
848.8 193.635 li
848.8 187.801 li
842.966 187.801 li
842.966 188.301 li
843.466 188.301 li
cp
857.216 266.635 mo
857.216 267.135 li
861.55 267.135 li
861.55 270.968 li
857.716 270.968 li
857.716 266.635 li
857.216 266.635 li
857.216 267.135 li
857.216 266.635 li
856.716 266.635 li
856.716 271.968 li
862.55 271.968 li
862.55 266.135 li
856.716 266.135 li
856.716 266.635 li
857.216 266.635 li
cp
621.548 287.468 mo
621.548 287.968 li
625.882 287.968 li
625.882 291.801 li
622.048 291.801 li
622.048 287.468 li
621.548 287.468 li
621.548 287.968 li
621.548 287.468 li
621.048 287.468 li
621.048 292.801 li
626.882 292.801 li
626.882 286.968 li
621.048 286.968 li
621.048 287.468 li
621.548 287.468 li
cp
858.3 319.468 mo
858.3 319.968 li
862.632 319.968 li
862.632 323.801 li
858.8 323.801 li
858.8 319.468 li
858.3 319.468 li
858.3 319.968 li
858.3 319.468 li
857.8 319.468 li
857.8 324.801 li
863.632 324.801 li
863.632 318.968 li
857.8 318.968 li
857.8 319.468 li
858.3 319.468 li
cp
857.466 320.051 mo
857.466 320.551 li
861.8 320.551 li
861.8 324.385 li
857.966 324.385 li
857.966 320.051 li
857.466 320.051 li
857.466 320.551 li
857.466 320.051 li
856.966 320.051 li
856.966 325.385 li
862.8 325.385 li
862.8 319.551 li
856.966 319.551 li
856.966 320.051 li
857.466 320.051 li
cp
859.216 317.468 mo
859.216 317.968 li
863.55 317.968 li
863.55 321.801 li
859.716 321.801 li
859.716 317.468 li
859.216 317.468 li
859.216 317.968 li
859.216 317.468 li
858.716 317.468 li
858.716 322.801 li
864.55 322.801 li
864.55 316.968 li
858.716 316.968 li
858.716 317.468 li
859.216 317.468 li
cp
858.55 318.468 mo
858.55 318.968 li
862.882 318.968 li
862.882 322.801 li
859.05 322.801 li
859.05 318.468 li
858.55 318.468 li
858.55 318.968 li
858.55 318.468 li
858.05 318.468 li
858.05 323.801 li
863.882 323.801 li
863.882 317.968 li
858.05 317.968 li
858.05 318.468 li
858.55 318.468 li
cp
0 0 0 1 cmyk
f
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLO+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6079F62DF5DCE91F4BDC34B1BD83B75605F2DD2714FE1CE7BAEBE63BFCF420A2FD3B9E37153E04FD2> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLO+Helvetica-Bold /Encoding getdup 72 /H putpop%ADOEndSubsetFont
/PTVRLO+Helvetica-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 13{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 2{/.notdef}rp /K /L 2{/.notdef}rp /O /P /.notdef /R 14{/.notdef}rp /a /b /c /.notdef /e /f /g /.notdef /i 4{/.notdef}rp /n /o /p 2{/.notdef}rp /s /t /u 138{/.notdef}rp]PTVRLO+Helvetica-Bold nfPTVRLO+Helvetica-Bold*1 [16 0 0 -16 0 0 ]msf653.066 399.507 mo(Caspase 3 Robustness Coefficient \(Log\))shPTVRLO+Helvetica-Bold*1 [0 -16 -16 0 0 0 ]msf549.691 304.413 mo(BCL2  Robustness Coeficient \(Log\))[-11.5547 -11.5547 -9.77344 -8.89844 -4.44531 -4.44531 -11.5547 -9.77344 -9.77344 -9.77344 -8.89844 -5.32813 -9.77344 -8.89844 -8.89844 -8.89844 -4.44531 -11.5547 -9.77344 -8.89844 -5.32813 -4.44531 -8.89844 -4.44531 -8.89844 -9.77344 -5.32813 -4.44531 -5.32813 -9.77344 -9.77344 -9.77344 0 ]yshPTVRLO+Helvetica-Bold*1 [16 0 0 -16 0 0 ]msf777.878 33.3828 mo(CHOP KO)shPTVRLO+Helvetica-Bold*1 [18 0 0 -18 0 0 ]msf54.9619 30.3516 mo(A)sh592.962 31.3516 mo(B)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginPTVRLN+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/C <1C60D8A8C9B6079F6D8209747A86332E73924F1B07F271169856A53C915771D7C530ADE68D8CA49F0A6B3478F9E8176949771F40D91B68E1A88C72CE81CC0A91B3CFB642960E7EB2127A1637D49961A11F5DD40622F39379CDAB7E5B349DF832E4955008C5E3208AB258B012A237635179513D820ACF76E0A17ED392C351599687E8E7D0> |-/F <1C60D8A8C9B7D8BE0123FD0A136BA0F480FD4287FFCF97986718886432AF2C7EB6A3F35B> |-/H <1C60D8A8C9B6079F4F4E07EFC7C894BAD912B65087B319FD4C6D4407FA6BDEE59584D043C3070AE38B> |-/O <1C60D8A8C9B6FF86FAE00AF1D2F86EE41080CA4FE58FE601E0C2094F12B2546E9E38BAEF65733BECF7148D0EA0DA88DD45A55274AD12A1DAB92015F88338234BE6A027107EEF674C9235BAD46D7DFF766B4165047A7FA440E1670CEEAAB2425BA29AB4CCAE0C0F708E15BAD5B5B8F2A1708072DEF2F49003A8347C8BC4E813779196F3AD613B7571> |-/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/W <1C60D8A8C9B5D6EF2BD09738A41AA6380C9765B88F07D3637E9EE67A95A81C558683DE1DD822B8DCC23EEF2BFD04340812EB686C4A78A7861A98B16FC19A> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/g <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/k <1C60D8A8C9B7A73D847F857A1BFD24ACB75840E5C7CBB8AB7BE870135525EBD6DBF4EAE3173F6ABCE16E75318AB6C78B406BDB> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendPTVRLN+Helvetica /Encoding getdup 32 /space putdup 45 /hyphen putdup 65 /A putdup 66 /B putdup 67 /C putdup 70 /F putdup 72 /H putdup 79 /O putdup 80 /P putdup 83 /S putdup 87 /W putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 103 /g putdup 105 /i putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/PTVRLN+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C 2{/.notdef}rp /F /.notdef /H 6{/.notdef}rp /O /P 2{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u 9{/.notdef}rp /minus 128{/.notdef}rp]PTVRLN+Helvetica nfPTVRLN+Helvetica*1 [14 0 0 -14 0 0 ]msf173.283 324.885 mo(Strong APAF-1 route)sh348.135 143.885 mo(Weak APAF-1 route)sh780.603 106.885 mo(Strong CHOP mediated )sh809.775 123.685 mo(Bcl2 regulation)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
/PTVRLN+Helvetica*1 uf/PTVRLN+Helvetica uf/Helvetica uf/PTVRLO+Helvetica-Bold*1 uf/PTVRLO+Helvetica-Bold uf/Helvetica-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Anirikh Chakrabarti) ()%%Title: (COUP_S1.eps)%%CreationDate: 5/6/11 10:29 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6LL0i"ec:#'+R]:[8eY+d<]V`(hF37C?Nd1kF8#A#GLi!h'%/0LpUU$cT<q:hXBBu&RL'*(]lCO3m_0K`s3CEc8b,H01jVr.%I*#nk#R"o01Nd@`'U,B#![V?EA24J1dkOEl'_G'S-7742@&_`tJ#V8Oae76bLVmT)di/^:^>e%0Y4&UbNp\`O[q_hiqj4M5Bf&&b%7k24?#SjJ@S\NZO]@g:>oK"RG5GJ1rPs-;aqjk1Lo(5n10DSjeGLT6'nC8BO,V^X_O-9EG(q2T/U[cs:3lq,]<#U3dSoM4mLT%td%lgU>?][q"D`\$idF^/eNIA,C_\<26[T?l'8#XJi@7RHJY%rVu'+J<*+'tcb0hqQ&rTJ:3U\rS#gjIk-)C(*;bED_UMfkcNNF\3uF%,u\OUJNS%JIe>d^Oc!dB8L^niPd16RT0eV^:F,.P.@*N&P6kSsb*!jp8eV.l*mc97rN!(".u.`Bg$XlH_[cgJPBN/*3'S7N\,Qs>%9hH[!Oh?i=BB,"5\EpY4Y4,4io&sMcV06lC=aRm2B`JE-HqF/b.<*ZO]W391S%[)aTU57]=:8dTl]&[0!J*HlE84O,(VM?Sj&CcK%09m5#Cjd.C;[LPnVarTf!d#We2(c(7;ErY8Fg4CIWWZ)DZl]h4n*P"QFtrr#*OK$3.\pW_L:lGA`%p+tQMm$8U61L+C6s)ciF_UV%Y=B::LZbIaM[tKDh*r?79p-+)U<6>7$4*Q@V8fHb5a'?I#lFYh/,VO3$l.0^U;1Oo"g?T1]G?Fl=%.[a7=i(.!d>B5goXQ6C%>4Q%"f5*Gpm+N<WDj3sV,EQcX#$6!1'kNAGg0jZl"h,-A[>2?5/Ab6.Me^WYm=,@Mf>RrKJJf"goXOR.<rF%Jbt]>H%tsYoU#3*Zq0W%%PO-#X#Q]1(;D9GBKi0TO2H"Q+7Kfnk#"Aa!0Q%($ngo_+?Jui^#[X2O![gl%N!N`uh!bfg_O-uj!_q*,P_*nk/!R#4i&<PYcuT7u%!_!/:GU6.KOd"Xc^6?9netM8CN`ZVY#GkgUn-V%8)'kt(pW/<04-Y?eYo+lb+j\%#i"`uBkfE\>/*T(l!j>E-`Wr\X(($9<\<?QZ%7>:okF+unqc:Is@e=dS-)hSM93U&^!SFh`H958)177sdK-j-5SQjKO?VobmZ>o4Zr67IND0KoOOngqF?)&SnU@$o2PLHpm,5d6a:%0Z+W[D:!?U.0LG(?*H=8E$r=D:abWC\3\HoN3KRL^-a@#3iSZ4:[XE2dW7aC"ImN''A/Bb.eo(_Y>4KG)'Qeo<MqAP-QVpfFu-e_%nIM5BEJRK'50FAWqE.$((aS'S*?)#_XM:iB;D3;nP!o3Qmt<2`oM:dp*W;Q,Jc(*arLNimJRjrAU;)o,FIIU/hoT4P6b[1gXR-Gp%bNHtfrLNj$$KShu:B#o3WC23_hoT699YTi]jA4;)#X=*TK3'h3j?*6.hU2,Z6nsfLhpS?K-=*X9P]T)f.>aHb"hpa=n/qMOoF<Ze%IE0Mm4Df)9,c77_d$K-7gp-]G,#\GqTAf+As!P2mT!#kr`@P^<Inl_XQdImKLR:>&<<+6(G6D,L,*RP#Bo+*`:['`/&o!Cl("\e&%:MAN0M=uY19:irF,RM[$gf`CqpB:=U$hY13jYKIGs";/I3=Y)513k2q_^BOZ9js5u:WR8*2JN?:aQ[dQro#Z8%CM?jO</A&.FEIo%N:FU58op),/TW]L(He6cn9og\"aU4:P9/Z9MQC,E:"rF[45>N-,?TMg0;*>sFCg>+SpQ6!i[661?G/j":8d;(0SF"f)sKA^%Eas\%mmZe8RDBkTT8\X#&j9C!'_<:Kde`KYBK6KB4Ngbgk'F2H*.#o/5mYQImID/aAm$&me4KW#aaXFNj"D7h'W]kJ*_3f;Ns"EW&t\6b%?_:K51%=Y!8dbKPa@oO2jT07<0q-LpM9Hp_G>]S9U9[fUA+cC%43SOo,Gk4!S;3R(Bc&3<CJpc\<Z6:@\HA\I,/RK9[:q]%QngH)%iD,16..!Sc8sV`e4H&!^.op-aI+NTmJT;WWA^h%TjIboETH(JBNB#+-cHhfHUf<R$(rX8G2"EcZDWiW![986b$mR#RM_VW6J(Aj$%)EHj@"D?BU1=sr""E\ru4m+d@SR7+1@KO5A^1a6B^bs8u!%qeUKNH6^o%9JuUY!$aSSuYpq9bCg-F8@-)/"P\]LZQ>Pome+H+lX8%T?j6ib_nkmdA7?k2jQ'7B@<^s?reEq28>?;A)1h(7#=4I9YYV"E*^\5b96bO]ZB]-^k`pLa2>-TX]+(3_)VO.'>J;qRe;KY'%nD<%$%DBLRAZ6*RL<#VUX1cEQG-iWTQ.;^X_thBL+O<FB/kUM"`T.=^Wn.0XAACD`jcAl(,H@iI@(L<Yg>3;Woq/^_,qn@.&R&-[GVbg%1rF7)$)T@04p#p`#pSd,YB_02#ZoN$N@noOAH:jjpfm5W>maJX"ClGV6Cqi"!n<t'*.p84/K?*>F%G"p"+L;Ejldo5l7Qg2!]Za8%nN8*gY:):O(pKT-:d^PhJr7OWjg7LNADE'&RDs`N96$J_UMkV$=_Vcn26BBm(u&ZTU@CW@jnQ<4R;bV^D[bJb(XT]:d!IsG/ee%(%kBWXmgFMl:NEXBX_1:M>T?%)^15siu*`O%g1jQ7KEh87sRiP-nW+h]BeEih"%CM_BZ;865;](+\;%dk2Ugc90VAZ.43PhjB#;%04%R.qjXO6g\?CG7u3^D?'>rh$P!0[aZuaqCA$_IVQVDruE144QGAoiUJr<YV@I&,7(2D:ShmVDiO!#/a^eVi(_[4(R:`q'Woq8&5/-%Q\3Zs)IpFPk<Vd:1VJn(8MIS.dl0#*1%f)l,/\Yoehp>0Dp0.XqEn5FT'V^_b]VR%E\MD0W="DhAhAd7Q8X?%`Z6n88`kn&i&&ns%C#;4-@!XoR4'pYd4lBs\E\,4u5Z#p&afG\O$ahXi,XK#CA#b8T\0U$%3mQb(1&S#j;pt%6"$\0GTO>bX*BVn8r0+RI"fiM,(H:q.%]j[M?H,qbA`l<1r4f,_rf#1poF\9YJ2,Is8bPK@KYZO./M"[83#GA!+1gkO4m,dC2+=F!akVZYI(j0ul1t-/`q"&aUZrD[#8U2fE%2EY"0G*4a21=KXP38b*"DQ<_':RODlBFO6:kWQ@!$Nrdf"mR4N)<Mm6KcON0h@<-/qD=ZO@*UU94OYVj3p(B@8h!ts%]'e-)pgLn%^L]l/qA@ktl17HQ4iZf0R5_)]17j\/3/s-Tr[B`e`*spTJZcBJXWYs]oYC'a8RADq!uiP]"5UCnRO3BE8:RB"R:h*&$?[iWBnJZ/%c[8L@$0b&H&]jKId@R6Sq2tYpGWLna!Ps2IS!nFZ&R..;Kt0lM-F?f%N`aCN2WGOH1P,NV1TIjK=\K&UoIA1[-;2;"_U+Hgpb;,L%m#@$DKJO3t+h#+&ob3o(<h#4IZ^M/bBN>;A8'=JX_$9kX,`eaJ"Z4kBNL\*55;U;>S"*F$f.\2#It_V@'rFK0SQ!tD-64G%G0`ed%.k+jn#Fa4rC6LV!>[HHN'qO5Zh-HL')=TX\gJ2NI+uV`Dq?na,+\9b7kO\_DG!EmZgXBs[.>CckB&`kbV-^P\iFSCoV25u'cQ;sY%hU+<g9TGO5aChJbbO>Y>9Q\$>5)\ScXk-+uVf\%[n5`d@bP4#A>'h`5.$`2eas=AE.6d'iM#Wun-9]i8olA8$_`0I2cJS^NI"Ort%_qcl8A'.Zq*CZHUXR;A'jbuB%9\WuR'O"9d>bkU<n=R`YoZh^hi$*>+j3^QHen(08!@Qb\$0J.`\6dO$R*9r3d1h]I-<Wp`'1kq^%65mT^4G`bLiDg/f]C:f0-hrJ2l$^?d"A-]0(pPX!qA#bqPBn^O7>6'`A6g"Ej"=C_7dA@^S/&MBs8"2Yp$EJC(KPW@($:on%W4@l%crX']bcspA4eq<En5P*de;L-15e5X$kR@$]f_^8FRN[UD3#V?L]m"Kmqi(!6X.sZA\/1BGr-R3<WP`oR]qbG0WVH@`nWsRp+Rsi[%XU`^K@6?b>\)YH)g1kgmNHi"]*08VEdAYl8WUXJ!9Sd%j:GbV)#-KQ7BXS/jn^gu8rHGoJQQa[6E90ep\Vd!ni[T4QjW7F08)'j9%2C[,;b-\Q3?!P&Smuan=;RXW2m:g-YUaoqQFA.RPoqFd#XHdW[hVZjL]S/DFWpqEfGC2AJ#9=Z#:i/Po;#GIkl):A%^G,]ooKV@!%M6BCXp"D].)W3;$<*Lm0m.LB"[,4);n^4#W;B\je:AUV@([Lca/bL]e0?9-/S]:.dd!k8(`l#!'GH;TimshCopt+0rZS57:^%V`5%2\f?Cm],dPX"eFN47Iq=BV=6slec2p#_Qsdrmd"/s))uu?hbk_Y'./!5n@X)]leX7E[SKh5"8JQIe?/NokgLS,EP_`STZ)E53t4s%C-59=,>XG]^6R_A^l`LBFXaJBiAZ_:#fO5Np4_"Q^ZiLs+'\-Ig41:acnq-IC7j>e%5O^?nXtYaMCD![2u\Q4'B3qI1gl1^W9&7G%[F8mlK&F2jl0Pf4<4*4q0<"*uUGj5<'G9>M%RnRrk<-S>ZIZQA!R2\]I?-nM4g!'P.<J5j*HUnYE?CAWQ__PG?d0n-eUj2-%bl!k%Beg9-NTL61I@ua4N@#tX6ILO]L%r]uqq`0K^H.AE#gm(aX+&'X%J600;8tn@ao1C\iV6'jq2Wfr&fc_\<4UcM6)\JBpM>f,1^@XL%a%Z`sVXc#/mc'7+Nqacug357gWu$9[e`hFtKnAm_lV2_?oj16^PaV<BZk>lmU4/.B*V:WmDg1(M;3(Y<80'#Y(I4KoD#e=e(I?27%5k0ZjN7s7dX8V`-8)sB]Z(UXdT[t)@&O1$*)FqSG;>$>nr:ip5DtjGaRuATc"4ZY#ZKZV/Nun'Tm6roH0<(L>_^A(`8hu4Ps%i$r%X$/Ne6K&CuU?D-_^Ku8Xk;[`GN''Zspl%IaJhR9n%u$cBgrV[NFN3NFFjM*%pUY9++dd3@?<%+L#R,YN*P_S>/2cJrdNA*WkMu8,%NA]GgOCL_E:1KsnaA):\rlX*RT.[*]]tp'73;Ku;rCcPMqHUG^08P.,f8W)R^$:eVUY?X\nF'Q*oequH-Og2']l*d-&!]%B+21&H%n\q2&-i%MYO8S-Hhg#lE7gHcF?p+AV?1`F`X]ja:X`jOsrY<TU1YOh)%s3lE"@//&d/rHrnq5=SXqapi^'/WMT3Q`JJV6,9LtYS(%"t]1X/WkD/+;X*-mGXCl:Y[TN^aY`np&&a(Mg[V9#1,VO\:kJ+1EF0<]rsW\1AK-Z)LW@P3Vo]4P36#&8RVEXlW[^4'ORQW0ub[s%?R.ON5b(B15U/c+Q1#.[g?=1mWulbQ:\GNbg_2RL)MBJPQ`OJMFsXLGWEgt?8o%KtbR!]iYH2p/\Z;B/7IDXF=.-ZM@RYe`\0S5@%P4;?10#_cU$s+&oJ\7[,A[p0c.q?/rVCTtF62Ob<>t'[P1i\f*Q[msC<gP@@?BX]0rrh$O:N<oXG*g!m8PXE)X=qEXL?4\D^B?3D%*%TYge3Rb7U"H!3Gb1bQ9TU'c.`G#JiZ1<=Jk-#M&4Qp>!QoL:aUAbX1[(Xr%(``"XKN>b<Kp/?.\j%rW=eE^EAg*L8I.p$>q%(Z%/dVI!U+<D]crEJ8$!h+a<KmjU5*,cg(d&%Q8T^fUPt"gZ?!2:2Kg\+%5Z\P'-$5F"<Cp.Dc,5pi1d\844T)&&Q,ZlP$')!$168U?%\r+V(O=]@kN33LmQt[,#KCLGd_B"2rBOX4F?Q"6&d?VaR!A5Nq`)d7PAUIM!7JRK<?oF,a2JG:r2!ntFeka/U"UKgZ=-d0<H55XD%e?0Ftb1]j((ZTlEHJr"^b[$+b8f4_,iC`@$5X2%r0)NDbr?Z,!o<V^`FV*7LPX4N-5\YgHKM8p1TnWuPKH_Q@b.M7O!!:.=/B3-j%q)[*M(ulLFB/$(C0qt!o'PHWh;-Ui'NNa<G2+)&3bRBIK$5<&CLeD]Qi%)WDKV\`>;MLhQ2$#:e'H7o*8fI+D1lP(C-q7#@Tp)/.%'#>ZE/ds`W,-[JI;cZ.b&R?])Q-iUR<3WHh">$&CKYRtGVD1Y/7k&=C*Unh/rNZTS("$$u<uG9Y\>[3/">&7\2p,Wdk:nq&N>&U.%`1m(diR1U.kZ+E[8][7f<MiiO>e4C[8PiR%'^eS4(RckJOOUFtiCZmN)9XOG]EIg:L&?$/UCQTSC$H(iM-qq3*A5>,&fbg;VS<8_%&'9)M_=0<>s!9Y]:/??GZTR<^_T_qE0RjfFXq4Hcj9n'd#06cV\]iWh:X5Vokg$^MGdb+\(^a^\nSQ?C9dV,']qsh,!kfcQOJ!n`%O>O#iijCnK]26pL/nS)9fi_[^Y<#K[K:-<Mc"(B?3`\)c882"meP%2_T;36`UffP]9rgqoe37;a#W"B+3PfKtZDPe1)J5G<,?^mV%$<Z)(W[=W[9%XuR$7?V)8Z]9RSWdcYH-2bajsffB-^N"$[DJ:<W[jc2%Fl1jU5BSgSYqF\-l>o]XHZUSc;[_K3@3s)Jn;`+$.#ZO%kRs%X1iiFBeQMEBiY5HgH)9f,Y/3fB<?b7F<nCu@7[rK2>$\W!2-d$?ZAXT?JQI3_<A[r,doE!L.f:T39(M%#@0(G9NKkb_r1qPX%3Qo\#A>^\H3&YB^4NU;NQ]'XhmBW"H$b62RJp<:_In1.No.$9U!`S6e^p#M[`<&\.COp%E/MP=`j[fi=YYDtX#raDN()UI`bjnPE%ein#%JH]'e%/-#IYPeV?(iOgK>ck3(Apor4ou1`#@X8?Lm:BpUALoAcUYSr0N@r&al7uRK<n<SER>&F)f[s8C7[3RQYtu.m`V(cU%HQcQ)kKu:'8I:VN3Lp9f&o3ZAp6a+E&kYXE2,6rDVpRG!3o_l!e)\9slBo5Mam5@,:"-1ZlIr*Zn-UQ+&NB$GB!%9mULge".<+Qb%>#RYB!m4c=]FKf:&(O$99b/P=.!:"0l=c&)&\:S,p_0is18cPJ9W;o%[8Y#U"AVBs8ub4e=%F6/<MHS[$7f%XRF4\B=$cGS1?Gp^%WN_g0CJ\T1192q4S6@E[Zs0;cX6[;FK>+Bn-4_>?-=%#AF^a<1Ye5kEQXE^`h64-U-+F_X65%H7P)u,+#"b2ZSp2RgbFBh'Z7r+8%hXd2b]r]mKZ=`3+?R1hh"Y'o'QEi2Yn4)OhW2U#-Q\GQ!1Q9c/m#N]5r^`eH9PX,pPDB8RM%^NL>p`<=73iZQ:,%P0^SG!jVDQtn%U&3f9]ouPb$G;JM`2"_./\I;S%?".c^.NqiS%R3*cUk)[GEiS<fl1AF.PS\REbUDsmS3"?jtFRGFn/_;Y>LnJfBC?;Z*p(_0R&2h%GSkRmk/T$9L"Rc10d-JCY/.(fFS?WrnFmHmd">,(@FtN/r,8ZU5#8bAKK-86;V;KMLncn+akA`&]bPb!CFfNIXeM=*+39U,Yd<NV%muBFCiWn;r^Uj2u0.-noh-N&$M]Xgj<*rU\T=;T3*L5FqIE)BkaJZiIo+ZU3J"n[okeeM7e%^8:hkBN<;=q9CY;^+(geCFtPPE90%_&"c(Ds6#OAY1MbJ$X9#r70Ap?Ys*Je^g!mD*@EiXXAV+p!g1RT)R9k1V_Z?YOXa9=*^A-X1V4'<F2U$.^)d"Q.IJ"b3P:!j`S_L%niGl6H(FN,]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Ir`T]Is#\]Is#\]Is#\]Is#\]Is#\]Is#\]Is#\]Is#\%]Is#\]Is#\]IrlX]IrlX]IrlX]IrlX]IrlX]IrlX]IrlX]IrlX]IrlX]IrlX]Is/`]Is/`]Is/`]Is/`]Is/`]Is/`]Is/`]Is/`%]Is/`]Is/`]IrfV]IrfV]IrfV]IrfV]IreK]^?j>g),$'Nuj`+EV!gHB+@%J7^D7e%a-8E>C',#CLkIWUSEi=.dk6sX'g,e/Tb\T%9Unq+dM*%lg2IB@Jo$C1pT^uC#I^AY_E3(@:b]o:>?5@DF,ina<]feQ=$;Ztl<<dIc7,dgUnC#A!HX^FR6#pIO#I`9L^VE>Td,ET%(>1MNWqh/.c_r&:O#E9P^9Vg/a[W,QEV:EH1ONuu*>TTH^WH5>_tm66V-;a2n-/jje`ig_l]';*d!d!re6rV[#qDAc$l]/6.MbiF%=/u)Dm^*15Q^!V\nN@!mm4Q&1reB7*i,3MA4+.%.0c4dN#&uhYD&/+"s(ZYqX=X95ZmjTqb_6b+4W,0PrKfhUnSZkZ?ol!`VqU\C%)-/Nh]An3SirdaV%q@uJENY=^n0$N,a-U,ZoZmgMaUo/W`nt[HG#U,NmlINL9n],8b;6+bd9jn,(g_8G*;.$pQ]q@f*p/1dd+^hJ%+VOC(N^$8TW%\1DY5Ed#8r%?bq?K[R?RCD6Vqq8hkJ[`^*J;!k?i3T7FR7'ETn;OeAVsX4hdsZfW$Gl@Cs$U"s(]#4+'s[j$i]^q%''WLFR7t2Ol>J=#qYSl7,=sUm8h4eSq6q`so'<(@`='AN__>DD,GYt%e[NrrTT-GZFW]/p1]IIFO87XXD`h^5"kY$ofB#5[;SV%A%06PcX+a%JTIUqX.a)[+7+1ttt<u?BX-'Lra[\)I#qAP"6CTfI+q3nulDr?h,Y?F"36h^GL,l(P"^<\F;.=:*;n"&hCmSL8Rlua3k%("K9mqi=K>;InP_H>oem5C@)Q3)HFLJ(V$g4&aOZA,&Td8BM6!A)D"R#DWh7/N[A6YTb"^EBG<8dAWR^,',W&#*&&Tha#ZEr#>=%%h=;$0s/120Kaq_H);te_>#lT4A=/LCJN?a8J#U-ip"q!$\^_`Y?JD%Ek\k>7BU,Ntk1mgDm.fk*meaNaY51n>I5]o/jeD4G"1uEo%eUapMRd'dI%f5*T)c#Atrr>A132OSQ6JZ[bR["kQ#/*gP#jhsX47,35$(*CGp;(H#4f4=<Fm'^7(uSP(s%@3h&0,$rSOU*1aA#:F%`0eWng1Pl<1@B6$TWZe\&@I&V;YFp-r!_rg>j^#Z,P5fcf5,QEF"tW-X]W29Fq9U@fdlS=q:c]nNBjN_ZjBnP3i^mp"'+`g_36a#%pS-9K]iW"$M7Xe@5?(j(E*6se!KR0&DS(bX%Khb,(0*1^@oOHDFI.t)>T0b%3c-onCsil\;])DM+h%77(aWfh&*u5YAh"YkHQs1R%IPlkP)CY3(^AN6*e#7bZ"_N2]7N_;Qf_ue5)ELABJdeG7#;F8c<fMc6*;'+'J_J0i8Go;ZTL+`cmR<`^,Dk);8OOZ,fp%ls,u\OO%;3Fg4rZ&e9Tc](KRD9s^FGB"H[75;7P#=nAdJD)LYh81=eJOln:t^@B2g^1Cg7"Nt?i6i]1>J1?+Ei)mF7?TLQqD]mHmjOJL2j.<%qp8S.TG,WbE7lEhK-Fk2B6MK!(F?C0^EQpU^iKO/cm#;h@PL&&Kh*q^ZnP#fnk^?o(`YmD%q0?lI`NN4P-97RmM,r%YWWOEb8sS_%Hd8s$*`f)(B4-k]dmAsTjUNmZjC8l>f9PQEo..g+<H%N'%ZIc0;mQ5lpLhRUb'ngO,ORhob+MFd/9=[&N_k<;fNaHC7+5;n;S3kg%/?*On==rFrhnIM=EKS'_B/VuX.uL'$'2;D$ljN>(Z%P(N_YOo4XE3:uoNmN*S#ihMLjbtpSN8ZB`Hm12Qt,;nRD5+V_7%i)$#>gV%j]_(*LS!NmrD)s&#IMB[RbaYN85YdP];')jQ<<t^obe^c,-";(=--]?AXZ.pfQ[.n4,UF,L+0AY1E=08;(5Nt%:^FO0=BieQXT6g%%FjfJUoV3gFAZdOW7gKsn:I,sR>qC_W\KrM;5SBOO%'KeXOA;&=UGkgXu\E2<5-ksq_<a"Ba&<P##nk)NhZZhI^A38@-B:d>bEsG%7di,rmS(EKec:82ghh@H#e4uOgLX!I/e07$\T)&rdWI)M?H19#^2*BVa[Tg>[X8V%oBYG#LQLsXfssUT1A'GWN3m-]VN@+=[[HN"%LlQJT]@Z;/F#XUQIA6`"W5A`Feu+l\ErdUM7a(+=jQ2eY$R"'cHL=bIjgfCeD;#Y$`_P[(^Q:/gKC^V,PoMN]Q-:SF9+H%]Q;6/V%>Z-m_ls++7n*OtjR]Wkel"MV*!E5)8/To]pmkuLu&a"[iC1!sdcDa9<O@*HsEfK$nHh>j-i&OVuPSoif1ck_upb,ND7UV]GF;7D_%-GsVsd<&4&Lcbo"Zf0=p.ena#kXTR\ImtC+>RF[_PLeSYX/LfE7c.M+T]I.M">"E?0%fgQk_Ft,9L/GjH?f]hfr.'^k!(1?/[6@S%,*E/*^o.]GGJ0%CUtpH?O?U2,J.&2p;a%p*IVfLJ%`$Wf(dq(<J+-9:@hBd)%Le5t>A9['Uhkt,WQ@M;Y<<TNHL7CWf4tnnq-I8D%157NDLMEg?`82"0.OP"#J+2%T3Y=I)b.`CY%%YcIBjBrEW(pd_bY"!8Ql-OF:T[7'HXU3QI1ab9E*GAf,>LlJA]R.,Q3nnbRAee'%e<egeM\eK*GuiX3E!K/(h:8#rVW.PDQda3Ihr)0;Q[4JKICnB6o@1r@1tT^:$RX3hKY,7Pq]OUX]$P')h$N0cgc?H']b6Z!5XP21%]7]5J`J1#P5*AcK#8m]ai3_ab:ke<tGTZ_[22lMI?pM%G\6dp4#8GJ'8@:d_rSB%E,0HSm2l1%7*.7]SLQXi()j:r27rK?AD4q^X%KaWsJHU8^$kC8%Sc^u$Jp+jaQ$?1Q",MU>,FCaS"2(llnLQT['a%1bWEanVsVeA"a[86S;L9bkT.[8eqe^)t?fiFm?-JiWUGNHos%=mEmH]FV4@UPCe;6GO[W`_QG/\Pi&i[f>.YK.H[^\5eM;odos=l<d6oQ'G;'Ht):6AQu7Lm-d4&16Ls'Ge'U[$KH0fY^Tk=f^k`A%];<hUI$h!Hf)<aK&1Ba1?esj[WOJ).bMdS`2mKo=,),X!?IE0hS^I_>*_&]"D>DfDCM0T<T:9LFTqf6$5Pibs[pIp#rl@'C%V$s`%f>U*[N,RMVnM"XOo'd37'TYj8A<]dQ0(j@r\c,LkV6:W=V;E#'cY@GRf\UpCP8`g1mI)*,LYJ6Nk&mcR]1ZCo#7l#fl)o&R;;'*1%2:9e!?#F>pp$`i6YF`%h2)69Sq$OhZ":U"L_nf_jG_$cimYUJPH'"X-e?`S\1:iX@HCq6ICK85'+7%Ge*l[(bW]N#6e&_eH"OJ-"%Wenso`ZOh?[=b'b/K#LU(d&j'S6@jT9g9qFHVZB>7\<_AlF9^,A4*]5d8^"9)R++$diTP<V80mXd1bafYpAMLVFFE5d-P^'HFRiM%<ku_9?t8T4Cu&dap-u->iBtdXQR],e9):)\K]^6_XCC;N\n'9'C,p6RT$Q.KqBAt,mk.=oU/jgkeb.b+^":nr-%I*:1fC^.PI37]%Ga47cVhH'Y\G05ccKX`S;;R)5TOpQTZPpGOC`O99W6n"O!gT?8/%1Ea43'u=;kk1n8[FDmdq[g`VU8!leQkfsQAlCGO,@5<[7'K_%[O23Za1Aeq*3Q,>#?Hfo`\144'\p6KZt`RAABW`)7WBr#<`dSM"rl-Q->jpEb%'h_Ehl?niC;`]IW]P]BJhh?o3sN,eFK()^3aZP%;La'Jm%:@EUYuOKSlW]il!=<4C,FbeN=#]hfm:5K9,kQM&"4D2S_$*08>G:%c\c/,GIq>_^7;QHFK+ss'E[OFjjTIN/D')oGgNm9%FSGC;R($f%4sZ`_e=k_I)@P0`_>;&899"r_)a/]-fs#>ckb5FlY\UV%0_oJN-=]3iqXXFZrO%oqD"O_[okYS\XN%:]]hsGmL1Ut7%X1klTe*'QjlKS-kDqX@Ic>2(@;5CN\k==,^@spn(O2i%[lUHqqhuDJr2T(i?5)s*MHD>.[N6QgB6rn6m)QehAVr*upN?7PC#5@q%%dAg&#0BGFa.@[SSCB!NDYtc3S/<-Z!U=gECYO<.OBOl^.NgD[k:ZJWkeEGIK#ai[/&jBNnNIGKW-:tNn*ZcVIU[m,^Y\%].2Aj0s%012N#VFH7>@M&4"s'[of6-\g--Wo=p02!5>$'q>5nG;aAj#,9Kj!_BT!,q'VZ;KB1LIU<S@qJbd.BTN6X+*s@Q*ImI6$jtI)pOqn%N$GH1(':P+\5?i#Z<l-%'`r'MbP/p8lhq,H.o$*>.(d'41HO>ZNQMpiH'!OC?:G"=VY/b3B'o;trihG0o&Tah_nRYg4[_atGLs:"%`pdNll7SNV9%4q2XH_YG'o/d%G#RYJM?NZ$ct99Nd:]2tl>Cg-5(9RZXmX'mf1)No[!e:LIX5q_^O(?65..p_g,Ra>?QND.4V/_$%O[sLd+D,UXomF-Y4^PJ*Hgl3A94+f*hT[%r8PG;i;%&31`>*5BbrCdPVH,>hpZ67]]:6X;io]p:eQm]-]b%na)70c0:Y2>e`RMkZ%p"dN5jj-su$!H.K3rA\.HnInp`%:?6r:s6FES9LBf6;03;pAG%]mW"7SMf!/B8mIL%,YRm[XS)Kqhjo2Mn=rfH#"jtY1Q$6]fE*O%QB"u2Vr,G5O0q3!99sc(f;GaOT`8]GlL&&aomEe+Sd'fM@^4&PEaeG3[."6Cj-(2Wr&++2Y*CR,NaHhCE+%/pU>P&UL@/u6_RnFY%L44Wa+56's(1/.>WU4M=jU^K[aAP/MC8P.fehj.fKg0sh+o.n0ZYP'_l3Z./c`IRc8;G4Skl`QaU4<.")<jIHT4u/)\$p[UW&NnO%\37OepgL&3L<S&70fF1dCOOsejo44Z]Y3tV65n]Y)4<R+,MsIla_P*.ldXQil1*2@HW^CC^]-`]S_'.5:RtYK7R8!6bpGaf\67!E%QRYes[Z-006L*4#;5=tOQ&TE_mdjp_gcd_T>4j91)m*-G[p#O6DA6mH\CjPmq)^H_@#\2K7K>[DN@)qPGjq<mSoKau<`bX\7O&kC%b9KdM.jb5u[e6aA:#+UZ2nDt6(JTkr!?T%tG-GZp=d-pMGdV=oiQu7<bSfKUENE7eZ#(3IO\7e*7SSjL!Q/%6<_]nM7?Oa(S&_/b%6l_1jT#r',X!ZQ0.CjQ5jnDU3@/Tp?i4&rL=a+paMiV?dXjq)=;WnRN#kk#h7F;).0OP`.22\RYT-5$n7d8*VaLQ5fIjbml1[(.Z%-``%dY2'n.0,eI,lm^]W#?r!VY7YN`&H>R"!I.bu)@0QX\V'tJc[A@l(]IC,O@#tog"uFG3P`<NcD^'`-6M%mFRtt:Tu5E.(T>O:%IPMJM07XH86\G+!=;sOTZMgfQ2um\G7+C2='D-D^*$XFIhB`4XX%j,+3i.$LhHnJrnI'oGV14\Z]T+fpGG*u_1YsIf(uL?q:q%Ge%5R`\b^GKh#[PNa&:YE:i3-:Y)kTRn]@Lo1&)0LB`_MtcUYe8:hot64;j.r%]YT,.)E^=lb$bBhUM/R1e2cF.NN`Y"<0P:!R`l_J%%HH9=+4g)\nEgYN's#Tef)*ko<!=LV(T(Ul.]4TVmIOOpc#.2c^YTDe$[%!&QZ;c8m<jaCkCB.BG<iJu/!P@p?n]47d'E,b[4UNk:%][M!)G%InN%rBn,%98.!LSh.h*7Ul.RO6"pi#\3?6+om(aK?b^g3C=gNCoCD3mPKn<q3,ig$!:[D\Njk"uOG1aq(>9J\u/3BY\[d%4c-9ZF`i/%[]9qr3`lZJblX9A>k$$68tTih'BLo.i_Wc4G42iEM5hEC0d#cUX5#M[?"9l5m?R+0W30"VB]!DSUZEnLTlVN&XjQ-.%=gFSn+i$f#]ML5:S_+^BgfQV%Cb(EnoHIM'rQ9QCao,<:>;"]BpT4Z</HdZ40ZtnR(>nguVJhn9o^q7\Ok4nj4]MJTKs"QP$79tf%Odk6/e]:b8@S)qrIQoXK)7?@Kg..]`ofE6``YWjd;Kg/J<pKYRT[KP-5*kTI[&_ZW&F_H-N[c(5'Pl"cVt8tMeP2n35(<Z/<%/6>%kGbPjegPn/QOrX_R@E$kg+Tl]N[o1hq5FR4dd#tIR$#kC#r*YpRrXT5Q?b]R>e%=M2]AhV+I2MVg9KKR^uWnO$g6F^>&-=q??9/N%"bVDDXXhoFQM;G!q-K7,a+]-p%-<.B0FK?mg'O-S_eX[,U#XtqA$@\4($Kb3I!KiZfSjBgBOV;ao\s;J>YR=Z7f\`#]Agg6]QD)n%>L!?b2mPAEL4Ed;9#smu'lKTVe(Nem8Q0\M)e)?EEd3`EN-B+D9;C_iY]4FEJUq%5eR>Q3LCJeW1Mk1D9>VC6R[jKKg_(A%ZaV%]%JB#&ZXhAX7^7F'DTa-Yem[Yhe9Y,hF5@[TTVnP@jEVL\/$E:&7I1p7$<g&I$@qV#*fb<8=V-C.uM-$buJ2J'ugR::H(.5l0c2k"1%?fT>\BS+$rrNQq'@!0).QhE.jHgm+Vq%Ad\]].]cBDnBfQ-)]/*!L4LYm6W^^.EgpZd00-j3WBV\MpIP1]_0O=J!@Bn[1$M_bW%Y%$t?OOBRfC!7n7OBdS$L>AA8dV!QG<pcN=tjT8=<8q.gO`*;hZ6-?I$RpH9D/95B4-AC7>J+.-&B$fDD!P\FOpbO`LZbmWcsrL/ru%9pc[`*uMti@^O+O&qmgE"jkGD=U*0%kIFO+0)UNQRDBiEls'`/Y6+i"[`7rl$)'9["6^h7BkPf5Acn!]Z]P!I1f7n\b5ue6e&`c.%/o1).]nCtLA,HNLe]kW0\oX`0%?hA;SpPkeSF>cEA*-i]^&"e&ZFC_Cd_)\90/e[m<$oo6PD]^<]43KVfb%<UXLX0M_.,Vt6ZUo;%i&,LZceK4jCO*/Vfb9r>9g-gTl/eN!)`Li1>ToV0Lmlm"X63co1;[gsnEZfL(n`>i2r#mD%2jJ2]V*E;(4C#Mq!=6$RgY:MjOI&a%BUfbm.ds(8"\61pOeZ'(8.]VhJ>3Q<c)]AnC@K6clkb(l-7!h=6%[8?q)+um1(hfuk,&#L>E1T^m9e/[d7h7^>gN<fm;apsYIL0:%gSM5^;&rr^.1RM,JE?>=ZiNo-5lcUPCI&o*%]sjf9t-p(=[ND_G1[MY2-&ReF3N1ZQ*VY$Bh9@?V_++_IH+Ye/?6o\X*80]G&+:[%Z5KDZ3-'FOUF)aRM9hoh5fc70)i&F8a&8%hW]*7P+X%E,2ti]5@HH=Q*dc%L<lrUe$+R8i]mb.=C;Bcroj&E2iUu"&4[[YQDd=.(%D"3(9jW_K^=ig5G>A8mCo41$Gb!K]CTZZEj\J3F"W@RR5Z0N95>%T4,4h#mdC>ia_XA\E=<kl,DL"#lLlL?J9SRiu(0TDnrH#@>p%b<cI@O.'T&N_[?Zas=5"8%Q79Q%`=@o"e7N(l%GQ;88^BG5X1HOt!:=X)DAs\7h+52-klFW%q-Oks<ce<@-J6$BDdM#dNf>:/uX7%^@=bW:91:K'X6oWeoTpo:1s!X4d#/agijtrP@08N(hpJ)@`ccbCb(lZLCQeB;rjCD]mjgXV7-Q'(ZHq"HnI!!g(l18[M1='.RCP6%4fmL*AYU,D#&GFE`LgtU116VD*.7)?K;FjdW#3KUg`cHY@0G`7HMj:3VbG:,dh!<dAEj9F'a>9bDUG%aMj^o:Zp4EWk8Z8;lMgJ#%qQk#CSIems%\;/_b7$Eq@q_GR3p-o4,`rn+6g't*B9Oo,FUh]q0nW6E(7[19cDFI-6)SLHoB"=ZB@,nrK(J*Nff"^Dk\RR/Vp(iU%cCcBoWq5E#3L>@liC2hSR0_E/5tAV-F6Cp?e23RZLT/]JLX$`uCnLFP\(.qS@c6W0JTef+muiC&pLJF)(:_'N)YB+EV7W*seBP(d%r0(,6&YYdY]a.@\e&7F(YOS0b\O;m3Kp+O?`fM]C(YHVHPJJFai+-*QF/UY$R.5b+ig`$lI=*b.HLVDcdpe?X/m2dM]"#Qr\n%![%B?K:UnJuu:27Ltaam??o*-OuJRPkkuf&D$+:[^3M);=qMV^OEhTt.5lJsU",@jL+DN^;[hS_IXZG$_W9X<cD.2g_+QD8ANuQ3]/S%laj`Cl=u&=<Q=qfA)+S@A]>94A@#;]7P@c\asNa;-T@?/CjepA7PA)SYV^\Wc:Om3UmOIiT@XcHGMBi@]9Z1`0h^,dUZ4$`kpC+E%D%h`&?Es@NfI-CIAq=ZbOtk%,D<lYXW'%dqV</TsmlA[r<HX<UVD2/`e&n@_URch&0"It0-4`6(P^NtQ2KbVR0?Zcb>K=NTOiQ'r%hO%_sMEF)SS/<&Qi1e]$qE>/m^b!CGLLk)?1mLd'e^"?&#8aFP.Yub2KhOX#StjO10r*bf4dZLs)Jtt3d"FUF9p^:3\L'!c;Rc7%%]&h,'Wj&M=`,Me5+"no1i^2IrSJA=tN8S139t5?eN'0g69J5*QXh*lSi`a=GZb=n`cSNhI[t2XhWnd5&1q>ANDtDVZ\@L!N#)5K-%5CgY#M:%"M[_Uhp<H&%qPNGbahst=2aZ"+e,NZu)CWr_Im^ZoJ16B+Wo&Hr9NSD>(<!'(A9oq/O*W(dD>8:XOI118?SCHh4ERRB!%HQ32jkCsXlC!@>X1c(Z'gcHhs0ZLo_UOZQ\S9($=qZYF$VXhefF@hlqME,8#:#V4SLed]+'^*ghoA1KLdf.VSs&E+*I2ABuMaqAL%3`qh88o<Id7u#d/`Qi;pg7R+EURa7b*N[MX[:SN`_9j:[e'M_!a;D5eZeog-#dZ@p$'1$V7]K[AhUEU78O#E>`^>'4QfK+hS!59o%p(esZ4.aM\c(4^ej2Sb\bPd&^j<X.u8rJO:3$8iZ+\nU-JSjJL&Fet36po]9bnq_(bEr3Ze]qT0I>7Tg>D4\3A.-!1e]eZKBT>nP%QmuFgG(r[Gc7W&J4[9,tf@b(?AY<@([r_u-6S0spR6pSnDaEQB/5FRNZ.K7-/Lhjfc-O.lI(1X"+.Fu,DB]E+o=dZV_p'*n3aFq>%I9bYRoALIK/a/K2BAO6M2El)_HoN_sMT^f[F?Z5B&&U0^(7c!!]M$&7o&0_pN&\FGbF.q[->YE+AKC9:bdB^6kDN?18*r;`&oTPl%7CVn%'0-XN0cTLecC\DR9ZU]hUka9K[MEqcn3T8bj*BqHi)@jmT%Oo\q;0cVbnDi$mMtWBd33+i:4TYTm)dU`.1]>/>fk>\K\#!$%R#$H,6lh>U=(,u%/3dCM:sL=.ZR*N[_sOPiUq/IEi4T+G]^7@_2dfmO.iGp%YIL0LacP)jLiE($DFcocg#5uDC"\5D6Y47hB&%Ps%S+'&ACTfG/LrkDU^UXV(%gFo58A/=t7d@nc!]*_OAW+`&IJ@,67]Nh[>XV%rA*G]4J`""MUnW1tkF3`(bgW^=Y._)!T;K\#otCn-%KM-))Xq)2%_ksE^"rRGgLr/MJa=nEPR0[_[/NsopMN9>Q'i(.'[=9;6c=1+/+;Jcp^ZBR:E1ZI>\PhDY4c!c,S./u"0,;e!<Uc)a%3^YBeKn%<NfH&%/cTB!jON=Um@t;M)42Ms0Z.jtLW!3Q@#5>CihLcjhaAA:E,P!j:R+J$OPMmAp(US#N@P$q]$-+32!ODX)I<;h2%&'<'coSS"6#gPMH+WdQek`hSUB8Oog,LFnXpM]<E?01@!2a/_@bCc^pkH0ZjVc54cpTK99Bj'7V0C;0Q0=H0[OVIXk4[CCGMNsZd%8kWLF?7HP,K\a>35P`GGg$NI.cc+<F^t@o(b?)/#]_fj5!k+XMhV[$5]A;+OfYP[WP&^0>PjB`O%rE4Z/]4jIO*8W_/fAh\`G2J2%fkpQQd^E"4<;YK((Fs%?YVRT;SKqdL;.BqM5&+8:e=>k0#@r#E1@,VsLCCek8g@s&W)u(44L&TW[2_^WQ!Wf5m%0c2h,[GINE/iA%mnA`3kOA_9gP66M7aE&p$',S!ll.OC0.Y&Kd[$.5Z=*e27!%n<iN9VfE_939.L0H<PS@KA\\*\9,Iu[0XG]h1k1bPl&_.Y9W.3#>%:lA('pT>[KVD.gb4rGPn97;euj>F`p277)?[&_2/LOL,c;:h0cqb@l3i^l;OH/M5YKq9Q&eKsgY.eB8XkM6M)Z0BrcfoS?Jk,4%$%F$E(<Y"KO:\ChCTZQJ)c\SkeaFksXiHIdUZTY$dO6G(20;OdX_3:HLfF5&A*.bo0("6^^e]ea9Lc/=AF+e-d.$b+K!3`#XjbahI@%jV'K!b9F7VXE*Q;bC#h');?XhI_KVZX'@]DrQ"'EVR*;FHPEj=Cq?#[o$l?7<pMS1<\?.scH>mbg\ZoOVR+FAo+Ke6>rJ7=Y8piN%$dGQTc?ii=2P'68kX)W?XE*PVGFP3TS'ELMc;%<,4e'_h3OSAKcC%C>21Ob%W;3da$rsj0.6MB(STW6!U9j*s6>XAP3^Zn(9PQ9n%F3h-pF>f]?15ao0`Ns4+=]GIf@Z/L.S#kO7&d"!:VR'GXiAIINACJ(kY7&LMF'KSc=>l_.Hs'9(SJ<j2Bj$A;VK:&D>#[DNPnn(^%*oHl"i(gL5cj`8=I'Il3'uOO5R,88=`j7\<,sHV:(7I2&;S/=^]K3+Bl5]aV1S%T[Vd4P"PO$?!'6)Bn`'m#\Gu-')Tg3=&3eu99%le.t1L+[a`"g4cH9oi(N?,A=RDY`p2iFElu@DcLni1t[q?:-'+d3>kuHiD_XM?JhkCH'QZO^]pJh9CAlS[Qk02jJd1A+"/.Qh.LH%4N0%!esTe"''['t$#U]SbTCpcqgdlbGODBQ32S-M4Qar.UUWPKEBdJF7CRp;k!%o;F-nE:J8J2s,0RE)p:ARMs'T8\(-B'*:W]g.%+\HE]\_u8R4T,@XYo!m6X]KcjOj;-q4-')]TGu5N*dDU[FP^JVKn)gNTm[K-p\_nXZtH2g.*r4E8MD,2HTYa&jD-NCkiBoicqWj9%A[gLul"[J+%ohJ]U!=Gj%<]D+BW-!Ud`r0>!8^WdT3ZnS8C4t2=$7&JJ^`<H=O.u_SBOUBoup'[\/$UOD36:6*nc5to9`X\m6op#%=DQ]dQr$OnFj!o[Hf#PL.P$OVfC5jd\l!%EVoWgPG1hK<NuGG.V=Su9:,16h>76iDW6oOLLG[[gijLSkQd`#'egKQ2lib5,h?$J,%]]qL)13fVniMYj[C7R.&2o>0d'?/(!MJ$+p`q@Q;cT-92e\i6BZ]<1U:?%KCnX'U#6R%0W'jf8#_@qb7CYpb4.:,1,$TR)T>8@]]%gb%ZA]:$sHT)++%qom(a*7:URE&[egH!\S4b=Qsea\-Y:j)1;_fl-9&k9YDp&"2s@48\VUUQ[kmpClu-mV34t.LSi7ikmW)X]OtJ%[>h"q&%So$Y0S])[^#I>mkXB?KX/hB"XMY_I+rP)1W;OZUn4!e=f+>+:d#1WXG'gdJPNY^R!V!iqnc&Q0bGD39k1c+5/5o'M+Lnd%I0m#[OQ"Gnr*!WlDYqXK;]:j89$[%Db1>":R("n!IZRKqm:9O>%JQ@2"Ci%D]^_H1j8i^j[eiaA,p[e3Q,I4tJVQ)".so8uAJ,[A%OuZQOauD_o@T\Sk:FLt:=PS>V-;X?gXcm4=I*0EiGW_,V_fhp^q`X94oW_lL`@USm2&3,@l0US@00-2S=NXQ[[?hk7F8Ud%`<El[%"m8,<&Iuom,0qk,fq"no3puNMb'J4D&%Y(Q`[fC$<pd.K1UT1Zlpq/?U3El+^+J/@DD-Z.l)m/$c.>i0qo(n'=Y(?J#8"n#hIhEf%cnT^)HC%=gY[-rapX].ZS,RaXi,I'!C$pXE,ssk$A>=EdQ\:_'#R<9d4e=#?'=R7Ks+X13<nt,\Z#W]$[:qJ*/-HAa@clI\(PbJ\%lWLAfo/UWtaA?YO+dlRTJ.jj`oaRDG^SRT?C>*(n,2"@&TiO'1^<C68l!q+^>u)F(]i4(N(RK#qoeBtE?gm!k[aEX:qU)Ta<4-RB%#RiLZV`2%o(!B,A<LZH628eC,k!i/>7YsN>`hZ0fJ3Qn)cV;WtFh%tEEdE2r6et\#M9lPX8&]"%AYF3$_QAbY'5'NiqMBEuUn(H:%A;&]C:-Z^6[HBDrbXj_MQV=),*]t_A.7rDqFiefT+*D=u:`0)J-D]lYk%'eTP&jlt0SLn=ABck4c,8&!:1h$i9c%!pO8rnLH#epE%5aMaNp*+asVk+WDc4J`/ROV(UV+VT&BquQk5bBMu/)@\hkm4T_m/=lOF\*V,T:3#XqD0!.CLgMOhSeFHD7"60AS4+]jf(Amntf(;%X0ur:f2Xppk>iIi^E.PXoWW63<*m?i%iX0>r;Nt!o).6-_joI6=aT&XH61Bf(HYf,`&>u("6_ULbggHZb3Yn1]_KN@5pNRRc^ZlI%=K4HDfdhi'Q,effOg-^pbAP*:SA>r\R(6L)ZZ&(AcHrmbqou9[?$6F.)8.M1B*^j)6.LD8"\X9^aqAVm*JEHpM.E$:Be=%jA(dG)%pGnTma3#tdhVaANFNKXEZF6U`mW7;P)s=gi&Z7HU.\Mp]gS])WRZ`(KTZ]V`*p/OF=fcIGXj::@<g>].a$T3@Y:T+L?WqWT6Y3EU%s%WYNfCOF'&(6s`1`+*SL]#@"Z%Qt*'C!@lg**>[RBln,joB_^LW$V.O/AhWp$*t6cta,a0Z+3$2YhP,3IofnLGNKBHHcI)!qTq'%HHcI)]M,VJ(808!5T6UW?WO"=%\PLW(808!5[ktaRK_n4#>ed2,lO,JPt?=km8-!M-aM!@.%bZderLlpBC[PMd%PiI-aG>j:d-g%%[[9GXKYTDli6?QrT?.K86\k6cSWCG96hrj7?TH0#Hj6bUFK1pWYj'[-V5MgNVc3QVg`&jIf5KM>Y(c6P[=E>s[%UVL2GG!)CO`ME%'QH`dSEjgTo8-EEB%S'Fnm"ClYE5"q50LKc<p>F#HUH&"Y+HX[0BQM(CPNI2$:Gi*s'.dd9J.dPi`#DqY+KbtP7X+uU$H[#TC^D<%k?#rKY+OR57@X?eGHRS0J0lI>B0=el4AF,5Ra6;_T6%s(jBg2&kY.7jA=Is7[(c@^olF6SWh+T(XS!d_olH]rmlO?+TBkZVl:sf7%cZZI`.;I"IWo#r%nLYmHIEHX0S8,V%0BPA\[fmLT60J))-b^NU;J/5GchUO)rH*eicLiuTiP_^E(Aj3;FKV8-;C%Tk3nLokk&hT;%$=TaQg!B>4%_1(F;Wg0oO6(:_TBaJcF#D:SIa.r3HeL.2>X,h\-)^Skj?,WXeR<CZn]e\(LNX`rr-8e_Vts,Qc/EWETCW]#A[Lh5%kP@32l=[Z^r!_cbg#]Z](6b$G.6`Bc,gLnBTC[@b(I^%0\UGO*/^3G3cJtBP8AjRP^:?2O0qRYhms0<;Ch`(g)^`o(S*DCc,DTF;%\UMi%qE`-J,0ol9G!+;nb,hrfeJp(ZS)mm>gO<S3HG3[SoQ0unb^9#-Y+M'Pp_Js?mWbbhFQ`2=C-ENFji"]YZR<X0:\A5"n.@=[%SEo?cWh8r:B@EL=k8`?t9<icfolCUb13c=P37i(X?4<b.3UI4;-0L,UlSkm%Ek6>j4PQ-BSa33:,[/=C)5@EacLl7o#jqhWH-c/)%<Xb[e7@`],5p@u?>X*\!P:JO\I;JUurLDo!M%lHZ>X)!qS,6GT4YP<"!QQh)G1q$9S:uTD(?]f&qDeogd)YF.fS"LJ-QK]kjMGHG%LM:*EAL73ka,XG3<pH`Q<oiTeG]-8[1qU+#Np3T'Ws5j?Ido$Dba>d?6#`7m97b7Tc>KC'8oihe_>DU3^E-`DN%+Gd$7f't%L2JX%mgm/D:?1Ykgo>CCR*6pVOl=>e]Jj`0e^R8N]Q:i.\)cEcL&Cbh=a]K-.@"*t^KrMr5.g"N2>*`ZSiX')57<&7B<2$GqtY:)EM/n9%ZUYP6n#LN/J+.X\ESBhc<o\tqX644Gq#"BUK`9aRru?NZ6oNouOh9Gs+E/B,)[qrGs&)Y[`<5,Ba%#9qhRn_V,DX,&n!1)ffEu^4%<=T3p\J'JfZ$PW#$cegZ7Ph;"<lCPGZ#Xhi&Za*g,I)QBoJ%2iGLd#ZO6s@6>4h"n#4ACWQJ:<YaB%He*i?l:e)&%6<VgtpI,A9H%j2YoQg=&^X"m;4i%nEJ.9"nWbb&901,9Y)gJnp)/1M^B@Ur<)Lji[=*\!o]Dk.a)@LtI`10Rek\KNA77-S(UE:*FRs?JSt83T&R`%A60:?&M6!W:")IT4^DFnK?tf?)(nq_f):6p@iWoUc`dV#4>>2^OXHcf5f_ee"a,Fn>7:;SFQp]\@4/aS>OBN=+],m*Hsc9\8)[>k%Rs9o/b&V>8rH>]cqf[7)PcpoiN[!0;ekRO'En2^(mP!2]8EI^*UeG_GcGDrn?O("f,oA(""63"X[^RWLT5pF?FsAU?]c=*/EqAla%/&lKkfB)1!.k8OXhs2EF=!/\r*M,_%F0#&7ls)0^n6ujemE9:t(_YlN6jS92&DQTGYIOr<MMV)p)d5i$Y*0qKLM@NQ;H>\7?RjBq%qZHBUC%m%"U[B4sINS&"NJcO.m7*JX;%1*P2kp)%&>6KbV3Z9T`]s(/oqpOV\JsibHQVUo;$`4^Wn*LTg2@S:0Uht*;lltS>3G1M%p2_GU(8i?"GpG_nd[*p+eReM*PIb+n!a=EX&Q7\t0>T7]VsBk#=[C+AK_&VIA#)pW<J5Zn7D*KMe>s\NYI*$Gh7\Kd'JY&@M8TqN%58A;7,)Yj3Ti=bhb=.At,)0,RU>.a>PbZpYe*_s8[DJ]7QB$eR9U#-aZ8tjjEP`!@PmW(fWti0[V>0V#1NL#\88V]\Nq2GT<Y3`F%&<K8'kC/<1\+aqBX&gD*&$E*CF@;<[j45R[_KAhM3k85E!hJhLi43+(gQMmDPa]WaqPeNbP>r[rH$oXFa^-TT)UJ&>r18QkP,*uu%]3VB*/r$]4jQB9D,gSZ8cY2,fTc4I0mURBZjHkkW+73)Q;SK`A_,t$OZ/"k)(F1GrV7Y7gE"#7s#:>1Xj2ZD1__[fn@M=1Dgu")%%q`C22PfA]H@nVPd3j4n0rr*`*.NkDr_?38TF!#I[#V1#iNS$`X#'1hR?QY#A2m*VaJOWH`V''A^p]O@a2'"$VVQk67^bq<]BYN`t%,@6"d]0V4_6^ksDJ<5J2P27J.qX$%^Ds<3HSEPN5V=jsLV!-N&*:(]O+eGN@8$M$i5t(&0,O3c"lJm%"o=H,uG((2f9API>I7gO[%s4L.SeVZ#Pq%hCYqZY3(`HX6V,1c''5&;*&-UWtaWa5lcBR\j"JWW>LPBp")NZH+&S9r-ZAL4fceT?8(&:uUGQg;,=Gl.33XQ6#R%CeD+&Ig7EnIgX[Q5nA37?sV(A<6!5AV0Mmu^'6Z7XoTkf?CYCVQA)cMHh[9RrR':&D<5Ao60.WM9.mWh<<E/=rZR>b$;?.PhQig2%;:pW^Ab5No5qKAqQbs'+edaF[QhbcbAArt'=Zq(!7HA\/+`)*2ET_NP!-h)I\TN7ZnR+,5DgPUna^ot1$j#e%r1]^!=IK5[1+>^>%9GYe9k.r*:r6r:;5qm85LIS7@$5ZklK!7`5;uA=*g-M7/*sVf7ae@!Y_a1DVple^S>`Z@h\R!ZX6?N(2F6RfoV<YNS08I8V6rSD+%9f89dcQn>gHpU_Y\EdQAB:MA">[M/S)`4BC3HUlcU:K'\`7s%5<If*WT?HJ3Eai=u8<oMq-0nJ$H`\F(^;'-^3/Ku;I2_jE_C?1$%qpe:B9gi!IRd9FSBPPMtf1Eof58?K`H'MaZ4%8[)K&e^U.WY%W1@I>h_OLa#B6$q"3BBb_X5V<Lr8TA+@LG:_6'Z758"7Y9kVsfe%URQ*HJ$aJdkN+(iP+,4Z?<J#.eX'G[Tp!1gF&ZkBcrEL@[)..t,gAp<\9UF>.lB_`B7$K^SSC2+X]IQWkM1aY=6nU]W-(q7@:sK,%)4#%'rEVfEj`'T4Z@.'?Od`QJ4\t^E./BjXCS[<C5mi9A;/2\/VN@J'g'.0ABtE7ED"pXoda\!`iKAJ+)=WU&73`8`E[g,U9RaTW%cZhdQfggpBIQ#cd@_[HP4k8&.(o\srehje+=J:N/:5R(j[/Rdlm+niIl>QS2@<+1T<MfQCIghO'9W_VbD.9?\1fCmupqi+0.4Wko%4XWJ'ZH'PbK&k+f;sU:eDB9e6>103!kY[2('pHBRO\teLjAjB0'IG&ZZu`<gIV$OX:63M(&)onCILDR=Ik"c[])YMoRS1)H*m8CN%X6l/mX5X$`:]@q(nq2R`ZlVc#fu5K1$^b;ai?D!1eLq]um:m51mG1q58'kDr6'pb6b%`rE-T)!AqhmaQKO^V9GC:"*E?\"=!Za.(%n7lf2brqnZ+I9c+W'\'h3o3X"+gZA(<a?XZ$WAo4n=%j([()eDZCu'01Wo%Rp?h`@\@eErDU^rkQc&gO4o$C/3(/b/#,UHb\-gqp%_36f#\<W?2[Q]i-W.]?pa+.fJd>hS.GQE+(qd?8ca'&f8X]S/6eB;h^b0EksrS$-2mo)]t\$)iSc&kM*]^ieT**ICAEbKY+c(oie%VQAh[);C"=aKJ!pYBc/LkHYNqLZAjnCUN'R2N\NlHZ^"oA\V=nhLHIpK$Q^aoW]8:]j\Dd.][9njqHE!#<_Bm6RfRQILdj0?m"4$%k#H@=nD(p8W12_uk&fs0lJXLVNur<t.D=<YFq@XpAA-9lo5OMQAD7,\m3+1p(I?9or78'Jkg`9s.:h.TA`kh^.u3QEFsgDsNiO#\%mGUi6Ya-OL2l('>01iAGq]]K/f>jJE9%i"KBIL%E_rACj<$(t'4"E,^AdjZf$.g2](XQh6AEDZO`HJ>@Bb[p<Y$#LVHFGcF2*,IA%)&bB=MA[A@L`s$AFD<Uq22ZfS1X<"E*[/a_8u:"?1@\`r]e(Br4t@q[7^Z:Z7jV^47<<g$X\hhr,["jQo0XI,YBGlL>/XjH=,^eP%r5d/^5BB5BRaU6rP)Nn`6[IKQ%^Esc*Dfn&m_1kF"HJ'Q67''5.e_"oBK$@Y<5Ukp4Y;LgotA+1F%'@MX58H14R2[L4QAuK2srNR%acWa'&]/F&:M"PPF(17r>X]QBDO\^H4%+,[ONaXZ+eTV5nrV(m1DtUh;Jg!T,JV;q0A]Ms/5]BhI`F,lfch&Yc9!eR:Q[-<=["!E%AYn+-O[`YP7B+giO9rRsSA`N\(?V@4TFhkGe#ibRXs/cOJ`ij_h7;jHa8Chc'Te:r5(%:!7)nNmbF?[Q[!5rnan[PWWfAPHL^$IC%[Iec24NR1+S_]Z<%dt$:PnDp=XWfYKjj<j&?HF9(%];629kL14E+0B!'TK]0Mla_'mJ,XEH4t##:DJ[.Ra,f*YtX+$L`[paH)Z(]%XWeT,#^u>Q%I>kEkjF4oejlAl$M74aVIt2_iI3tLVTGH#'"MuB_%5Q1ALA=-&kM%r<KtAc>pb$qQnI=U_J4[:^bfL%L0dZEEK#;T%7?"M4&40KWCn6ns,j93OeQatHI5pM(o72M7j5P+Li\dD3)#jdf-lfNB?4=a\'oZKq^10bu1WD/:rma)Uhlp:DJ+[a9_Wf3U,D]"+%1n4dNZ)WZ8'>B?7YJNjQr0t!9Y?,[\4=C3TJ&,PAiI&3E;*Jc9kc9f"Lr,faI<l\QU+eubCOCp%DkBZ7#`;2g+Yt];Ue:*>`G4N\%4GcCTSCk)n*H'e[9F0[3=LjV:M%1!_gip85(OVH!N_>'..^W+a*[+p6M$C&)/ruZp95ro,O,@0!&*ib,j6st1j>;f]i>1ub%_K6u%i9SP="2`b[eU1$ph%LbqD!]cKAGqADr@3YYJe6TH*&3U^f)*?TN8j5a#nV9FLuH^D(C#IZ>R(<%k*(ki-JS&'+I%WD)A!s7+H5cM%2'A7r4Ge@a!M]PKdpS7=Ts8ZT!((QoJNt1Io2FWY!j_P8NDD0[%Q#<X*b.im/j8-DZ?%`5.2&P>5:Hm!Z,D9fH$kE6!3IqKd%f2a%4<*Oor-iC?8urBC$929Y($K:OGcu]%nP7O<o8,I=P.Ma+Sg(ZO)GAV:W=K,@Sqk-,j:n9JW,bTbgt]'Y1CUS4U.$.X`&nK]j>2$K%.T6LmYFDN\d\77<*\/UPRrWsJl43B03=C0>inYP1]UYr.*\7$n\EQCkEJ+IUQSqh\qd?Q,@jR>([^36&qs:U<_?"]m**,*D2MnfM%mY)ZfHGp.1/)aGS>=^a#7Sq,tYuWo8e]oi5)U"6[IgRoXfTfM.d9P*-N]E%JAAk`U!#)ZUYm2M63M:(Wa0F==28nP-N5ORnb_an1%*&A*ma0?M;@?4o).6cgDoD.!1&#YjaQA88U.`0KDcb0it*@l+O1l6%t$`cHbchYct3R$OF//Su-_Fb4kc\sA:^I/RTKj/8Pqt`:p%mH\,EQ!Ej07+J>fe2Y_+j0S?ePe+q[UQb='(%Y(+1o*,BacY!)ih#+-mh4f!,YUClcX=F<`)7"=HGn`0eOF3tIGm8A,O)HZIM@fY%htD"i;[=a(dB&1oqZ1@,O^)8FS-n(?"dS^A!f%q.5Q>b'=!Fkd/ZPT%%*=%8VQ^nr`GtVP=C>%T*$%u/9CBL*G$3KL-[HJ*qj4A_%kf9;'+lH]VV2,'#b%1Wj\rk+)R5BWbp;N]eDaE,VO/6&-@r&Y%0(m&?d_Qe;(,iJdO]g3i&h^TVg]1AoS2sYO[RmbuiD-B2R[$3/%aU!Ii;.F63,R6l/_cYXuS@d#'I`5?%(8jcmC>:5->oafPa-jeXH@VMq``lhfe0<geJq,:a6[ioR@X',KGl-R$"E$XGkPLD/!tNYl%'rbBL/0ThgZ'.*t^Q`O2g>3j0mqY*AW]dLNAQ`d7h+#$+K"h&VBjh/$`lFm]ohCoFjX<N?_6IjRk&F#ZisQnMReZbqA`kh9@[f2:%%&jnZ1V9hB9r+&%3*R3n?dIa&bB;tnhVR*@5kHQpMMWW*IslDEFsVA[&['uQ5hj``Y_(J'n<ClG[uDSB_5.^i#Bd"l3S[+Vk;FHm%&"6\Te+g`qbLK1;$tG-GDHVEJ=f3CdIYq;q-(b33VOJ4Zj:)Kh+Cd26b[q"%&^infAhY;O.6Bc8Agf#+0Uk?J"rIe\1L%oa+(6rb%=#@?D24Ia<MTlD-bSD%b$%>U4NT?MPTN6Tjr%OVfZ3GcBc/9=C3U4n%Op3i9FU+N09t&WrZPd?)T@uX`j1YS!mq4A9J;=KN-'Xt$%,K/mG8m,BJ9*2`*.'(t-)E<0ZEd>!q08E`="2%GU#N*9GEp,'>_?k0j.sQ51&rbB"kF/?`-F0T3Rf]IR)C!8KVBeC8emTaFs,bQi%o>GDq('&k-s/\*tO)I?-O>n_\3[B)Kl3_@j$Tu2I6,m.>]9KiGX'q/P]!caAQ/N:4+s:r0h$QfROmNG!&VL2,oc0;>W1Spf0KEd\%fn&98`nm:b)fms^:%U"Pn.$U>j>4KHVi>bCiiU`J.WTkUe#=U8\Wn]-03:*D/2?q4O'R*!+PD$WXl@g+,M>J$.'3usG6WjtOZ:Q<%>k"h[jB1AhEtc."<=0Q2n$p;>j*hejo)o6<iW>On(W9ZZ-at''f(ZelF:Kk7[YFU3p\[BD0,qWFMIuoJO"hMri$sBNp[qbW7S1VQ%pa./B&El!SM:ad0@*#:"!Ys)g7,7j.i&#'[a*[`1hUbUE%%@O][;.ksD4K*J7@E,>oUiPF[]*,[*Q?9(mm;%t.G']:G8o!g.2^qW%K&R0,bEI]FNSGHVDb5a[n@_],:drgl>O]<K7A&0AO?k)P@--4;N)2DG(9:UGhklO\,U)o!$Y`$_QX8@(2O5Fr1I;'rRQL1tfaP,m%69i\+Y]geb8c9p(+_sY,':Y-)T._i*A2=:RCcrH$M=j!8)%q.51r3dcTJpL/lrPFRs)FFj36Z6c^gZlJD4\:/;<_nL<JAXo)]_B[%o/+XHk:8"OmBT_WQ;q@C.eNsd'd<(AlH=;XEttqSIT1a3[EqI0T2T)N=!8@:&#q:MWsA`dYM>[*Ru:<Sk\_b(nJ/%l<INim(WKNa%;;0)mjHo@^d42ZR.s&PO""+$rF29\"cfFp_k+Yuo?C8o9f>q2PH3ij?L\X\F`Vl!H$*,_f*6,5/K9=D,q'-%u[+92P,c$kk+Z=CF%ItELdlC4oK\VdSa8W75V>&6XIQ?YHL\C*Go,c*^30ts3/e]3lJS+jm@@ks^>Cm0&5:\M]ac/JX@r%NW7(?b*[o]Gnc7-=$W,ee-i%&t-erqiC<c^cl)rqI/ql\K!4Do6sT._c/^H"*9<s&TbLfEmpn*+Jojd>!(/<0UT7EDFp8>B)06f2G-?J:EFN.[==JP;\NN@DAB2C%:C9El;@fZEqB+<]9Fr=e,s5`(2Fr'`q&tgZ0#ERl+=\a-Wjr\tXpO8;))lAXMQLYm)mptK\=<$2rb06@cB-+n-JRQ68em9Fo8%QC%.H)3X1]k)#A85dBF.1?Q/,@ZRIHb.cIu\,]X#:f2DnVH[,3Kb5LY3!Bm\JC,P/&eY3lK,!k@?i`bu"J"_rs1s1=`&+`igXsNMKI<%%l4DLBcFiCY"Me88W[SY<RN<[f=K_I`L@=*#RSn:[(!IEl;ES5EuZo=/fYJ:g_ed@2eq-Z),:b79<W*HCN+aa,TFnWDTAt9GWqor%<AZ"+;-p,/FV#c4c[W0<#TJ/m=5T*P_5To5=^2iJ>9\a>a@S>*]+LAW26,`K?),Md]6[D1R,3i"["X#(_W]_([p1\5Fj%QP:d%WJ%:1$-CQ]>T:$2MYNJ'?,uRd4<b;Y+_fJ2!=(er?b3NJOcVrcKH8E;enP+"En4,-dV/_l'01O(]p%3gh(YR\Q6naE-&WmjNj)TfPDS%8f<8gYR'5M`@+U&YYKa60g^d;#Yd*u4Kq&]=/X'"82Tb79N2bZ`>EOLWU4V,$du^7GBPo%EEYnn:0,m0j5'$n679*u(&MQ=p_s.q%F6`n@2"-M9Zat91qc>l6FUhm57>cej.9bM=#Q@ZXf[6E&88'cb.l#@b/6/HEblru4E)OnbGPeg1T#s=8jq1`j=Mmp]9gMlDLQSUb%AI7gN6o`E^T)Sf8b>:#.HOu>49b$Ytn8=JpT(B;oG]i%t_eb<Ej"PeSTShO2I=(TMK!'%p&1^*dHO=Hj+5_*P4Wu#MF6o5\.l">l%2,\M<qhC&^)Iac81d6mh&`923MKg?tlKM;L#8`0J[;5F,>!=N,K4qEf:W#5"Z8Oj-_0R^8i9`Nc_tk3^5$)a7]Qno.?UG3+Z:9Lf%oKja$=1l+*B&kgK,%K^+aD4,ko,8dFEuU_&<5rm]OW7L4Y5p/1E?!gnM$<GgEbH*/Y%?C#8mX:`/^:PdKV#X/i9d=l%rP#)M.Bq<%%CO//\+r%$"u>M454`jL%/?$S5%CM8>Y`5Tn4@V6KEA]$\TF.^a=l041KaFT_Zn=uhuU)6LJhJJB(>-U0`7N(j]]<f//DZ<l)[d=%O,jhoCZJ&L5rkI88l=iYndgP3&cI8ulJWi.@3Y_?*2],a=:g8(LR66,@6R2Q[2B>^K:XuBR/GmRU;u+VCAYH*Fm$^]_mT&fc59[B%eQjBEc5>n.T?.rQg,P)+6^lNZdK]%UT!Sf]$071VY)[b99P@p/ML6H]Qs1nA7S66,%ia7RLm8L2&7iu]YYQq3(K.X?<KKSM*R<h`%cDdqsD`4ETpIZ<&OW818<L$5O$JFc2$+0VAq'DP*=Li!N28S4<q%:(E?$k*B1I'lb@67;"NgUu/bHUbPh(S^?DAetba#dmT[u;<N%hQAEL/ONUsFN;T6DAaGimHBk(N.Y\ZRCL?j6at+4,aC+Obil.Qi-h^TCo9^;1F,cOm%%:d2Bu=MB>"%PbhA!WRn"U`P.QR=Zl.e3%Q[L-<^Vfs0`-Z9:`lOb\g5LkM=_TZQ\$YkX/4Q*0Y<o&SoYZQF@!9clLoEf6`.(mO+^$^_#t<u5]!jq'8_Y&!2FV4J3`sGD5dpUK%./mcA<aX<7q(C_V?GHU^Mt+kR&N^?S^X]aZ:$u]dQ>=jO36c]-G%M*6:6o]EI#s*s*(*2`)E#T8]KetG"lo@ghU2r0%mD62%i3a*%7fDP0<5u-8m=,`/AB.U'OK]#.@hl%6na8Xm1.'g#RT)q<8Y,Ti*Z:bi>Xk%<lTJlmem>d2q8L+WM[!>>"eb9S<U$TDCB;MJ`BSZQ%7D-d%l/d2dF!\-M?'U:-Q>Y'`7MBd#FN[PaFI4WE_pumnh$+&)8g8l6^dAcmi>NmKh6*"$S;r\T7`'$3?u[ODf(3UgH+,Bjg'Tuo%rTBK/YdT.38fmU>@sZE7b=J!`J?8[rAL+@ZTQpQd7B5-BQPQ=!KWVTridpj,Y9;-#jaj7q(^aO^LSnX::`.4nc)(c#_7YLj7/UF@%%$o>*RaQdT@1Wp>_L<<n"GuN%eNu-`cm.kZ?*J#qq/%+0NGVYJhDVfVj;2>=Z#-2/.0qk)@@N#<V=q]`e95+Mq[6EN:!ur4rFlpE%a?3s1ob(_3Kal[W[=XcF@#OAYj;85V"(?kuO+kH@rf],[B*s?$[b-'bo<Iib1SHM/Aj3MC\=#)oG:1$V:?Sn[G@j%a)%(uu@IOco%G+gUe3'5U:+A0(sbfjITfedVo=sS#!=Z88Yidp`.U>1q->kjLe9`.IbD''r#F+&@Fi_LU^@16#[M[kFiDa&mJ,QYN@^D7U1X2U.u%BK.YWCNqBp):".mGu6(OS9H>`HS@^$;;o/IR$VfAn):q$fK:-#Bo[t:OM6H4USh;$('6_5N.d`DFS;7F0<c8EHpKJ2nL,_=e$(Qg%!ZA?=`NYVG(9)qG.Pl8)Y/$/u,j.!PV7hh!DY9=0^Tt-`/g'YpeVI-qc*QaK/6(e_OmMuZEi\^s22bB0fjuG/oDe;H2)aU$&,%B;%Og+9XY9do>QY="Dk_3c_?f*EX8C`p-3O/k9e'<i0\3J^%pg6^uF%ibd)p*J@h#r)O'cEQ*n1hW=,Ns+-%#sNMfJG'5i0N*As!)!!%2+?YWGtE)=,q\kos&"&5an9qb#*S;tMN$fH[f=WtR/%F6&e?54X2khW0etohU.LIZhs0Y1Z.8F<).ITFZAg&lh1nj/V:YHt@T6mD%W/(>We@_t*3%Hb1`8-J'16md;5;jSF^F%r8nZRsGL]=$']B]2S]/QC\*>KHKAATJKgAgW$LRDG1d8tR`'cH&O%;&%@Jj!e)9EMO*%i0K<f==Z/;pKc;4.3/@faqth\&;9[U$;,bdOoF28@>H-!^\qU'hB)qN18g+#.l-__&!Mru<Fi$mfr2t[>ne1DUhK/2B,=!kDrp-r%);'A_F"#8VMN#@HAEHm&,ZsYm,82t6-:J,>hLi&1_rb[(*->YlaK/Ij1DMn?,F1/81/df9C_q)^>5]NS%s*-mqS.9Bq;PhI70`H<%+<G.,H8X%J0^*4`77N.u2(DL'C3WTdbcUf%,(l^/^UWn\MMtqL>]N_QT"gg1R0iS[.l'*DNb8ohMN%CW[O%:66s.J.hD-Q9&C%[c%OfD3*j`bpAJiG(:imNl91B0SkJSM`>n@V"TB'p\<jFdb,Ag2t_.5L+$B19gbrp"uG9^aNiN&dbZ?:AH`Kt,F4B_'5p*sR*J#K8ls%Vf[.Ai0!PB&**'Eii[u*"r=)A'a34[M3T8pig)g)aKX,2<c;<55GuS9B;GO*,,<,=r2:f,r5n)[CT>H,/?fq_cG2(cc(rG9\njpV%,)E<8RG5HN+sSS<0=AA*rUuSK'cF;\D2sc^Zm(/$Q4m+NMcOA%rlZ"5bj3&1OdT_j=HPnUO&R"9`#pTGR00EqPXB/7A^Vg0$;nUZ%'jHaCIl8tEB,);sN][n"ZY2cs?[;ZC7>AgCfdJW;a2KG^d)om`bg_N/iiL4746fou15^u6ZiA_"dqD[X(`A"KFrNLo:lup%4I03l%/5VJVAE?,m)&Z<d.sd-_51+m40("_f\#!]P?ZV$cnZVDVhA!FN@Uq67W.n6@-=UM)7(9(bAEHa"phW7rC?)Gh,DlnlQ'PXp/5VJ&%d=XZba9Vh$X^e:RZTYJ:XiTG*9LR"HUrYZGgF=t5>lh&BR>5]n70[1@\EY%Y_lZu>TH^0./UpZ\!DUZ_gt,,[;27o(bQN9CaC4@t%;+qD8;N]X^^#)8Q)JLu@0f#eKT^:dC<K%@M0K.n($WLXb<W93H6Yp;VE8LgK18]-LIn5\6!k.(%9Te#=T3IGOX47STA7Sn57L7Y$%qeD"Im&%j'le?HYF\oR?a;?ZSInYt:>kYs;N$8@Eh^7-&5"-g*Z)cs'CK9_`JX(FhPg'+uAOEJHKF_o_13!$:D7mQp>Hm\>+GP3N%D2OGf!`Nrm2kqQa1@,EH14M@MU(nP^=$#]![hqPgO+[Bk77IPBmt!tDR5onJKn+$MmnAV_o>!t\_0^8cm"*1kRHK.-+sS-C)b&Ku%)=qV9cR:Q#9A\*+'H,PIe1#=X8Wifcfd\a(p&J8<^UU),(kdSeP?&%Dd"rJ8=K,GJA44B.mdhcdN"BsR>?Zt0_c%kIaJkro;855<%MV[[>7lptORdtGJ'f&:SN?.75Z[7cq3^S%3:SjUQEZ]^%59e5J)FlQ1q]OcY/JedJLY)%d=@P_cD^3rr9j\2$6fEX`O,S.jR(2i*%iKTtRV04YcJ**kH15X!'@WQGHl!fRmrma)UIpocfD<EH7Vkt0;:Q+e:.E*[D#nF0-YoP'MlLBqEF9/gTC=mDATq,k)&XDChA].fW%ZAZ,p#he;_fTVSJqdM3fgq<`,p'KFVD"icFNA,1Fl+CR15)351RbCKepM"Y,f=fp/fQX#qQ=&^NS7*42]H>DI@q9p;#F*c>Y:W-]%k8D3C18p\5\jD#L+&6@f0(@'GNA%MB=)u_)qI*m!lk:;_T;;!5W8rDjPXJ<F+k%(O7S$jJTC6reYWA@BGCsC:om)qD@@C*#G+:o7%*%#X/K?d-+4"?"2-.!Wt?rrj,pmb`@'a=;_7[*cH?AAPu5`5=XJ9T>DD6`K7jXLm*HR8KaoOePTeM'0M\V5aO,AJ4,Y`L^BL:qJ4%TuE*QDdfoagIrV&>5-J1TKGUN0Xm%oA$T.Gf\-.OgO&Cs30Ig#p^6j=5U-iKWQOd^n5^Yb7S(VJJBXs'#"cScrTCfd03sr%T^IQc%B[8]b5,0F]Y,JFDOl8(doi?,iIC?^cT%r3c5?`G?hV5P#.>s+"`&C[CE8[8(j."&/ool0g4n?jUP986[mN+g3JbWhmXG?GgQ>[6S%*c5@#H!Jbj]6s.K)J8:)9bs@KnUXTf0N4$NcJ;^Y?^If=]:[BEVjY+\m1Eq'+MR+%m26PoeF@%7Et68MN>-dihh71B?;_4*Gn3)<%F!$:A<Hm+0hg?SMl]3!BL#kA5MoR5'S()he(Ifj'R/$YT]NI4":sTGB-@a[0brGOZ7Q)k/C>#W!D+CAWJ""[\H#l?^jb(^1>cjfm%Y=C'>`i4@LO*c/\\p/!Rh-$0%22MaNdmr0FM`MBhZHBAEY+#0tS%O0W;J3%Kp,:?erSnXGZ_):f[=1s*Z1$T$I^/X*@cR9n%5VO]%VHY)qfs6h%mde7;\%Y%OWW%0*3d-fa`R;Ho*'n\CFRL$G\schYA_5$kddI3_a.fGKgQq<WQ(%%Kf5uQ">itkQac:ko*nk'!O)i*I%WL0C^?5k0R!%V=,0p=b20"`TNiO!k*XYWU'2:@1>/NLMC,_UGSR2e$id"Np![)Ycb!HM4o>!jaALl"+W;4U=Ln^?0rXCe/pH#&KD%+me6t9.;s#Z=fanC-6sC3</]Q,H4%Z4AU0=Y2jo@[:q^/..Q]bqnKgk5-]GT!A%0YG8C'[Wg7p+r).]2/&#:WSScT!GkTaL^$^7j%iQ^0'd'NMuMt$H#r78^QT">*r'`[U34.\[HGAXlP3n`SZF*H,8apqCkP,@)GGpTV4U!7M>]>O../*?8m,c2/pre<0ejADEGlfYSB%Cp#LA^Q$B:W%@d8GNadMi''>S2#*>=mhaN&HlK@UcgUm7\!HK=5<_kBeoGoh"u/oU1V24XE\m=Y0>kuX9XtY@N_I!Ob9ELk]emlj%n(2Sk(>L[oGA_$CW=-E%3i(MZD>I4#4[X)6CI@2!hb?ndm$2Mh"7?kh?TWD\4,(G!:`3+hpUr\Inr6T&;Xp/MS2?!C*_V@MBYt[V%I.jd)]90b^s0b_i6+-q6KM?Nd'I[O;\nfsFe7c092O;*qC)<\1i(mFMR.kdg2nJN8T6i=CGL`\D(hGeq@1a$;lVR+^aEBQ!F07lC%BC@"qTnsfgS,($XOm>j;(hPkJCHp!XbB5fE2qO/s]Cp;8^?=0=%uM&hW&gqX>HR<tr3^!=*RT8D@Y=OnpNG`VJ#QIp:"AU[1:1$*%4<s(9m72n@-[hn-DXhK!m_?>MZFWQZbkfpXR9P>D9g=\JdcNX5SS.\8Vk&&#<m:4mN*D,.9I3,-QE/R-mW-B%FQV^]cde^SeQIsa%Jd_TJP<Go)<K#]SU;+O4OeEhFrSMU,V"ickN'-E2*,7M4dk`53g:sEOcH"a1/r%-lc._COMW+TkB1C[oYEF[^(K:d"0kK4$T!E]M%Xe[cADsaK^D$TY?*eU\`nr5!^;I<U71^4r_MW%f6QD]Yopm^I<4\.@=[iChnU[qbnH"M<L9IlRDq7<C?5OMu?dS+F-QFe$2RJM6*%)80@X4EDf_#%gG+RUJ3"@tnDT0&s)k;lL.,QMT$r@MY-mf9^FmF2a!Zoqe9B_E<7g6k6i^iSVqtD1s\So;7<iLmO'0&S!O82RBkI%].NcDRFe3Xbl*<:2KJol=_DMVSQ+?"f?F7i1<e=5j8Y<OXt7Iq>69lOO^VR'jkQo4p19W)NLLl$kO2X;mb7])@J\;<-H9htE3=d.%jKXL57c/<_8,kl(!HV*Jn)F%qG1=,Z9HfhI_5>@M[b6;XpK*r5rG2>lprSA:c->\k$0gm?(DqURkk(PcITp:u??;kN^Y)`ZrRR5C%^W%Yh?@+`[V0nIk:=h-Ur:6qqZ$WekFm^)q596R^e`b0UaY6e^@A^=nor;/U7nA(_Wq2;)9D^h(n\VO,[hG[?Ea4o`A&XiePXT1S%]NO$jIk**BI![\\F0@`l2Mct7a43*7K\[3a]cd!%$I[ok?>X2H#HsjE9jXtFrT(uEktj[7/>RkS^RVt8F11M[g`*e8AdIO*.p_dW%mN(4t4r^7feR!PXhhI.%A4GFbo?&u(s)(=1$-rG7@I,i('pC##$i8GhA4,68iC5c<A)KmCDqEkuMiCN%%obqmG.E4s9/@R9%HbF)%QIPO)jo;]R<*nV('D`[jM[ULp9BsgX]RlFpWI6A_mH^6W2X?a9&H!'cP5;l,4JjD6G(7'6eRgm+KFg2">:;Rl]%;\ldntO-C3*b1%*,MYu]$-Fn8p-.gh)R3:k<aU]+$,ZFPl&X\_d#W1qH8ac]9d/dWfe?g95aruW_ubBB/fB'=&G70>OC1=#)\P2]t(`f;jC>=T$)!S%2)-kL3d"H!(WkP3d;>'-0@uQ'4Rb_dQX$RXhtg630f#l995XmG4@\Jaq\cO_A]ZR>"l<YuqL7N(Q#-BrmDB<3V0$>/BGpFuamZc*%1aAg1PcQ6Z)cIR=9<GH,0*AmWIEBae-,)MZMS<U]s4&)]5Ll*P1KHljQWdl8?3Y0;V/P7o*ZbE/i$4S>p8ouB8<J:J0;^DE[f#cn%_,PB1\X4hrr4N3En'CVP2r\^WqGPKIO;WqiA5<QQe?j[B17.@dcWcksj[m6/U^SJTG.]/5`i8O'TU6OQB#g]'n:P2U9uXfo,pc5:%p^.h/.54Vi(Z/tV4a3?9bp%>3q<oTHr9R2MIpRk4hg+b_>,$AAS5X-S)L5*g="fX&NS.^eaEqqU>fl)=EqXLe0iE@Z$I\C5#QEE#%k:>_H(R(4K,GH;$^'JkV\P2F(q<`\]/1tfip[bsk.!D:)k$mU;MPY-fZbGOT/B)*I-7@l^ZP81gF<:D#GM+t4g>DZXS)hh&G&8\d%5u>29>rFK1Y:#QDGM11c]Ic1(`aU1crM>-`PrrQ]rtA#>iE\?VKW]Wf9qfi=D._f97odM(o#*PT,e<O$=+>'tj7ckDN3W]1>W-^;%$I'Vk9Q/!WPi0'LO/7/7)n@OB0.)&1X4:=FhEQ9-hf!sY^e*tg4.dG$ID:2IDBpa2?0TkS[-Xl9GL07jZZ71[brBIc>cl<Kc1HKn%!29aRHXK)p+`4jT73e8fhh+=^C?\&c.mLDjGFulk0!V_al-<D:)*4/J)P0Y<oHA?0M/,L4`TC,;Se,#:[jTkQU[>c@(Qqu>:VLG_%jm;MUI($V)alOU*>Fge(]6SYWP06kN<mP%8D"Wa:[b=LNRJE*K-(!NYD"YT,$cstI6i2S#bCM%O-ui]`R;qsGlsX78=A'pM&::):%%GJmMZkAX/G,f.IkAf]YEZqssmmnINj?dkpbiE2'/gRonqtPmj\I]8Shs2sA(Qr!u$j2YcEnuldaXq&2mR)$*[5>/;=5k'^&JQOX%>IP\J4-GLu_&)jt@!3&)^,S&G$r),sS>\;'AFThtDYb/V3a^e#f'L5+noG[<PcBer'o+4kQ=4*r1\85ZEDEpPGulc78"8be]A%I8%JrGlhL1l0as$R5Ml=A%69e[+d2d@#T(1_ZClL4qEeelS,2?%Idl8da3JrH/?K:$%!c=@h,A0Cah#Vog8;jF<PrKm>VX!EO12ba]X%OARrb&(Lg#XJ;,O@/b6OR9/YHrr.9r22l)Wc]5HHPL(XX-\T1CA)R-iCR&ON<D8uB4+3r[;%,tl?\Xd`L)gp%?1Yu+FA1V:a:E>B%&JNEqS(HXc@^1UhkD'Wg-hir4c4?\K'?>at=%@/;8hRUMB.YFGosGi'8AsH98`=*'ON;pIEXiU'`%DhW2ctmljMGd0ZJ22Fm*'l+%f%3p3;5<aJBB/_En*!^9l7SR*E]]g`&%7ub<%!PH8`$<ZfBoc6QI:uje@*Ze.J9O:9sJ]&m=XBagH&N8rm<f]e+(17q2j9'CH*J\%nPbrFAi%S>jbMJ[2RECY1Nk?dB$skcY2lOIF+:.o2WJ?N7Q0jcGKshWEdq@P\j>4i`f%>G&t;1f_QYXDpEJuX5O\C6MgqeG`4JP2%@*j%abM8S(]MkQSX@:2%HHbL<A%E^3?nP7,[c(8DSs[^)a`3Y`/j'][WsnT,PN,CnQWINXNaF#P\RLT2RJlA#jLCE'IZ?M7>h%9J%V67A:d=2p=]E;VFl0\-6YaWQ#dbE`\]I\/+fjSnK]q+9ol@@poiBfTspWZEtZ?nbST=VRAhP,<sV;U/DDl+Gt'OI.4,'@DBgH4-h%Ul:.n-7cP>]387UZa[p7VbIo1]=9M>o#c^:QdY'GQR9-3_KFDCIuR%e<4Hi,n51%!G(nsH(EPcg0oA1UIPfU@nY6I&+//_r3fY:f%FSJDlPukL,_)m,,hD3.^+6di<4WZiQr;G[Hj$sn,5#U]8;YsO(Xe)0?Z$-?nITLl6Z=+BGoqNIgaJ*_f$qWB%Oi>S@G9,(RZ.M+:%MtJ&q-e0CUkIYS0"(n$LF76k;<;'eInIKtE?<P"Cc9P!ul28Z3e<6UAU:?E8/$3"IR'&VHBAS]P->+E%(@B)4;sKV"ik<A^%_0V]%Vf$DHC4^HrNaB'Qi[I==s"Z.IL#a#O]adVS+h:&8f[(l[P$=/Wq/%TUG$dpm^M_/Ij;*r9U(>@WI;HW!abAdkSZ,U\0'd#rQ`3D0%lB'm%mComt:-3*hLFU$j<B4U[711b@(VB1t;=\uj'OO,1$/*4Nr+GOpKKZh#%,?.WABhSaFT**kA9QClZ)L&17XZPmfBr5PZLa5%%@j?ea/BF3HI%BH!@tKZM2kc"Je5m8n9U:4p4@^D*A<[LDqgLRe?@:EESfhP'Pkkr%5(E$.O9&W\;-trsUaIWfY;Z.K/]_$gI)pn5%,Y,ca"<!bcUn;,u^*(nkbe8Kf0s?sjjp<ePo&en_AErVA\1]9BACcg.,feYF6>_V`R8P%k/Q(:!kBoi_l,uTS9.Rggf`\&R)0>]$%&5=jIAZ?djWX2-&1<L):9JBE0:p(Z9rFGsB9_5s^99@O:&i@E]hkr(AA;[b#s(Hr;Pl<Vp@2.ml]0q_efE2F8N'3Q\Sej+I-Ja.F%C,+O.GdSFs1<Wm"O;Y[dX$qd+:*6&M_e/HN"W;[0B#oQ4b;q^Q5t9!N@$?_)bg-"/:]qZ-<ML'jk2Wqb"<$5iL4h7DqJnkK\at5n%U"Amr^T"^=MLpfW<qgstd1^&fF;0Z?c1NYDMO?':mRuPk9_.oMX`\e1MBg3@:rJXLhr;AGjZK[Fc^/`B?]l+6Nk[aPj#?NT-(jKR%pl^fdPEuV3WSI4X<r_X&Urrq0""E)5,fiC+!sp`;4[e^2idsjmXhIrPKD-\&JrI9El$'Wj#m;,JQ,=>IXJ@[`6)HLt]ZbOEaClHG%3LA00bl:ChN4i57+@5/gH*;f.Mc;u.k5G+PJkRWn8leYiP5j6\R)&qDMMJaJ+Of+CA?tuJg9\lM3cb#]ApSL)ZZh6K1]M>][e\lf%q)',!,KNPZEh[EQae=&ZrSnK6il>Elo0X:(rhi9A9r6G^'Q^[<4*A?7)E?_O;,:FDa@qn7LG8NGHOs`#>)"<D3-NK=#r6BF]upSI%GIOnO"IXd'THH%iI'4$4L^GmeBD@d;1UXk9#Vo?%46eMO'Q\G8+'g;9^cCqY$8N-AkNiY+,QXP:8$b-j*E:XX"T7Q<)fB61#Q+CN%AoF&9]O?i8eqTtqaf1cNWS9F:<C^Rps%B[W%$:KNaPQEMr80SSg0a@1,6c@=akQL+[H-_k-c6YZ1gF28Dc+`);dEJ>SaP9<H)^I/%IHZdp*[fLOS"CC!?S'_j[0LapMYgW2pr;hjnoj$?K%O=U\?F5:ooQ\7S`IBUPZ(lu]AG+[k%@i`I\V.TCusWo`3fk&Y!+gQ4H'u^%Y7M3hWIoF4W=3V_X00$h9t]>r[FM>)npABoCqa#?^03YCp-Y*:cO(7We)=G\5<jL]QM??^?M\eMasa#h>&k3n(7Q=(&h2GQFt-XL%P$8o5P,"fgZI7j*FCtR/)DJ/d29DZF(=YcFHZL9p%ehWC>^hM_l-\si]qJfTjWD\&E<#.uZ8Vp.GR)=HE9kA_]Y.ioQjhF5HA?3(%([kdAqnrH^lj[#/?`\CWTBf-4`?koE_od]pX"HO.&BHPuT8o97cr#*Eq_\C?k0^'YkT7qqHg>$?`RO,C-ctVTj3<'1!u2V_I`$Dt%JH_HK*=jqVY'd(]Kn@N6nM$M8@onJAOjlZZN$HDSg">Q=DZ>:$^Jd8=<<X8j(+IC28W^L33EhQfOHa@A0?Fr>o!G`QYS-eq>X:j8%MRQ?p,Y*s<e>Z(%Xo?@h8Pc]9@jK\MRUEKFUEuaFRUEKF"#ij_=--:n,Vm3k58$<qA?>dY^E=b-I\4C(WuqK[&enlpbAWs)b645D%&!tFgCDP1RgL90]hEAVMO9sSB#r7f0GT!H-5t7f*P$9udN%`9-q0o]8SrAZsr::f)X<@,H`kr3/aS[:Q0XDtZ3o%Ghh1El/nM!&J%O+),e_"8rC0ToUE.`fi]74/&BnM"#UAC/5@2*iS8esa\cl-0$o3t[BEU+IW\X1g6D$Sm4hQJ_IXQ[DAb+EM<s16UC]^O\'&ci<S_%?%Xfpr_`ZAq3%nF$%+ML"RZXQ2s!fHoOt^8Mi<#JH!#YlCY0HG#.H?n0$)+'*dtdgOP-R"p-=5RX\F5=!ATCd+>^R4,$FlHmANJ9%c@`6QFSl$dh9.B*^Yh#6V=i<gfZN"Djh6Wq`sXtuk:\pkVjfgI52?qE9,l3dMOgjsbIaseR[`QJeXc9lroX%(ip60l`m%(X>[1Jr%H$F7Cjm>@B/rNNnCc.uWDjCm)4Pj-)n*]Dh]CUfmENW'lmB<[NN>iZ,G5ZB"34`45D(Md6Y<u4Ar]5OUE(NW![iJ')dnr.^ESK9f%Ulr,;RsRASE].>mY,9)W'pUPPU@<3b,i2O@TMmtam`AQ[=7j0r0F\h1`9-(.Hcdk==7,)mIF%rgA$B4/k2T-qLeLE&pXbS;InoB,%02Hs-g$4>?].DlPVqeIUJ=aJ=l%[h)mqsZ7VGn.]J'0HHq--:M<q<FUE]D%dX_dp]:Ua?@c:YC@Yoft]"fr`9r_P8;QVZJ'K#Qg3%W-J:$;6=.O-d/<q.:.5mCSg#jlJ5h/?ON9Z5TUYY-4_n<'t^"5m/'hc_OAYiB.Ve8d`'%(PniIbREiH+h@c=2;gj59]]>4:?2=93%*8P/i;)?qn=,0H%pu]I2m1V?0DG9$DM6.M@jk[;(.&7?c6:>8ScGuJ2]=%46fdu%:R;T=B`s^)TTCp@`r4RHHkHF#T8WBXX,QFcM%9%M^aP?`6EmrH,kf046#iUKY&(Lu&SoZT8'hrTd0nkFI_q]aGVReWb>KT(_9=2,[fq<$HiggR+H=nMFDT'ig]eF)_9qbP\/5AtF1%Ie[>Y-_h?=4(">/F,/QOHrJ?Gb;jq/S'Tr@l^r+(`n\lRP/Ahg9A]D[4jH!![rTSL<>nc+.Ib=Eq;mQ5(KIP'KMfHd3*f@?bjCUX%pM6=s>ts-Xoa:N7adF**-aCT/F8)!of<_a2m!_!ZSn:kgI(;31iK*94Z<Y(HBhP,r5`5)0*n;14<+\'l0C!<sQMu-](6bAr]kmAu%ik?$d(ZZE,0Bb@?h(+NZe'@sl@_07%Ul9"8pMdnX>@TD,2Vh+=2RF6.eCrNdUO0!WP6'3;F&k+sD"G1bhJEj+d;:HWlQP,XGMT]k%9mR5NpD\1VU>)EmqPWifQGFTVS*uucR;n(f3&e,7+M-qKl*`'S=)[U5W8"a*]'X@tY)&WS[E=mV0U`mGg2@`cgp39&VOpu:oWagB%XCoi7JsSk^]q'kH^14]LhoPW*h&VKBd-g5taQfY80LN/DIIF>+SGfl08RdQ([&7-p\r"P^=3KjMb*6L$bECHsD5Q';lRRX4mOK<'%C&Kr[6KpXI@:-[ebiHs,BZF1d1O>)S*nE0@$&qGAp<@27N]K.*\t%$T2Pja5bl+=9_Qe6:C@>S*"0`[)$acN"!SEA"$P\fI8i=;\%2%+Qe#0X`#ESd:<fZ]QD3^)/%^8G)L[*j/Pf_Dha-g0.EMkql2inr$G>*c5daZVHAQI?qD\LlbIB0Cik9:sJ59"1Ef-q!kVq6C6H%qA\hl1!O=%IK&21"3`g12UP@%&4h5RR*OJ-h,<^(K$<5Vc1L)Z?^pt^LoFoZ?0A3T1>G`)b.>/_UQ_UH=8-Wkc-^kGnqVuu5'h/j%H.%#n=QSYS\1C)>OB7oLp=qLaM[CBU&[+DFfi>-E&..U*Pg4DUj]fW2.3:j]1<amI'T\rp`eM?.4GI<fZ"ml!YrG=%s%<kR-&@bt%N2:b-`B03.>qEs)-q^f_!_Wjg(*&^<S<%!t;ET].1:.RCV0ED;q^enBV0ED;SZ`ab^5^F@AhVC1RJtSrQL!YS9D-WkdBU$"8hQS/%Q2:/E4nkV!re#3="%?u!b't+\H1:"[WuMBOK+D9`H,0`fYq$n%8]SS'jlOTD>5b"$jccC!U[lV=,GpfV']ZkJQ4K"u93V(g4>Wf`%DfmqLQL)kG]pg)#]X;5RYK*+pHas&I0t7F/FfGhR2J0^A.SJa%@iW'W,^5i^9UXN[GiU:6D;NN=1[K]Vfjjuj"SJ,GKF?JueDbpt%p@08FC=WXN:QHcj=W#K)n%N"*>XaX11>Bm<FXNA&hT'\[MC_itRF>)>RA;?M!nVX#8U5EZE\GaJ*Y%Z9q-T%hj0Zc&A(-_B&7pE"%]_;[b$q>I#-.J)*rO"7)GGha.2Dj[NEO!!&5&Q9;UZKd$9].W-pu;+k=f+?=\(7IHr5J%#bBkTiX1b>KbK66OMs$R*f5DXH4^$Wk%Zau@F]pl`&e5U46PAIp$9o7BkM[bh7hTbRFH[1V^'alrk!r6kYr8Gk;Y;ndM5KWI>-+s%"miGrZh9kQMI1'o!NV@E'0jNSE&7456%[Vp:smb;JN)(glr_qWoXPFfW/^9?&K\ec%*nGRu9*ii@lV64<'m[A(7C0Qo5ksp1Da`'o1ZTF7$B"fhl4Isda+"V'bkAMEO2=!ef%D(2s&j`gY7A)bbhYDlT-`8ka+aEdMdhuC"<q52"5j@>'dAi;7O)W`h]dK]#q,d'V]SV?](9%)C;[]%DfO*8s>=-^@IG^2ej524[N%M7,jREOhH_GtVFN+Wo@!gQ=uH7R'..lSKa2>V0l.9CF`l<X&'F`9`tkUQ_1.5O+G;os<'1PP3/_N7_;k'%cdI>>jfkrUP)QqVdDc%\I@rK=3TL3-`Q8NO3ZNDgec<[0lR!#GQrJjY98E<1uP'5O4E38nX3Z;'4^/@Y[.m#0$:GpDjpIS"WfnSYr%$?j65U(k&g"0pV:j1%NL-Pdp3.n]\idAXG54;jqXRVUj5\7dUJ(?,Gq*"Uc-=a&DHp1gPu?3.ZOLsZ34^+Z%gdXIl$3(#Z73$62=IeFff!pC?>*mX1JWR#%4K$,X>6?@o=3[^R7Em,q^R$$gQ@S04P7G"@]Um]Bo?3`t@?nejT!aEui6*T"9PTYb7k7IZ,!G(bG!\4bmJPp0[eetDY.=+^5#+*n%2+(@r`W[lK:>W288pp8*q'\mQ;1('1KNBV)$I/$>9N`fgL<g62i)P=KPn"[U2M1HmY+/SJ.cM[o`6V"t:[>XcD#E-bWPqYEk7<6t%k:0:(L8q7/([pcd*,d<0<f4U%dO+AZ4h>9X36"^WX_d[ph?@Veljc!hiqZN\$*@oi.Z%G9mqqMS=E7pF>NX4e.:5;J&ZU"`]U<T^%I5q0(**Lb@`;o#QC4k%!$3I@ts0;L-dj5a.>j9?q3Ti#S)m\A/]HF"nZTG2TJ%7R(SU!"\\\;i*EE1rnIV(^t.ZS.J8J93MP/tXM%J%Mfr`QDVXE.ru81>P]jX68$bbig\j<!q+qQ'"(n9]PH-R!dE=<TY'fAp,JGqs)oO\'9ji;OlqjD^q#E#m?7!(&7%-qAMBK5)h1Q%f1/`$=;E*EZgDj7H)rojMp&"h0,*DE_4bF->`8i*ou/E<q<SED#uj'3e'1tcMg>q7>g6p+U,>^ZYBN`SB[78D^V*]iljjq][L$*s%VV[>2a[h:oDka_JI7;Ic?*rlcYqg*P0>F&lI6u)BMi2LIB=rZ#o$/p4V;!^FGus[a)uOE-s0+]<_&m:a%gV>Jrm9dl]Y"+XIn6)5%AoI+OLS*YiYM-#MrF<dCfu$]G3PceLq%$iqebS-MW%-WPVejkBOclUK"UO_fcDr[IpVU_:8EXcg[Y0FsgUSanp4QoO&)66/PB'sB%j^BpX4L&mtT'Y7a7:FO3VC0]N;PQ\*4kik@iK'B^Ea,I/A3#\kiu#L!p[Qnu9JcJO"GaL#cl2e<E$/LLfDfX"QaUA,9k&RdEp4^]%[p$I-SM18Aale^Tm7_tP,]*D'e#.+tU5?u6V]U$tBH?mtRl2`;>%r"QbtM45Ql8h$?(>0P^UaZerq5=8Q!m@UPK0lo?fG@b?;R"*%]RITCf!RVYCL'nV<f*N!rSs#g[q&`'n"'p\2/a7*s2#ju[#9%1/^LiCb[eoe4sb-X`+AJl\XY>KKOU!Z]`XuiF%bp497JH^agBW:%lqCHM8d!OU;3ae%Ab;g)am8=3\`+^TLmL>jhKAV,D9S%_B'-!K&(D);:Wk[]./muSIJQJ"jKb*:>\[-d,`_._/&!RjSq^%t1\4j+%!7dAu\I>N'GLkZ!>WnA3d)!$LG>%gR<@1.I:Mj<_.:9h+=c>4*[8DZ^"d%C,NEn!jDXY#"&,>ku/[_T^<:)#(nr^L3MK[E)jiH5P%+5O9pqr]'XIJ>o[dopG0XmW(N_<99#>N]X3:X8t<IH/MmO&'D\^Q6U"bcO'8hqbDmNO+g%Ve>R?*IV099:0nAZn*Cq$Soh?]PY)A%melV=p@6/WjOo]/[T3V/^QlsN,IL"?0^<2M7nRQ]$K]RB)-)']e@SQn6Q&GNH:+>$A)lp'mDnA]h>O8*D!fp.RQ"$NDn!_ET<=_J%>+,9]DK5[;K=fCJo8Vl+$d38??CUjLrcnD'DKfU^kfrb)*a<7@TnpJlRVNj!olBARM*4'CSb_m-VUTFS*_PPhpkEV%a#iRY"euXT%cAfRWSc$i?)P-j)n:bVjMG\:?It/L7FQX<4]N9Er[)U=S3PP=RKjcRBDEfXVMqKWurEjqn%;<5\.8<t"UbFK6D$G"^/(;e&QG>%Y%=0"s<kaaUEcB5)*Y+)V10XpW[=s6etR$`XNk,6k[@CuQfMQDM\,3_l%[+/bQ]_q;7KiSc`^oNgU]Eubm2/fZll\B%'WqUbogKV#6%Xg/$>j;Qq4T**QXrC"a\do$GIoN`4CKP"c:cLLYK^-Jh_ouN*R"V5ch0uj%^O"%\?*pgB/6e7Lqi)-3m-rTleW@AsXf?3dW\S]?)%nn*4]G1#+`j.h`7eUjo&WnfegC#SF/jP0A%jjniqp*@PQ2PaYefHcBPI,h!4f_\i^K>6q!nOs&-0^r]QIC8flouZL^Vg:4W[A0^&%E[I9Xn`90A8d?5/Y;^iV48Ufn@)ph*d<VOUjG_l/2C?[Ua#F"I_VP\BELF**6EP%eX[2tuLUQfWd-F,Y]uf'MK=6qp;fqTTi\i\F%(Ynk(q_]IVBp8"!%c81WTAJ\6.m,IIpD*J%PU6hD#1rn:)fL>W`gY<MChE7po*Ju-];(="%hu5#)4d1#IM-'FA1tQ>f/Abb=5UJ?%hmMk8?[:PCI+RL#jsp9%jh#]'OfPC.qr]cPE?4Nf;.(VJZW;phNfeKR7>Ujq)j@jHNYumqB$@@PU[S&`XF0g1U@20UjKFsHYj&i1%HN!!sVZ&>lc,E*B/>KOl)S:!!BmDd#*W*KhIX_1;']6W!QM2>&>@[;_jQo>jkIomEnA-TgikpFjMEjpBF&kYfhr]iNfkc&p.$]4n%0r*5D25T`d.6Un0EaSaND:"X,?>"RkKINQF0<F@:\7OC'.,I+ObMr$3q0>1";QZH.k(eYSqfe=fH:.Z#9_Vi9hn.FZ^Rn\T3i0cO%)k6"ThV;/cdbW7GLWPD7UR1O=o54;US9J5@dFsEuQQMtlrm;sPIlgQ5JTG&!7ocsPlDHl5pN-r6Z,':/d;=rH:$u`k6$MG6p5Qfs%A3We,a\(<&*C'=N?dkj#2n'l)gJ6Drp)#mM"n.*d8,'8%%\3oJGFEZjd<X;o/soG6$X.&(ld&@65podl,'8E?\efGiFMZI$ecj7_%It-GV$E9]`/s%mB<bjb4%a!$Y_4:GTQ"JSFO1#G7O#/a*e9Z\6J=SAa'Dlb@bM8uZK_)Ta8(7hYSXY[H>VH[8-Wi$^/WRQmZ*_>H%](?`$hCEnsJb=BJ/#N/mL&6JdfQtp)dd)dXS/Lf8kfh`@lrBP&^2R5a`d2I@gf;'SF8j;BWfnpGqunFr^nn6%RI"@)?adCUoY$Ag%Hc=Mqbfn97YNU*uba9hjHgJUN38`Z/U><_+lHHl/-`^;g0Agt\EMZ7'?9hF]p=NcV8:0Pm=rDYRql^S#MXh9]?JfX:n#\[tbtZT,%2a:p_&+"@AT7m*sFAHuEZ<#6C_KB$lQbHr&MXu4uc0!Yd.t4Ya$%d4LGXZZ'Ah^C:)B5aqU9AL^F3OZAm,tEd-bk(2WqH3-cBjF4%H%GIq%dh?Np4Sgtru8Tk=^6)IM0<])"?Z0cUEOpqDD^DEfG<kq,3a5V?M"]+>85q#.5D=4HBOeYYC*[jG]6Hh$+^=[:US2)#LuZ+%;s%%0F&3=b4f+mi*=(+kgf$[4Ae(i7\>Ri&E?%qFEDPgZAn#?2Yq(HOVLnQM/pu]%3i-"id.Ca-V,UKek:>hW_fSL*9mhal.<>jo%-g%N])n2'PqkrSY.iYs^<T0k<Xm&-B;@BT]j`,U[q>$8%Rp'<3&p\lurPr"45k00fm+mHCqoA^s4)^r?k'r6cTDH$37T**ELn]ub%6D=:IeqAKq,b5q.QWhSu\^g<?)]qhhJ,&U1q#!?$o*ROk]77&s0ett&Sp`2_>o8uk?^&-g:Wo@WQ&Ft9r5.'fA7S^>GPEgoq<D&W%f7!JPUK1j=@8HjP(<)(1%f[csGN9iqal!(TP)nB=3I7*PS>nM1C8FLe[Za+<A9H_2CQXU(@TZg@M`_qM'9Tb^.a;M1b'$ZAogi"^%D:-ij+XaB=:"kFPF2I2tCDT]BiL:+'l:tN=jeZVuObs`u;'FA2=ll_G6r$qX<=%TNj/^&jS[?s/[]bjV[J-s;-h]cP3ZHa95<Ja)%o'#l@_f9m@"?J>W-Y4aI<0u?6;Q"Xn1+UMQaP0F[k9Eu))WtZmZM(GdMm?Wd7Ac]LD2Pc<G\+WRDs/Fs5.*F'0s\62_//&kOh#gG%^-=Y?q/Uq1G,cp@rhu:"8]8AWma9^-p[7SGo+1ke6mEB2X1R-LZ@-a_5C*.fr0-ruc7:p,:;:nr?E`cTC;N.5rh&W3C\eGtqp]FH%4S="t>hY+C4;-+=M/%>s1,1e0pp=&B0@q;9'kpm4C*Da_@\QKK=YB_&EmZLT+d"%:SLD+X&@J#f%7<lo74RIg>4SSSb^U9K=J)Ak%/C2af?-%fZ7<qhR;/A"f%M;8:+%8uALZ=;EejX60]D(2Qf$;&.X,"tnA^_RnI:eXN$,7!$U01Nm"a#?0=,gIRT,<kOD>F-NZHGJ$%7(u9rS9?WMj]+CelH0l<>!b+nX.Yt`9foK<j?n5[TGG(1!R'Q2e6`AtaYF\;W!AHK(4HU"ppp0oYYgOSIF.r_WJ<*klSb"Ydrm1)%W!At"lI&)jhK3;?"Y\<*2O/):Oe)(saa$AD[Sk3R/(mosg"+X+QA`Cnk@lg%D3\kmeTh;&1gTPjh:CW;e.9ap%0n:N50CXLA_m@n%.Lb1Bk't:Ha>^4!r57.a=82E[MneG\W\/Na,`2B4BVQ-[p$Yfa-C@2<l]T46,BG?17"ppt`hlDLT?_UET:Z#9PTPDTErI./0=4nt%qik<_mW6MJJ9=:NifP7@^W[Z/OqAs^`]bIVec<Xe#n.`F&a?\],"meOCOmq?cSkiP4-U!FE,iQ50)8;,QL*'P^d$[Bm.1f,TE3`R%2B\@Q;FoIA)ZTkR!'o$663_*gI]X&UqbgS&&HI>=!$H"V+TjQo\CLjhaQQ_.I,;oSi;a<8YI+B3q^eRo+9b6[KnDi1N>*aF:>K7j%H>c1>0<JaQ*4.pu<kr;J*<Hf@&UFksKKn!gT/8q!Ou0aS%GW=2Y+*N0`'R4ki+(Cem&C!XWU&B=CcepZPO-1)>C^r[kV6`UJ#^8,%oY,8:n^?W-12s-*U0VEWhu_t]$9j38_Og%r;gR=nqKQ_=]armI9e*VuGG\K`knJLR4,#iJ?`+<b1Wg6=`_OWAoOPXe)"/76+S:T`%>^mb-Aa`^fQmgE(\7;O,p4bA-!-5XS+2_Dn:\?(FpTBMJn^8i7*OJb&UhNIbh3fjN3RSL&#lWaFf3cQ,KAh]'A[kDS`I<YWcqN_Y%?=?Y&f."UF\=uKJq\-4jd/>'\@Z,L/Es'8=?>L47<C]O!mOtPUBQ^b`@*rSCS<Q#X?%rX`s';Gjb=LTW3uUuiYGq`Y8\W\F;l,bM%#YC"fJM_fn.=Aq\;qnK7U:blS<k&RbAUq"u6Soqf6pAt3j`TG*)l\]Q_Wn"@A%Kb^>ls<6^)(KMKSV`U[RmK&>3Vk<8da<Qf].eG%QloCb&=&;uZtU5CR[Bc]e:ibHGj7ZF5:L`K#9Z`kR*ho@?BlM#U3=Th&Mt2%&Ll2LH%;nb(qU%GTW$clR'II>(?RI#KEr1cLoMu3%=:(.d<9L:`JM$si(Z9SJ6kB0NWIqBO;b($&hZa@7Iho-Gb[9Z:iiX^K->u@areqEfN"Ega#S>Ij4N6Ds)C>g*&oF&f.Std(dWg:V%PO1$P*rT0lrZrC'K0JpiYb^1AXICPME>*GO?XUP\b[CV,l"_/eS\)-$Bk#dtHU(C]/)H;s?1#:YM;JF1FGPSrp%AT&PZ9Y2NcVV8%?^G7SG1Im<L`f]JW*W))]"l02I9)11/V=a`b6*R?"$6:JPM5,^20&d9_]!fV*TA()p&LiW&[Ntb\uMF+b-*>elcOgjI)P!c,S1Z-%%l0_M!^Pj?"I1VQ<2!"$gL.%%GrYk`M0P"2Jq!2$1FrD&]9j(8Sbi;O#6!^0*PGnhYGNl/H^W%\P'.EQq/5NgJeWDC=AkP-OV3up%+=Soc9,%@sird&<N)D@,6%^`3p3:tBT*eND8&CFW!T(OgHM^>!mji+VYGD03P/d21gH1+uG!PhUcS"$r&HJ-6/cJ?K=)jt7i*FoA%@k:?,Xb#*dcl*FnLu7a.4#4$LE+iXji7N;Q*WUS!joH:>*9#=bCnIm(?_.#`BBG,N!AZe5+u^OiW(o/o@e`_$.M;`l[Eg!f!$I,&%2W#"X6<euP*s07R4nP5)n1DFE>Y17$,VAsL8P<tq49h5X4P!$X?,03K@RC1^U,AQf;quXk">DTl.tlu7S=TP_\>A`=8E#gqNZ831%e6/<u3_V].i(uoDduN5K*nC<"Z_d;lP<_:7_3s4+8/*1?^87hpWhm9tc@o[B?L@/b,(S@?4[GXgC"f5m]g)$h:u_'p&*W5e.a:lW%'Xm8EH@INp-%tnRTF)9#jWi'r,Q+Z6pj3Ng!Zng'4DnF-gcBF9/e9e/gt-KX^VIG)l*%1sc@+34Zb!t%@/>HdTh@Z0QKW$)iVP"f%kI=l.O4+U(m[d111isg:/#VAaLbtbrq)e8uoG9^QPUp1@SSskn%4_bA%#=nd;<L6%C@DfmD]9B=/H8TKJIX?U?!`4!+[WUa+&On\%`n4;AG1*7eAW&FuOT<I1NZq2R!0IeZ2M%^*`&>H+0<nN]k\Fu<f[,!KW<,JI'A1hhfMK>lf!Ral_qp'E6_k2aL4AHudj,ba;OG2+%8=,FL5\$di$5#bh,>9#;CT2EO!=LSqTOB@fbeX9&U&aG>TNCGF=&m)n>/S9F,\oJ^]2ur6IDEo)YjK>/;Z`SD?,H^]P:$f6L_,]0%YSL5PpEjSTm+s!s<1YT!QBB#h,juG4NEE,X@%Ne%;V./?(eKd77=$kF3\=4-g/R!:>oMs+P\T)(&a=<=r54IE!WcSWaSO'536-o`%1dB,$oa3,cf&^!@?\+Fb6?Ef5p1(,Cd!W!6AX8da:tp1[)$L?kM*OJj,A(hDoM-p;Z0R.1Q9fOr8O+"78/37('C->IGrtIG_Im?B%.E,V]."&h[P?JjEEi1J-;V./#$cbFO,"*"cDVnHJf6(*Poc,Pu?TE/`&cl+L,q(B2^Ek9\@)"^m`]GSWKB3)f_s0CpcI$;*S.Sqf%]<_Pe63Lu714%la,QXcTrG@(,aTL.Z9Fb*1lN<*c#>C2(;G*8O;@4VbFpaF24Sfn(C[p]2>T!n]I&m"NoD[\8nATR"V6C[#oLcq[%8TW!MKLe\@b5li<?r3d:0IYQ\[ciT>\RbC0)@oePZ,Q1s0,`KZL&7tQ^s+X.NMWq$D2g+[<pm#n7=aICG&=0E"K;Hudm@\D"$054%bLc#A'XJ%gU]u1%#69T^2RR3>B591bh:0.[7Z4os79DHDZbOahbppbQ)>Q26)SjL)J>tkC#-:`(6::i``o$D/9P)]Q0Tf(dh>g?,%8.h*]g\KE0hT<5BNKe60d6n"3n]f$A9O4*fQWupXqf0_(6k,5GBINd6(D0rkfVS53;\nSPKL49+88<ll6Nd]X^fYM3:FdAtM6L"m%Mf]g<>TIMU1/[h&d=!K7YL`Q>V[)@S"!`M(,)_,8)#M!Z<Opc<KM_fYbB2N`7"C;XWZ]K"hIQ"CX*Uf'W<DooH9+I2P'Xb+7oqPR%Vubb*#\^h<'d?0`+@["Fkm&1g<9i0MqJ5Tb&0VB&O_nhG`&%S;S(op;mR%,mhF07EJj^ZQH4O%mfesSABN[&8`"u&#/%!<E`6rmA%<D.mJf:MbFT99H:DraNb$5''@&6YLP:%V\/FA5ZNdHdUUcXR8o(Hri`@EJ!ph'5A2,_,s>>q"l`f@:QY;K0aq71?pc*13hUg7hi8%:"kg8j!BF(7(=8l7C\%'ofZ9RkFjBK[c`\Y&L?oJVHoPUJkP6LW_b]eMNO1X4J6f@#A'B>clBQGIDEus"`SW5-VR`!'HpB$<p'I[%*gh5_8NWu2!'\OZUO@eeS.<?2o*RPgUc>:X"@)/rheC3i&XH_uR1(1a[B@H9qU0?`E8Al0[)=E$O.9nbl7YE6$qZBll23t21bT_,%[]kK6OD0BM]1/1mO:9,DL]X5]Eik8(=e,8U\OG.E0%gq:1k(i@I"4f3GjY[1@lX46L_POk<_X8?J7s=\CZcR-BqUGu.&J:=FZHJ2%?RCX1@FbYFX%_1fCJ'2l_2jF']j3Wd3d)UJR(iX6*ont.8;=`7rIn$---%p"T8jNtIQg@tSink0GQSr$jceO0j/Wc:V/(5GbBu$*%JC>^g<l2ETmC3!6RJYsNh_^KOm3[p]\;T%R,U],jO;*,B5SYJ6'd0M7b<Cj(n4JeFFI>^)"^8<r,"*uA='"m;AS58q"t,4h`el\L%5YO1(T*%oCLo'Xa8d[,N;ZqAW!cd&;"VF>5$j@>_$(_WhNg>Z52_h_=lk&(s!BNKOOY3DJ9D#TPaBFggX5g.P/NN+XpiVDVY=Ar/%KMMhDVkqt32=/n;h5HC5#j;n_=\CQuKEr.nOL!fB`ZD65&#QeZYTe\1*6PBpRHQtja9'HL#E:7gk\k(=N@g>>!u)nFWj)qRZs9T(%*:#=F5WRD*bOei.#SF/Y"$.i,jL#_=lunNG%0aq^gKB+.W)47<`=?$*Eam^uQ-OqhRkf"sU^.RXjB]^rR5H1XraPS4/>Z$Z\#e9c%9#&1.:1_>]!56?19FB-3cLuXi6hj3i_uLT.XjB0f'3LUO(G_4$!>39D/QIT<<IgIje20cJ'KW<m_]iB@Lc3I$:#ZoXGopGFH5>N'%b0NX%58SnK>^5g\&]i;\"AQ]p6\[B5bVNdT2=n'gO`J9RARuem2o7q"C>\lH#[*WQchblC&XJD-D>Z=M[ROZ(CJ,O:iqDUJ6&G[,%TU`3/?4]:c$RT-ZOCY01.,9uh3=sWd91*^;$FDYE4U1+*5bS*o./Yh53(6aJ0K,lH1/"R]nk*)e^ajg98DGt)QcNL7Q%lJ4LRWhR%m3?1=@f$L8[Hp@LAh!dY`_W&1N$9S.0J:6.b*a"#*p-7h\sSK,dY%l<"c/C('#4jTW9%`*m@]/=%>6!=>9]dA5ah[MFkMT61'7hQ%5,G*Q'%R417AEMA_C`$jIDj49B&paY,/?I!h@K\6?\1*X!^o6!+o?:cgQ_jaJ-P3m+N#TnTEu2Unc1$"esTZ*+Oeomrf8fen.(Uk%"2rX_ATK3E`7L6Xfd-&\M(qhWUf]E@s1)^8n.@)c2AsM/f`XHtPuT=o77`47JIe_HKW'8d=ZbTL=_;Ni7;XEZQ"L[W_%2;X+[SR<%+DWGGe5-R?aK#aB*]jjf^n+"p+bEYodU@'G9L;a=AnA;$&V)83U'VDWnc0a,?"2m(iN%gQ6/edS.>*eD-WF75C9Vr`YZ<VK!9l6a%Kl@eM$36mlb/T@7"tHfR@M=(/!9bW"os"q\2OZ#q&QsXO<iK,32.]YsJr3i4`:+Fb49-3a#iVbeX:un$,#"95<%>Pe?6N^KB*B+g%La\s:i@uY\jYUpk<UCu.7LH>8/-NtIM9`NYps9'+1'F+]8/)%p'-J!QRH=-I1PB.>TM%NSHin(L"GqLkq/M?H,c``nituY;8='mi%.;-XDAB?#,d05?c36(BJkCo>$M@17U(83@5;U%jb`\#Tu+XD>V;1k/E,&^LoCkFGgfSJ5@&I<);W7)Bei8KZf>3]e3afgI3Nsmeu%(D;!^,4GS4:Lfik2@E_fUBO)<\f;@VeOUGU8/+Cj^7*0)b*uub!RZro+>FcQ[tKf(-"YiI$r=+0.TT2HTd^;Tf\kd%LhHjgUTIf5%'l&$'>`_t2pMWCVm6h[5QocEUS4F_Lb%HC/)=4F:L%tF6=>F+qNhY'C:^bfS$:V8#D?]U+4_!?8M8B?gI'\#tY5gX<H3.qV-uR^&%X67,?!d(gDef>X9R,*lJ"NR2MrlB?QM'8n-'"&N+JYX,N@>,!f:u4I+&-3ssOPD3bqJ%ni(5aY]BVB/C+T\e`'2=8_O^%7\;WD7G%n$NJB)CflH#t!h.it7)\!m!nYR8kXX<lP?n<2@D4@Uio0`\/Q*J/Bq"Gkka12o#i1`\tUqnGlk?AR#0T0gsc&FP._rUYrQf4GVL_%7!=igKFbBjO".CM.`&2b_R3(RP9C"R]4Ha*Lr*X'k_f#Y)'K[_!-X%@5A0WSr5YYAMNJP^/8\pi"UU3:DFL@+0L!Y&Y(+4)HG%n$%/<'$@&&410(a0FK;5L,@-=0dKjs!^cob9\D4K@!N,;Pr1:@7I.hH3U6/n-q+0Y<9-RSb[JUKV8O2V`&>K$K,J#S?f^P'^.";o(Xl%W?Xs6"a@&=;+MEG7-,ZUKFjXZ[IZI3BVj8;UP.03XW<X^aTI@=7oWb3mRD/eX7ihT!'mGX0e5tK&<W#eM\9Y3j=&&C\BZ)Fi9o=E%NpZ8cMSC[\/'4ldg;L-5a)PtVen\N@`e34Pn2r4g9MVh4=-1PGO^\kMiFEJIKEr08J<;fnQ5h,gJDitJ3h_+fb7Y@pjWR%Q!USlb%RG'g>*7HK<$lmep99f:h4s(t6ig%b.L6sQ]_[tEgF4_Ta9j'gt!%",P/n4bXKsi\obgOtQXD)8a!)Ec%$GVN)$_:`sbM^CSMO%eR%'a)l1Ud,e!W'Z/7q2!ufcpjt9`4c>b')N0qSRUdX#Z:DRPR*84_-1[*dBK'e`mtu_:l.qW6fjXPM-F"a>60>PM9&U#$),kf;Mn'a%4s#8+N=VsD=rD]N9Y;oFh&,8_KCB9bdY.sh"d%.JlS`NXbob?jaBi];@4D,[-#cIK@TTlpdh7;<,@u-$?XLUB14gViT'/LoaF$D/%-Nmmjk;LmD>9B4T&5%'WB\X4`mN\ahf\h=/!bMRKs"Gfoa06H?!D!eh*Lks5G_>BZAm'tlEXlVF)&<c.M*OHD5jC`_>\-`seh!_n%*q1_R)%d)+\5c!7,"*23W^!g%Z8DtC\!!_P6"!tT1iA-kk9W"s9=kkcS1EtR7S$DP1FtqMaodT^bk+OWlr[hqG+K;qAP`EI+X2k1%6l87rs,n:C=?BnOjgA)ID&3dp[o4IY!$hm_V&t>Y>plYP6m%lL!D)p&<"S9@#c&o^U@Mto7ZRm=)K77$!foh"3&1ifKEr08JBdmd%@XL4IGUP$+fHQ$5ftf8FVg6DFrEuq0d=jkEVqd4RO+G.o4F,J*9*?r[]pHpbL3Kj8.Lj$lJ=I<!E:\-Rq1t5m"!W&HPh5KXA\7iI%)(.4>*2p;$W3$JCX+T-kTXHmZRrCh)oEj+C2>3abSI@R,/b?;D_B1AWp*[H/(KJghU@$9JJ"$6Z-*W*MS-o.RU<pSiSH?FK",Ore%bktrXSsb(G/i!R>mDmZVh7#e&?Pho(lZ+*HW]?F*J:QgmZnmG3VjNg66/IS@nD=gFIP#aYcCgOBmcPLhcmlt7:9]TM)i]oGOn/E/%!j*ga"C&Eb8CeFr+X/!_FX9>sr1([c)'U]rZhQ*(#(/hn#l)Qer'd"KlSNI1'&%)&6-hT)*aG62QP0)h"d[9V*W<>O7R%DQ5PI[?%nfS*lP@6$[I=YF&9M:,:XtB21A&*;9KI8$d&K?Mi[AaYi<!P3?$YFJrb\/(Q.lHpA#Wr:6QE$9mNtU#h!+2d0YX8\OXVq,uYOU%R%"2a5K,%-EpnggQ>gumKfn9L#NK&#DB\^.nZOE[&:W6h,kLVifo97Ob"?qc!e`38r@>PL?(gb)4t7)N`#M`<u'(;XarcHL9^8:qe.%EU-cU:iAh$_2S("ZW:(M1l5M8joB@0Q`,a1/D0Ml%gRW5Se[4AgRD9^a\2DEV/&'Z`0uqqA!;4KK1#`*F3I-&St-6hreT/)TL1]N%;fm&l#'8%Q7"m!i3djCJo+A-CKp!kOBuFP802;6n-245b5@]V4R+O1`:>$X?-/Jt@Bn0Ub1Sb?iU^E2j^%]mQ$K3)W0^m-#\.Ld&%i?KoM_uVnW:Ldu![TrnYY-%j^7MV0C^C24Rfmqu6.q]D@<In8&0/A^i5muPU*&qkn!5EQ`bcRSjqP"/K%RC#)]MlV[U@A0E3Ac$7%SP,asH4h-c9r&)Mb+^P_q1slOnau+jf;g]7Y==rl5q0JWp$1>)#>Hl_RU@2tr]J:#H'!gQ5k$+&4!/B<AZ%6$1]*I?iHKkYFSK%E%@mo!UW5Q#ZBC>U1c<V4&]?>dtSYT!WH<hEPIO*588B'<F,'4$JMmFHH?oKkRD[MDmDhP0gnlKH9XNn[iS\?"Lq5_u2R8`"K+p,rF%#V7L*DcoY[bDHfImV+&&jdcPoc,(?6b*29=@HgjQ8*14L'hHH30-t7[J]TMFcY'MVGd3:jotp*ci5UHYDIi6<7d[:7g0##Thc>h$%i?NJAEpVR,hYVXjl0fdE69@ElSI[^8K5l04>%:fjGe.h$Fl*j"9WNWmbm.poFm["g7es)MpehKppIhA(0Gn9/H1g^e,.9c7Gu4>.%5^6Q_r&tnT4@o8f@.l)h9j\]/K+aC:^"p@.FRG&H.&oLkYB)XRcKujZY(AIRSR1_`$5DQZoJCd:r4:W,IZ4RY$-)-PWt5rS4VLj/%=LigtjT+L/&WT\09t/QHcDGJ/\gX$q)ud_;W4ls',JVslpFG^OqK3]Ti`)*Hga<WB:D/nZ=EVFu67En?&B`t9Jk.fm-$*^Z3^mQK%nOM^#e\DSUm\lqt(*=[eN_NE>a0jQ[NS@;QVHp!+]/.73>n$>-)IMFmWI,AI-1Ql<>'9.=pZKpfjL6N2g;>Q*o)QK<?"T"gEUl(#%e"8cr9)ppaF>,(_DjP-h?(qXK$1C=kiSAb;Q-BRl9U^\T"ROK7Xu)^/D"j'ro]pe$^Y@<<DHD1s>o'_Fs6G'Np"L+gp334QT*)s&%"!X*75%<Y4A=]kG!4j"U7qPGW1(1nh+i4j+35@3!(Xgal#oEIh(_\L<,3Pnu4b.HcAiBE*BY)`W<_I*Mni'&\1&Ya-:t'R\!S_J\%9'R$b7n%0rn>l9e]Fbb+T*m3ir-4r[,)X,[/A#($S4k.bX2(okOhp(Dd#/s\%q)t>a4U]ZLV!E4)f'qXkPcq:&D%F]SB$[iWr5Jb%/22SW2A.+jIXJ"S38[dth_0QsM4d:$@^qF_7ThE7R5[TLj,K2qQ5F(7jIPQRg7?en#HbPeh)'P#p@%Gpo;uP6DX75em,7L"Q]W.a%3rX60qt]mNhm-ML,BJp\Il[N>!"5o05&s_34F_V0.Rtg47h20bnNo5m_$^Kt=oHg9,pSISl,^=2n#m>b2u2&rR`OqN)pp;(X;jf3%hNUVbJPUq6qY5Q8bZ/AGajE_]$UCNU7c)d74]ZRhaiJo/;2MIUU\n>Ec+g!F&:O.RjNBa+^ML%8L98G[lKbQ:qpqBg^nji(lEo/S%m:VecObJ4hYK8A1,1G_YOXj/q/G\P#N)#7#G%1A\->8[rm6#GOLLI9*&7qEMYX(>u98CnTi`\C@:@bhAh3lG?eiAPlc=,A@SWaMX%F!A8?ONo;=?s,:EG7L:YEsN_pF,FCJ:3eF^e#:4#H/iuV_cZ(EauY;d"*[L^s1<%/r-TUQWH6QLXiBZH_Kb5DaubB_JNKcRL>5FK%dR5OW*Y[WXCD"C1O(I7BD9AXN_%d2;O##l!3iL?XWP>Vmd-2['SIQi_i!tY4$!6Me."gs&K.`LQg^XZ[-WclX\:^OQ_GrZGb,"q&%TXYCX<AfPk>UF@Nm37W8qs0j;c>_>%q72sB=8/XLV^T(/mQo(a*qh")O7R1;h%ST`#3Mo7,,o`48a3Yh0X!q;-u0EE[_ERe6YnEY%7r666;0R[?[6*<&\_Y.EV=&>pmAkSk@0l;?oa(!84b`GN]<__sYC#J1eiirarjl_ZU3glCU-!KnXaD&DliG>r*dX&n%tD%&mMUcK%?<iQ\NnpHdrZl'p]*C("He>+C4jLD4F\hJcH[dUsPqgW+E5]C)dA*d3r7V'QeGK6la%N0YHLU?"fi+of*H8qZiJSbRmW"iccN$!7%n\)RVnNCb*KC4TNqHV\f\q`N)?hXsrGV=CXhKt>QUINDH]c0ompMA0'gkS2gYt]3NNppCZNRfulPr-F^o0t$@dm=jY?&%HeDAs!t%@i2*QYth>KI6#7pohC`4nd&Yq$(EWr`\9k$_,S[=r>q7$>Zem2DVGCuQX^oAKkOs5d7,fgZdrL6S_)NK\_UEilOkP5!db\r@i2,'%@%C=-D93\9k?;0TUMFad>R7BmLCnA3j0TsVgT2#EQBfQEh:URb#KP*a=fb8`l7j,?TT*@iD2=StB"fXnBncrK^5Uo>=N5!;V2\n@%T4'p\C<hd_2p:mFYA5b+3u7q`EX^V)UQ&]@2T0.N7:CO0,r%?A85gkD[fPeM9P#NU[30;pA$chAeQd]^R,P'.[HLV@=I3GWUT*KH%UlAfA2M.?:en-]q<bNNg[W_`;1/&]]8T7?4D%'p]&^7W8XL0AW0q]soqi-,K)-5?KB9>*,1"lo1g0B0j=5g0Z'%#bjHm<&;bupj%%@72'N9Q/[2a*%jlo9aNG^bXUaO>_hJg'FR%]=)CA)!XnC'j(s<cl3!Y$L1ceNF@c(K#sI&:k/$ECG%A(NreQ%/>Fpgg).hC,?RJ5%!:9,$5VHtRJ-U$Ti(\_..?VG]!SSC1Bd6_M\&Ipu"M&/R*IW`d)-.RK7\l#PS2S;bDjR\h</(p_RT%k>.cO0Y$.(mSD%%ZC#\I\9%iJIg!gR2@CKu86h7Qd,Q@i3T_0NBq"QNVS9M**=45(l&"7"0is0oXLLY`@Rmlo_GeDUt`o=`s05f&^"g]h#LbN+aH'ObSrV0f^f6%:So"r_[Mj\>fne.0oXLLY`@kd<gIK><L"lO>Rg)qLun7uUlAfA2T.Y&pG:U;B[Guiq5gte272BgQIFJ2D%'p]+_K;H"nD`](cW?'%RWCoUja<V&g).hC6d3b.1C!]E8[D'iMg13qOQ0)kQlIs<K7Gk71"lo13/Ols,B@$hH"G_XW##b5E6])5$tHXfVJ:jV5fuVOcE^BM%*1c(k+f8$DgG]1N%-+]<Alb2a`Jj+"Ak&"&f.lVCWOY3$BOb0/BKSIjC,Ys,;h>`XNN(T8!:+Zag-W/$N+aH'W]@P,XOQ3;.u,u)%c!%3l0_ksV?(d0cS2S=03*Yd0H<\ZA1G0",(got"_&Y`BmLit=D2;>?g[)0jPK9#-G5Rfi$H+DacEo3g#f^O&Ql0PM#H@#j@"22q%X*M"eSUdpapL9kV@72'N3gq.[H)F=['JbceNXmoNZ+;,S$+)FGd7,g-XUo<P!m?7)HPK^<C+db7))["#g'FRqg$X<@2#!k4>6)dh%Lt*bT,AdkLZlpc3Q3+,O`<q#;1`%ZaM%D!m/SGO?`\9k$_3E3;Z+ZM@36pfd?aI3U3*(]pPXDf4N+aG<8,"3"4t)2;T*);Ma)[?R%O>_h*D$2Y3/jMp;D74Mok&&C/Ve5<H5VEVPR^^tjXEF[u0rVV_*Xu5<@:WRfg).hC,FGJk"_j:h@<i0[J8ADFV.BHig).hD6`eb:%V8?[998+!dh%[X>;.=#P8pcLTL,%Bn1QoK**R^)r5kO*&`.s^uQV$\42MMf\"B4VH"`::?-XJ#4EN@J%aH$X#:hq6.(rg5Vbj]JU%qdfqO&s_D1"=oRo86A2`&SY`W_.@a2@sm%3g$FN4bn`qRIN6Cc_"&JpN4%RrBk9`O\f=@V8$(oi6B#S&R$"k!VgV#E'2UKn))9]+%UlAfabop[F5SJ$4E*^nN$Xd8#-%*bBZn[MQ,8dbg$RP5&/npm[XNN:Dg3=D).)opF(t2sE*=]^uM\soPeU7tB`Yuf5D$4q6>bSQW%g0ESt,tr:2g=!tpU5`Qnk00(j:%45p!?01Ep+1%hF!O!m@lf@cR-uAS<PWu@LcJXsV2\oDn&ED<2UhY!m@uh10P3I;g)*kG,EUFf%NDA<HNU,84DhrNrQLM=bg).i\F,9@sS^i*fR4"CcPH^R\TE<+s`+m#dI&o\!)9#sEP>k?dj!9F,S>09A(rg5Vbg]lb>@<f!.bL)$%c6B-=.XIk`NFA>8`!kN]D+RW/<ArhOYqBI!;pl#YZn[Ng7PJc$@!io;%*#bra'`i(*@&K0D?KMc5.@jBYZ;mdkB<-oQAIS%"P*p7%E@j(!SFm:P3FC)T"k:9+)T<&tSpeh`\YAbU2-7/VZ"CFJYiZL<4Ms?pC;qtn:K^FgU8JF)Pjc5M2MMsZ++3FImHkh%@S&?a/2)Nr%3L3Pr,&I`5g'D:95g*(Fg7JO2l#6odjjY'ANF>3o_3k6?\N]UL4$,`&,CjW>lTW*DD29(EUq6jL^SL7"U.1*n;M=@"G[DFH3^sF&%-h_^UHOKO*@a)TIZn[O8I6u/bg%JP.[+Y(fj0ZA%>bAFMd`/MG\(Seqc"=)g]cE%H@W'NO3XmdP[sa4Ud,ZYCOq98K=I3H!a^n)V%qaE2.)o9aE`qD88!TMmP8-603c(oZYNF@c(JseN$9s*Pp/jNHJD(\Z1V"RsF(fp5dqj;*(74X7+!T,>6?&f5oWEIpl<q1Y.Z&Ul/%"CWWT@'IgHJe5Bm@$cG=6)+OE7mWJ("BGEC?=_9K!]E[X(3U,hf]?Lpi<kN+$9I5kW9T]Xes]UdBTa\l[_^IS<XoTde1)Z'JrDen%Wqu#_hMR&#$,XiX3#Dit&.KkFJe!&3b*f.o#;VS1Xj!dA'C1<@Yfjk74EX18_h^:,F\M-oA#3mEDnq?#6gG2dS@C]0`\9k$@]!bE%9q`h=OLB\&GX7c&HR%7K6B'<HR&Lr\K::MQg.+kS``a!i+'QfRN7!A^8+2?]T2R!`kl;D(MUE?JStQW*@KhhSoWaG=Q^+m=WL=da%A5!4n/E&?>>0fOZd3!b[E-1G8VHMrH1<nN\U>T4^ec-g1UQ&Y%^*="L_sjT?RpcNM\^bZs$uHF5Zm!HVP+iBPP+iBPOs1?POAW(f%m?3,?BuR6_Re30Seh6b`$-RQER\c!PbZc)s*Mui84T]03g3t8S?&g5)7M<ZIa3*OQ*PE\e?I\4aY\*KdJ9<k!\.-X0`it?TEIH&7%:`qNR=\qcp:mu>2MSTqG-=&k>?%?qK&F5E)V5SAsUJID^8]9987G8SZ"POd3\:0o/[TG''3OW%SVO<^bntl\Y41865j4;&Zk+'BT%4Z2CJ(3<rL/8Yfr3@F>Oa"HU['4A#Dr0jsJ76?Aq@aBI<!hquMZQa4,QA"X`@R\p]f?XFtXLo#pAU,:ub#H[k<j=&RLR'^4S/nAD%F9#u1f)_Ph9]!g\+N+Vi"8J6b1Ton'@b&[ilR/kr`#RZlO*S1'+Pq`D1sC+V`-+PRJq&c@3P-Q#8IDI8jbeY)(:9!QEf0n239I=*%K_ICY0j&?A^/W2:Ck-6R,(^!!W_UG(>USKVY)72c`iqK1f5mM$eoU9'D;/Z8DIYm6I\J7Qb\\H^2&E)F_n]1eplgRlHt*j@_\":h%G<K.eUD\fo:jdYLQX@n1)/TLdEOT*qp#9j$lZ.sF&#,%l6lWr^+'K9HTbUh`5VI6C08j8!,j]%@-mpI35/Cu'D1pGuRLH6nLjVqU%Irtn#dB@5]TlINK<8=rl0u<UW_Uf'FpVel9AfOb3+!s.,GSo^Bba+9!+(>C\j$%'s8U!'1>nUqm)-0Y[m'L.Sl[nlMYn",:Pn\FH%JMpD(Caifs`RlAO%-+]<AonH.C9hle=Mm][7uK6li4Rjn`it>9Ys)bFr=\l:POo7@=%q$q5k\_dI0gNaLt,bYpG$P5aW&s7^a9+b%QX`$?R8edi,K(M'%JlG0B8j(1h?GW,8[``ZMMCF1(l8i4S2S;HCaUXag]fscU)aPuSEl,C"kQOtbd!@2<-(DW+/p4=)PR*SL/klu%+7##cVQA3"_eMk'6aMG"2OfddL,lTha-?P-J4R,#bb'`\&qY[?#Gf'[l53"h*Pk_2WD/A6VV'dc3\)Knen%rM*^QT]@@T6oABhNA%K2^H-_$X;2p@paX?&fYE3g45e(o%Np<O:NQeTYNJeh_hYQXbV^6/!0qBL@a%#.\[s\;Xcb3"]EREFBKG!3\tE1"lnFFt3T7*q`Wk%I*\1NV'PpXgP+"o(1J#fLAD`K9<#ESEc(npc8bR;2DZ9k[Q2,[D%XScgH*qrR7As8XYZN5BOb-Vg=@9-[Rs(P@PoNa#$m>@JCT6P%K+N*=p+]Ke'!sYH.>$eC9r-$*Us2K,bs(:26\=(DOWu[:H3KVj+>Pg/ES:ua<ddi!<ddi!<dc,X$[rej6E@i!Gg-Q>:L)3Lc!t#)%Luf5>4GMBk?LT[^DDrg['VTZ1Yae?*"aj%#1"m313!j=;N0E3!a#FCN*6(Q:N7!@sY;oBF*gS/c*`b](<<UL/OGDq;:I`WV4,@u$%:PL+Kfi]--3,OIs22=A[4Q8_Jr-hahkX/dc+m."QN&3&T:#t7\cQnDZ9uo[6@%9-n/.[Bs't-c0KZ/++N'q2,aO%p\:)dY3O)88.%0q2q^G'%>;Xe<_%IC4Wk(1Ia)D10Wuf!Y+03(\sJRmiJa`Ze0?2MNs?&5tFockLL]%h='bJiq54jm3\aTZF27j0TtA,.MI7*'09^%etDt%<hC#kBc%coZn[NgL6u[2B)f[\:nTfaFRB::SCo&^98m8K2T3fGAa<3i<E7Q,H)6dW=@t(LBk&!X%5GmaPjl1RP^HS<A.F&_%Ai$p^3J+dRM`t`58K.GVD7ln/#<%t8o<iu[_-B4/O#_'[\`GW&8:"nD7)$[BSB.0db`T_ibXfD_9o4W3MCq=],XPW9Bk&!TNF6?u%\``e5gpSSOR?%l_Re[#92MQ5*&E=AR%6Ki7Yu)CJ3S8DVbbpF<2Bj!a6PX(-c'SY;C;sAZVW-)@,9%?E`it?pK9(/"cO(`nC3++r%*rft"Y::UZC.BCu1"lnF+q89HccRF@Cs?[->EXk#M^k[ab\Veag'G\L@f1<i=MOV;4i1)<QP5na$f2]?]L[@WSl$#-lPXiDi:KMR%/,4Ga0dD$S/^2q,)BH0XP"%sQ")2iXk/a;]ApPD5apH0uW-'F4LEZ+t>S1i!+i\1_b_^ho\aLIhR`tMC/Rg8s(ZSjI(o*'u*Go;m%OWkLW?eZD-`4?p]\UDcO`\9k$@NB<&6Knp0F-Dai#]#SWMHqU`(e1kEXOD3;^:9c&k5j0jo3-hDAIL*!NS;EH<&pONA*<j]<#_=!%-sIot"PO^4BHpW78[H(lKR/d"FuNQ+$Yhd)k18m/L2X]aBD=CM`Q3f7'+L98/'t<u/9B)lpfN;CZWYR`]C?jYMs\M$#8Y'J&Wm)`%Zk:N=A]Z1%/9r)U,+Q'!iuH(EjH3Q1gl:2?+ASJuN3Uf-a^`Um64.;H(fk\'SW>e/^7<DCA4[5*I5tH%:aul.-hEO_H#Xia[u6&R%K!!kU((e@j^+OfWMm(*>B(<9\\3]A?.FQ3i:)dYSQc(\CBRODA+!l0W2<`7V(7ZoIh\X>GaBk+K=Ca)!O[\uL9IctEKil1+`lCct%Pr!JTc)<]XHPkI)=Bd=(M-ui3`(\E.f.]'lmiWu,8b-<`b^d;.mu(\ak(%B:A8,T&;"!plUlAgNDW>5e/m32;\ntfn/aK?BEbc?P%L`mP_0.Srub)GCJW#<q"n]8."[,2O6$tHXfp.n2Cr);"($k6[pgdj]33K-[j@88)@O*NU<kPj;op<Q1sRR?GikW-\E&`I.B_S\cp%?U_4*%hnJ8()Bc!^)Ih&K"`0>4bCD;#f^RGbgEHokFP7QhZ8\jJUfY5ES:s[&LD]$(V(o*3FN[A^pl</BOdEFh=33u1[]_Ek)*\%%(-u=_k>]-kNF@c(`#S_9kAhF-cV+g9C*n#\rZ#<Nl4#K2<45`3n7?4MgfeY5#u=qj2>`cY4``"%2"6%WUe_--oGGS],FEP<dV3d$%A)n4BUP\1Orqk]BfB+4$JFDoB`sC]6@TX]=#FsNq$U=M<Fridoq4'n:TPVsN')>:YZ1I0&B&j&Q3b4gCoHl=h*I8o^1HA=6if^g4%3I76[?QtG7cQ]X[9WngY-bi&3Frb@,]cH0i+O#\*`if\'-bk=qF]t'qW3RgGjr@<@Q%;r(/l5snp+2tu@>m+_\6`5u3HEKLbi3t$%(9o#Q0pX%3`&]r?TWq1V-0<7'S9$""6&6BF#=KNKSG\()Ah:YC'-NoUOQ53*k#mYf-DZW0CkdW\RpfHcEgb#0kfZjV',aK.>lHIb%0oXLLY`@#"B_([Z7a"Rg(Sf7":K]:Vb:kQ,BO_n,7PNjI[$^o^8%&cr!>EJcY=KVM(i>'H?a.d)O2o)e\<nW]DaI.%I.ffE_`2Lh%RCR0II"O5V?s-*)`^bqa'EQV$0Ld!j*M(I$k#c.SUERr3pF`AnZRe22V2\nO)o4QrCST.S9_pj3$:V&>Y`a*NUlAfA2M-'n?=X_3%=jST7nD,;>AQV\T?B@("1"loQluD=!'E=j.@U5!Sk>(NDN=^0VUA1,7gN]%co9V=R@[$W2)E>"DiW/JnK)fDg&Ze>@odjN86HI0;%3.=&Ld:siY(e1kEbZMDmrp'dW.fm6h@U5#A$6n1@7^Nbd`EoQI_JY.FCo0mMYo*(l+`.W<\7aO93\1ek8Juq2YCFZ3_#UQE]-#D>%0Ld"tbW#k'PKPN$T8XWA$'7'"1"lo1C:8/Vi^4R;;*aSH1^mh2j%VcX_`2LhWElf]9,oap:#uHISC8?P`7Q(l8/oG`D$3d"%&1LO%o$eC^Q*/6`7MpF4Lc1!m>e;01d<U1XqoD^&@D6rk+VR=K'@FfRU5`PqS-A9_G\]hR\Y(B,KJ89++kddQBLAkrB9'Y/K/+()[V%Cf%Y5kf6jKm.'MiV8)2M.>sAYgB(Yq7cA7=iFW+@bn.6lX%"2M-)D%4Lr:5*NHKaJ6X4"Cb'57bS^!BLC#3<N2OqBK:UEL,Fmn!3@Z\%#L8oGNF9/XC!F[Z\h/(I.8^R*;qRF=$l3:t7h]_JA%/@h(dIE+Zd6P2-D#W,ZP->)*(L_'Zlu<t1IsMTSPg3,T<_[k&524T.al<j%:)dX_Q9@<<3T)&"G=&n`?n1V$k_MJC_]7AA1XU_rS^Qbl!i6\o6%^"9BnNcIN73LuZc?W+44TY7P:TTL0uripBk(8_m0GmfFpr_!%<(VF:"*[A&>`PsQ^FX&B83fZR0h**k7^&hB.jF_@>P_6pSK^P2&8_hcZm"#JF#Jg+0plAe7`NiD#K#]#%FN0LU5`Q.a!aU/@UXI/%)/hj#:0S9H$mXI3f$UP;TN-P@DZQm=YV*u;1-r9%N+aG<Va^@Z1%-Auprf%[&MY=m!jj\@dtUu&<U9FsU?#BHf9!1rh&stH*,^"0%Zn[MQ,FE2Oe`YVf?>uAAcgHT+b6!O-0oXM7R*dXIPTt4Od@'[J1Qqj*12S(GA!dO3cP\'F:@[UjP'YT5jI/O`>bm?fS2S=8g]jq&%1+LZ<&%(6@bn7<9+`.YJZls&41MYf-X_6/3g&/3-KC'.6)oEM0">^[`k/ZbeD^GMMhEe6dYmg(9,2*l7Es^46N9B$h6pp!n3e$+"%\1q*FQ]Vqu%-+]<AgBVl>I1gc\9UrU\0]'qN)EAjH&.a@K&L2[G)M2"gCW5!,07KN=A!`ZUlAfA2M-(YD(bphT%sojX_o\*5%72=%7bS\KZk:OG<RqXZEP9N_V\Rga/1.k:ASGXV`Ut]&1HZ(eIA/QOG;:sG++2^8amHj1'%Fr]D$91g41":5>BH3K!Oo12lonUg9!YZE%D%'p]&WHOdFC$b\f!dGj70N^X3&b>LGrpVS@;I.*b^-]ppuJ!allM-"`>IC-8[L42d>"$i3<>PRVHgtehY^&e.Yq*c!CPQX`b6Ta%feMi1Tl_5`%fU4Y\f;qtK4nas_fl\7lS*%]A1,,Xh^tDj[OCOJfNCid_h^4&FkCQ78VT+_mBHu(J%upRG.0HX`\:.,_$h\_5p%Y6%P9ce[1(,:(=2ZsID%'p]+_JAVG2K-t#&#0^S9X!X&gl<L`b7`@_ep>*PV3Mb/JE5TShOd26eWAHZk:O+0Y7up4p?aE7'+Qd5o,EB%G**=\g'H9Wp.WY.WOHqn18,a6N'*Y!)oEM0L`'DMnfaOX"n=+5gORgb+$eNs`b@fAUN_+XC;MrC%=(0XXRL*unkC9E%-+]<B"Wb>%pET*/2"Zd[QA4,6DVo6FL)XNj2T/;6QM9NdlR(IB=/!>r=NRZ.5T@U#D2<>A^19)8ju!43P?'e0_ICa0MR5*sd>"$N\*_k7SGP%"%IA"`n+2_Jt_gN;T2MNs?#\KkUX","am%T$?!'e%h=_!gXaO8)4JkJWuk4iC7)`IM$knH3f1k%h3_]!DonhJE]1:"D6f>u$J8f1]4%M)L*R+a;&<`>*TKK'=-AAAN?r`6rT@M..d_WI:j8g1d-T<eCJFf&YVdB^`6Dn1J2"Ca0dpNF9a==+Di\\g5pK&iOh#QG/O>3F.0J%m:-WCL`)hsh>N_Ub1c:rlZ.s[VN<]j0n32Z)'5Zq5\1(-g_2Il1%&a1kO)5@)oG:n4ajE,mjge%/rXiUp?eAFQlsCDN$3$Hj0TuL%4_7Vbg'u\T!:+Zaq(.UcL6Z""o!+4`q3X+H*:j4_:b5C)@?g5FBO_n,7PH%r<Nt%0P(j<GcR_u)JG%.S?E%<qLR;SFp+b^5;@s]H%mN@:1$s8j+b[,t00oTcj)#%OEm!S$'?lAYD@rX@s)oEM0LiqonEohf@Da-anbH[<'@nRcY$8)AUR#/gMmjC`@kaco[?l#MB=%""F%f\OdqB(T`Z.4O!u>*0G`Pl`\+=VGLZ(o%NpA$)u9L!IK4XXA$(f&[`;jUc8;,MEE8pbmF$ODi$qW$h`O@V*Z,2#8R$N6t*K*m):d%@3GAbHPg59p4]k.N7l*8bj<YnI%QOUbfXSgI=sVHB=t]8`/$=')-t\1_),88Nq"k=$VqVY!tfAY,MEFCc^\&fM\qs;Y?3,*^pk*\%BO_mSNF6MA81=0:FH!T"(a4ti$)94$g).hC6d4m6G]*RDIuP4%Fs>4@/2&a+`it&!D1'Ro(tOUPE#YI`:VG[E5`6rDhIgP4=M\j)%5/o1WQ(Yet/?XMG)-0Z7:8EkXN&H8**bID8Mn0&E\kKWYa3*-f_@kto#f^O&R#,@Y0g0V2[jWChLsFQq<mV^hUlAfQ2T1PSb4*o4%U?-Aa'QlB.$5OM?Zn[NeL7"+q/Pi3KZ@kc>WoE^mMc$Q6dDdk0)e(oJ0<8cV1%MKAECPn-BG,.jA$dCkC^0+Z@!Sm$K>K`8B`#ZT%+DhNsZls&BD/4'fZVC[K5>sVHKNLS=(hmIsV[YA/mUpE[2bfp7rVQK5Hn-)&gH%P\48=4"ARrfFN^'*%IQfpl[k*GXAFB!^0B`?9%@%l,n8++O_P**Z2<]Moi3HFo%Nu+*NpqhSh<aFatb%lE.I@W$,Y-Z<7l[2k3e!KI*[Dl6kMq=Gj:\TqMF*9`/gDV#XE;].janbI^%mb)mOh7)GEG;aL>q=BsAa5>4Wb$RWpSY(=oD`o'8pAW7M'I$-,nZf@Dqcg3&+3eCtb5~>%AI9_PrivateDataEnd